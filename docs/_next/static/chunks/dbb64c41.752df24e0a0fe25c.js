"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[759],{999:(e,t,n)=>{n.r(t);var a=n(7358),r=n(5927).hp;!function(){let e,t,n,i,s,o;class l{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class u{refCount(e){return h("refCount")}incRef(e){return h("incRef")}timerAvailable(){return!0}time(e){return h("time")}read(e){return h("read")}readSync(e){return h("readSync")}readToGPU(e,t){return h("readToGPU")}numDataIds(){return h("numDataIds")}disposeData(e,t){return h("disposeData")}write(e,t,n){return h("write")}move(e,t,n,a,r){return h("move")}createTensorFromGPUData(e,t,n){return h("createTensorFromGPUData")}memory(){return h("memory")}floatPrecision(){return h("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return h("dispose")}}function h(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function d(e,t,n){return Math.max(e,Math.min(t,n))}function c(e){return e%2==0?e:e+1}function p(e,t,n){let a=e[t];e[t]=e[n],e[n]=a}function f(e,t){if(!e)throw Error("string"==typeof t?t:t())}function m(e,t,n=""){f(y(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function g(e){f(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function b(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function v(e,t=e=>0,n,a){return new Promise((r,i)=>{let s=0,o=()=>{if(e()){r();return}let l=t(++s);if(null!=n&&s>=n){i();return}null!=a?a(o,l):setTimeout(o,l)};o()})}function I(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function w(e,t){let n=t.length;return f((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),f(e.every(e=>e%1==0),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function S(e,t){let n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:w(t,e).sort(),s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else if("string"===e)n=Array(t);else throw Error(`Unknown data type ${e}`);return n}function T(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function N(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function R(e){return"string"==typeof e||e instanceof String}function G(e){return"number"==typeof e}function W(e){return Array.isArray(e)?W(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":G(e)?"float32":R(e)?"string":"boolean"==typeof e?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function E(e){let t=e.length;if(t<2)return[];let n=Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function z(e,t,n=!1){if(0===e.length)return t[0];let a=e.reduce((e,t)=>e*t)*(n?2:1);if(0===a)return[];if(a!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,a,r=!1){let i=[];if(1===n.length){let e=n[0]*(r?2:1);for(let n=0;n<e;n++)i[n]=a[t+n]}else{let s=n[0],o=n.slice(1),l=o.reduce((e,t)=>e*t)*(r?2:1);for(let n=0;n<s;n++)i[n]=e(t+n*l,o,a,r)}return i}(0,e,t,n)}function V(e,t){let n=X(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function X(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function $(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw Error(`Unknown data type ${t}`)}function F(e){e.forEach(t=>{f(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Z(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function K(e,t,n){if(0===t)return[];if(1===t)return[e];let a=Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function D(e){return e&&e.then&&"function"==typeof e.then}let O="tfjsflags";class A{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=P,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(B.getBool("IS_TEST")||B.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];B.getBool("IS_TEST")||B.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(D(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);O in e&&e[O].split(",").forEach(e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:`${+n}`===n?+n:t}(0,n)})}}function P(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>{var a,r;return a=n[0],r=n[1],t[decodeURIComponent(a)]=decodeURIComponent(r||""),n.join("=")}),t}let B=null;function H(){if(null==e){let t;if("u">typeof window)t=window;else if("u">typeof global)t=global;else if("u">typeof a)t=a;else if("u">typeof self)a=self;else throw Error("Could not find a global object");e=t}return e}function U(e,t){let n=function(){let e=H();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}let _="Acos",Y="Acosh",Q="AddN",J="ArgMax",j="ArgMin",q="Asin",ee="Asinh",et="Atan",en="Atanh",ea="Atan2",er="AvgPool",ei="AvgPoolGrad",es="AvgPool3D",eo="AvgPool3DGrad",el="BatchMatMul",eu="BatchToSpaceND",eh="Bincount",ed="BitwiseAnd",ec="BroadcastArgs",ep="Cast",ef="Ceil",em="ClipByValue",eg="Complex",eb="ComplexAbs",ey="Concat",ex="Conv2D",ek="Conv2DBackpropFilter",ev="Conv2DBackpropInput",eI="Conv3D",ew="Conv3DBackpropFilterV2",eS="Conv3DBackpropInputV2",eC="Cosh",eT="Cumprod",eN="Cumsum",eR="CropAndResize",eG="DenseBincount",eW="DepthToSpace",eL="DepthwiseConv2dNative",eM="DepthwiseConv2dNativeBackpropFilter",eE="DepthwiseConv2dNativeBackpropInput",ez="Diag",eV="Dilation2D",eX="Dilation2DBackpropInput",e$="Dilation2DBackpropFilter",eF="RealDiv",eZ="Einsum",eK="EluGrad",eD="Equal",eO="ExpandDims",eA="Expm1",eP="Fill",eB="FlipLeftRight",eH="Floor",eU="FloorDiv",e_="FusedBatchNorm",eY="GatherV2",eQ="GatherNd",eJ="Greater",ej="GreaterEqual",eq="Identity",e0="IFFT",e1="Imag",e2="IsFinite",e3="IsInf",e9="IsNan",e5="LeakyRelu",e4="Less",e7="LessEqual",e8="LinSpace",e6="Log1p",te="LogicalAnd",tt="LogicalNot",tn="LogicalOr",ta="LRNGrad",tr="Maximum",ti="MaxPool",ts="MaxPoolGrad",to="MaxPool3D",tl="MaxPool3DGrad",tu="MaxPoolWithArgmax",th="Mean",td="Minimum",tc="MirrorPad",tp="Multinomial",tf="Multiply",tm="NotEqual",tg="NonMaxSuppressionV3",tb="NonMaxSuppressionV4",ty="NonMaxSuppressionV5",tx="OnesLike",tk="OneHot",tv="Pack",tI="PadV2",tw="Prelu",tS="Prod",tC="RaggedGather",tT="RaggedRange",tN="RaggedTensorToTensor",tR="Range",tG="Real",tW="Reciprocal",tL="Relu",tM="Reshape",tE="ResizeNearestNeighbor",tz="ResizeNearestNeighborGrad",tV="ResizeBilinear",tX="ResizeBilinearGrad",t$="Relu6",tF="Reverse",tZ="Round",tK="Rsqrt",tD="ScatterNd",tO="TensorScatterUpdate",tA="SearchSorted",tP="Select",tB="Selu",tH="Slice",tU="Sinh",t_="Sign",tY="Sigmoid",tQ="Softplus",tJ="Sqrt",tj="SpaceToBatchND",tq="SplitV",t0="Softmax",t1="SparseFillEmptyRows",t2="SparseReshape",t3="SparseSegmentMean",t9="SparseSegmentSum",t5="SparseToDense",t4="SquaredDifference",t7="Square",t8="StaticRegexReplace",t6="StridedSlice",ne="StringNGrams",nt="StringSplit",nn="StringToHashBucketFast",na="Tanh",nr="Tile",ni="TopK",ns="Transform",no="Transpose",nl="Unique",nu="Unpack",nh="UnsortedSegmentSum",nd="ZerosLike",nc="Step",np="FromPixels",nf="RotateWithOffset",nm="_FusedMatMul",ng="FusedConv2D",nb="FusedDepthwiseConv2D";function ny(...e){B.getBool("IS_TEST")||B.getBool("PROD")||console.warn(...e)}let nx=U("kernelRegistry",()=>new Map),nk=U("gradRegistry",()=>new Map);function nv(e,t){let n=`${t}_${e}`;return nx.get(n)}function nI(e){let t=nx.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[i,s]=r,[o]=i.split("_");o===e&&n.push(s)}return n}function nw(e){let{kernelName:t,backendName:n}=e,a=`${n}_${t}`;nx.has(a)&&ny(`The kernel '${t}' for backend '${n}' is already registered`),nx.set(a,e)}function nS(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var nC,nT="u">typeof globalThis?globalThis:"u">typeof window?window:"u">typeof global?global:"u">typeof self?self:{},nN=null;try{nN=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function nR(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function nG(e){return(e&&e.__isLong__)===!0}nR.prototype.__isLong__,Object.defineProperty(nR.prototype,"__isLong__",{value:!0}),nR.isLong=nG;var nW={},nL={};function nM(e,t){var n,a,r;return t?(e>>>=0,(r=0<=e&&e<256)&&(a=nL[e])?a:(n=nz(e,(0|e)<0?-1:0,!0),r&&(nL[e]=n),n)):(e|=0,(r=-128<=e&&e<128)&&(a=nW[e])?a:(n=nz(e,e<0?-1:0,!1),r&&(nW[e]=n),n))}function nE(e,t){if(isNaN(e))return t?nA:nO;if(t){if(e<0)return nA;if(e>=nZ)return n_}else{if(e<=-nK)return nY;if(e+1>=nK)return nU}return e<0?nE(-e,t).neg():nz(e%nF|0,e/nF|0,t)}function nz(e,t,n){return new nR(e,t,n)}nR.fromInt=nM,nR.fromNumber=nE,nR.fromBits=nz;var nV=Math.pow;function nX(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return nO;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return nX(e.substring(1),t,n).neg();for(var a,r=nE(nV(n,8)),i=nO,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),l=parseInt(e.substring(s,s+o),n);if(o<8){var u=nE(nV(n,o));i=i.mul(u).add(nE(l))}else i=(i=i.mul(r)).add(nE(l))}return i.unsigned=t,i}function n$(e,t){return"number"==typeof e?nE(e,t):"string"==typeof e?nX(e,t):nz(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}nR.fromString=nX,nR.fromValue=n$;var nF=0x100000000,nZ=0x100000000*0x100000000,nK=0x100000000*0x100000000/2,nD=nM(0x1000000),nO=nM(0);nR.ZERO=nO;var nA=nM(0,!0);nR.UZERO=nA;var nP=nM(1);nR.ONE=nP;var nB=nM(1,!0);nR.UONE=nB;var nH=nM(-1);nR.NEG_ONE=nH;var nU=nz(-1,0x7fffffff,!1);nR.MAX_VALUE=nU;var n_=nz(-1,-1,!0);nR.MAX_UNSIGNED_VALUE=n_;var nY=nz(0,-0x80000000,!1);nR.MIN_VALUE=nY;var nQ=nR.prototype;nQ.toInt=function(){return this.unsigned?this.low>>>0:this.low},nQ.toNumber=function(){return this.unsigned?(this.high>>>0)*nF+(this.low>>>0):this.high*nF+(this.low>>>0)},nQ.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(nY))return"-"+this.neg().toString(e);var t=nE(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}for(var r=nE(nV(e,6),this.unsigned),i=this,s="";;){var o=i.div(r),l=(i.sub(o.mul(r)).toInt()>>>0).toString(e);if((i=o).isZero())return l+s;for(;l.length<6;)l="0"+l;s=""+l+s}},nQ.getHighBits=function(){return this.high},nQ.getHighBitsUnsigned=function(){return this.high>>>0},nQ.getLowBits=function(){return this.low},nQ.getLowBitsUnsigned=function(){return this.low>>>0},nQ.getNumBitsAbs=function(){if(this.isNegative())return this.eq(nY)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},nQ.isZero=function(){return 0===this.high&&0===this.low},nQ.eqz=nQ.isZero,nQ.isNegative=function(){return!this.unsigned&&this.high<0},nQ.isPositive=function(){return this.unsigned||this.high>=0},nQ.isOdd=function(){return(1&this.low)==1},nQ.isEven=function(){return(1&this.low)==0},nQ.equals=function(e){return nG(e)||(e=n$(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},nQ.eq=nQ.equals,nQ.notEquals=function(e){return!this.eq(e)},nQ.neq=nQ.notEquals,nQ.ne=nQ.notEquals,nQ.lessThan=function(e){return 0>this.comp(e)},nQ.lt=nQ.lessThan,nQ.lessThanOrEqual=function(e){return 0>=this.comp(e)},nQ.lte=nQ.lessThanOrEqual,nQ.le=nQ.lessThanOrEqual,nQ.greaterThan=function(e){return this.comp(e)>0},nQ.gt=nQ.greaterThan,nQ.greaterThanOrEqual=function(e){return this.comp(e)>=0},nQ.gte=nQ.greaterThanOrEqual,nQ.ge=nQ.greaterThanOrEqual,nQ.compare=function(e){if(nG(e)||(e=n$(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},nQ.comp=nQ.compare,nQ.negate=function(){return!this.unsigned&&this.eq(nY)?nY:this.not().add(nP)},nQ.neg=nQ.negate,nQ.add=function(e){nG(e)||(e=n$(e));var t,n,a=this.high>>>16,r=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,l=65535&e.high,u=e.low>>>16,h=65535&e.low,d=0,c=0;return n=0+((t=0+(s+h))>>>16),t&=65535,n+=i+u,c+=n>>>16,n&=65535,c+=r+l,d+=c>>>16,c&=65535,d+=a+o,nz(n<<16|t,(d&=65535)<<16|c,this.unsigned)},nQ.subtract=function(e){return nG(e)||(e=n$(e)),this.add(e.neg())},nQ.sub=nQ.subtract,nQ.multiply=function(e){if(this.isZero())return nO;if(nG(e)||(e=n$(e)),nN)return nz(nN.mul(this.low,this.high,e.low,e.high),nN.get_high(),this.unsigned);if(e.isZero())return nO;if(this.eq(nY))return e.isOdd()?nY:nO;if(e.eq(nY))return this.isOdd()?nY:nO;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(nD)&&e.lt(nD))return nE(this.toNumber()*e.toNumber(),this.unsigned);var t,n,a=this.high>>>16,r=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,l=65535&e.high,u=e.low>>>16,h=65535&e.low,d=0,c=0;return n=0+((t=0+s*h)>>>16),t&=65535,n+=i*h,c+=n>>>16,n&=65535,n+=s*u,c+=n>>>16,n&=65535,c+=r*h,d+=c>>>16,c&=65535,c+=i*u,d+=c>>>16,c&=65535,c+=s*l,d+=c>>>16,c&=65535,d+=a*h+r*u+i*l+s*o,nz(n<<16|t,(d&=65535)<<16|c,this.unsigned)},nQ.mul=nQ.multiply,nQ.divide=function(e){if(nG(e)||(e=n$(e)),e.isZero())throw Error("division by zero");if(nN){var t,n,a;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?nz((this.unsigned?nN.div_u:nN.div_s)(this.low,this.high,e.low,e.high),nN.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?nA:nO;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return nA;if(e.gt(this.shru(1)))return nB;a=nA}else{if(this.eq(nY))return e.eq(nP)||e.eq(nH)?nY:e.eq(nY)?nP:(t=this.shr(1).div(e).shl(1)).eq(nO)?e.isNegative()?nP:nH:(n=this.sub(e.mul(t)),a=t.add(n.div(e)));if(e.eq(nY))return this.unsigned?nA:nO;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=nO}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var r=Math.ceil(Math.log(t)/Math.LN2),i=r<=48?1:nV(2,r-48),s=nE(t),o=s.mul(e);o.isNegative()||o.gt(n);)t-=i,o=(s=nE(t,this.unsigned)).mul(e);s.isZero()&&(s=nP),a=a.add(s),n=n.sub(o)}return a},nQ.div=nQ.divide,nQ.modulo=function(e){return(nG(e)||(e=n$(e)),nN)?nz((this.unsigned?nN.rem_u:nN.rem_s)(this.low,this.high,e.low,e.high),nN.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},nQ.mod=nQ.modulo,nQ.rem=nQ.modulo,nQ.not=function(){return nz(~this.low,~this.high,this.unsigned)},nQ.and=function(e){return nG(e)||(e=n$(e)),nz(this.low&e.low,this.high&e.high,this.unsigned)},nQ.or=function(e){return nG(e)||(e=n$(e)),nz(this.low|e.low,this.high|e.high,this.unsigned)},nQ.xor=function(e){return nG(e)||(e=n$(e)),nz(this.low^e.low,this.high^e.high,this.unsigned)},nQ.shiftLeft=function(e){return nG(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?nz(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):nz(0,this.low<<e-32,this.unsigned)},nQ.shl=nQ.shiftLeft,nQ.shiftRight=function(e){return nG(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?nz(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):nz(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},nQ.shr=nQ.shiftRight,nQ.shiftRightUnsigned=function(e){if(nG(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?nz(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?nz(t,0,this.unsigned):nz(t>>>e-32,0,this.unsigned)},nQ.shru=nQ.shiftRightUnsigned,nQ.shr_u=nQ.shiftRightUnsigned,nQ.toSigned=function(){return this.unsigned?nz(this.low,this.high,!1):this},nQ.toUnsigned=function(){return this.unsigned?this:nz(this.low,this.high,!0)},nQ.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},nQ.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},nQ.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},nR.fromBytes=function(e,t,n){return n?nR.fromBytesLE(e,t):nR.fromBytesBE(e,t)},nR.fromBytesLE=function(e,t){return new nR(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},nR.fromBytesBE=function(e,t){return new nR(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};let nJ=nR&&nR.__esModule&&Object.prototype.hasOwnProperty.call(nR,"default")?nR.default:nR,nj=function(e,t){for(var n=0;n<t.length;n++){let a=t[n];if("string"!=typeof a&&!Array.isArray(a)){for(let t in a)if("default"!==t&&!(t in e)){let n=Object.getOwnPropertyDescriptor(a,t);n&&Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:()=>a[t]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}({__proto__:null,default:nJ},[nR]),nq=nJ||nj;function n0(e){return nq.fromString(e,!0,16)}let n1=n0("c3a5c85c97cb3127"),n2=n0("b492b66fbe98f273"),n3=n0("9ae16a3b2f90404f");function n9(e){return e.xor(e.shru(47))}function n5(e,t,n){let a=e.slice(t,t+n);return nq.fromBytes(Array.from(a),!0,!0)}function n4(e,t){return n5(e,t,8)}function n7(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function n8(e,t,n=n0("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return(r=r.xor(r.shru(47))).mul(n)}function n6(e,t,n,a){return function(e,t,n,a,r,i){r=r.add(e),i=n7(i.add(r).add(a),21);let s=r;return r=(r=r.add(t)).add(n),i=i.add(n7(r,44)),[r.add(a),i.add(s)]}(n4(e,t),n4(e,t+8),n4(e,t+16),n4(e,t+24),n,a)}function ae(e,t){return"string"===t?aa(e):at([e],t)}function at(e,t){var n;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=as(e)),B.getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),(n=e)instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw Error(`Unknown data type ${t}`)}function an(){return B.platform.now()}function aa(e,t="utf-8"){return t=t||"utf-8",B.platform.encode(e,t)}function ar(e,t="utf-8"){return t=t||"utf-8",B.platform.decode(e,t)}function ai(e){return null!=B.platform.isTypedArray?B.platform.isTypedArray(e):nS(e)}function as(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||D(e)||null==e||ai(e)&&n)t.push(e);else if(Array.isArray(e)||ai(e))for(let a=0;a<e.length;++a)as(e[a],t,n);else{let a=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)as(e[r],t,n)}return t}class ao{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new al)}profileKernel(e,t,n){let a,r;let i=()=>{a=n()},s=an();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{for(let e of(i(),a))e.dataSync();r=Promise.resolve({kernelMs:an()-s})}if(B.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){let n=a[t];n.data().then(t=>{!function(e,t,n){if("float32"===t)for(let t=0;t<e.length;t++){let a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}}(t,n.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then(e=>e.kernelMs),extraInfo:r.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:i}=e;n.forEach(e=>{Promise.all([e.data(),a,i]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])})})}}class al{logKernelProfile(e,t,n,a,r,i){let s="number"==typeof a?k(`${a}ms`,9):a.error,o=k(e,25),l=t.rank,u=t.size,h=k(t.shape.toString(),14),d="";for(let e in r){let n=r[e];if(null!=n){let a=n.shape||t.shape,r=a.length;d+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}	%c${s}	%c${l}D ${h}	%c${u}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function au(e,t,n){return k(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:R(e)?`'${e}'`:"bool"===n?ah(e):parseFloat(e.toFixed(7)).toString(),t)}function ah(e){return 0===e?"false":"true"}function ad(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ac{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=b(e),null!=n){let e=n.length;f(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||C(t,this.size),this.strides=E(e)}set(e,...t){0===t.length&&(t=[0]),f(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ap().makeTensor(this.values,this.shape,this.dtype)}}let ap=null,af=null;class am{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=b(e),this.strides=E(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return af.buffer(this.shape,this.dtype,e)}bufferSync(){return af.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return z(this.shape,e,"complex64"===this.dtype)}arraySync(){return z(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=ap().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>ar(e))}catch{throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ap().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ap().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>ar(e))}catch{throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ap().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ap().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return af.print(this,e)}clone(){return this.throwIfDisposed(),af.clone(this)}toString(e=!1){return function(e,t,n,a){let r=E(t),i=function(e,t,n,a){let r=b(t),i=a[a.length-1],s=Array(i).fill(0),o=t.length,l="complex64"===n?ad(e):e;if(o>1)for(let e=0;e<r/i;e++){let t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],au(l[t+e],0,n).length)}return s}(e,t,n,r),s=t.length,o=function e(t,n,a,r,i,s=!0){let o="complex64"===a?2:1,l=n[0],u=n.length;if(0===u)return"complex64"===a?[au(ad(t)[0],0,a)]:"bool"===a?[ah(t[0])]:[t[0].toString()];if(1===u){if(l>20){let e=Array.from(t.slice(0,3*o)),n=Array.from(t.slice((l-3)*o,l*o));return"complex64"===a&&(e=ad(e),n=ad(n)),["["+e.map((e,t)=>au(e,i[t],a)).join(", ")+", ..., "+n.map((e,t)=>au(e,i[l-3+t],a)).join(", ")+"]"]}return["["+("complex64"===a?ad(t):Array.from(t)).map((e,t)=>au(e,i[t],a)).join(", ")+"]"]}let h=n.slice(1),d=r.slice(1),c=r[0]*o,p=[];if(l>20){for(let n=0;n<3;n++){let r=n*c,s=r+c;p.push(...e(t.slice(r,s),h,a,d,i,!1))}p.push("...");for(let n=l-3;n<l;n++){let r=n*c,s=r+c;p.push(...e(t.slice(r,s),h,a,d,i,n===l-1))}}else for(let n=0;n<l;n++){let r=n*c,s=r+c;p.push(...e(t.slice(r,s),h,a,d,i,n===l-1))}let f=2===u?",":"";p[0]="["+(l>0?p[0]+f:"");for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+f;let m=`,
`;for(let e=2;e<u;e++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":m),p}(e,t,n,r,i),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join(`
`)),l.join(`
`)}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),af.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ap().makeVariable(this,e,t,n)}}function ag(){return U("Tensor",()=>am)}Object.defineProperty(am,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ag();class ab extends am{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ap().disposeTensor(this),this.dataId=e.dataId,ap().incRef(this,null)}dispose(){ap().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(ab,Symbol.hasInstance,{value:e=>e instanceof am&&null!=e.assign&&e.assign instanceof Function}),(v5=Ih||(Ih={})).R0="R0",v5.R1="R1",v5.R2="R2",v5.R3="R3",v5.R4="R4",v5.R5="R5",v5.R6="R6",(v4=Id||(Id={})).float32="float32",v4.int32="int32",v4.bool="int32",v4.complex64="complex64",(v7=Ic||(Ic={})).float32="float32",v7.int32="int32",v7.bool="bool",v7.complex64="complex64",(v8=Ip||(Ip={})).float32="float32",v8.int32="float32",v8.bool="float32",v8.complex64="complex64",(v6=If||(If={})).float32="complex64",v6.int32="complex64",v6.bool="complex64",v6.complex64="complex64";let ay={float32:Ip,int32:Id,bool:Ic,complex64:If};function ax(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return ay[e][t]}function ak(e){return ax(e,"int32")}function av(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function aI(e){return"u">typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function aw(e,t){if(e.dtype===t.dtype)return[e,t];let n=ax(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function aS(e){let t=[];return function e(t,n,a){if(null!=t){if(t instanceof am){n.push(t);return}if(Array.isArray(t)||"object"==typeof t)for(let r in t){let i=t[r];a.has(i)||(a.add(i),e(i,n,a))}}}(e,t,new Set),t}function aC(e){return null!=e.kernelName}class aT{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class aN{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new aT}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ny(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ao(this.backendInstance),!0}setupRegisteredKernels(){nI(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){nI(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof u||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ny(`Initialization of backend ${e} failed`),ny(n.stack||n.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return ny(`Initialization of backend ${e} failed`),ny(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),i=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>((n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return aN.nextTensorId++}nextVariableId(){return aN.nextVariableId++}clone(e){let t=aG.runKernel(eq,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>aG.runKernel(ep,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,!(null!=nv(e,this.backendName)))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach(e=>{r+="complex64"===e.dtype?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-i;if(s>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,a,r,i=[],s=this.isTapeOn(),o=this.state.numBytes,l=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let u=aC(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(aC(e)){let{kernelName:a,inputs:r,attrs:o}=e;null==this.backendName&&this.backend;let l=nv(a,this.backendName);f(null!=l,()=>`Cannot find registered kernel '${a}' for backend '${this.backendName}'`),t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(n=l.kernelFunc({inputs:r,attrs:o,backend:this.backend}))?n:[n];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(a,e,t);let u=t.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(s){let e=this.getTensorsForGradient(a,r,u);i=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:a}=e,r=e=>{s&&(i=e.map(e=>this.keep(this.clone(e))))};t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(n=this.tidy(()=>a(this.backend,r)))?n:[n];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,t),t}}let{inputs:h,attrs:d}=e,c=aC(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(a=this.profiler.profileKernel(u,h,()=>t()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(a),r=a.outputs):r=t()}),s&&this.addTapeNode(u,h,r,c,i,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-l,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(e=>null!=h[e]?h[e].shape:null),outputShapes:r.map(e=>e.shape),kernelTimeMs:a.timeMs,extraInfo:a.extraInfo}),Array.isArray(n)?r:r[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let a=nk.get(e);if(null!=a){let e;let r=a.inputsToSave||[],i=a.outputsToSave||[];a.saveAllInputs?(f(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=r.map(e=>t[e]);let s=n.filter((e,t)=>i[t]);return e.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&R(e[0])&&(r=e.map(e=>aa(e)));let i=a.write(r,t,n),s=new am(t,n,i,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){let e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){let r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:a,dtype:r}=e,i=new am(a,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let r=new ab(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*N(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ab||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*N(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;for(let a of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile.kernels))a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,i){let s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=nk.get(e);null!=o&&(a=o.gradFunc),null!=a&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],a=X(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e}),a(e.length>1?e:e[0],r,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=aS(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==a.id||this.track(e)})}gradients(e,t,n,a=!1){if(f(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));f(r instanceof am,()=>"The result y returned by f() must be a tensor.");let i=function(e,t,n){let a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){let i=e[n],s=i.inputs;for(let e in s){let n=s[e],o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){i.outputs.forEach(e=>a[e.id]=!0),o=!0,r[i.id]=!0;break}if(o)break}}let i={};i[n.id]=!0;let s={};for(let t=e.length-1;t>=0;t--){let n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(let e in a)i[a[e].id]=!0,s[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(r[n.id]&&s[n.id]){let e={};for(let t in n.inputs){let r=n.inputs[t];a[r.id]&&(e[t]=r)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!a&&0===i.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[r.id]=n??function(e){let t=V(b(e),"float32");return aG.makeTensor(t,e,"float32")}(r.shape),function(e,t,n,a){for(let r=t.length-1;r>=0;r--){let i=t[r],s=[];if(i.outputs.forEach(t=>{let n=e[t.id];null!=n?s.push(n):s.push(null)}),null==i.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let o=i.gradient(s);for(let t in i.inputs){if(!(t in o))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let r=n(()=>o[t]());if("float32"!==r.dtype)throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let s=i.inputs[t];if(!y(r.shape,s.shape))throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=r;else{let t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,i,e=>this.tidy(e),aW);let a=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:r,grads:a}})}customGrad(e){return f(L(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;f(t.every(e=>e instanceof am),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a={};return t.forEach((e,t)=>{a[t]=e}),this.runKernelFunc({forwardFunc:(a,r)=>(f((n=e(...t,r)).value instanceof am,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),f(L(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,a)=>{let r=n.gradFunc(e,a),i=Array.isArray(r)?r:[r];f(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),f(i.every(e=>e instanceof am),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let s={};return i.forEach((e,t)=>{s[t]=()=>e}),s},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=an(),n=await this.backend.time(e);return n.wallMs=an()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new aT,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function aR(){let e=H();if(null==e._tfengine){let t=new A(e);e._tfengine=new aN(t)}return B=e._tfengine.ENV,ap=()=>e._tfengine,e._tfengine}aN.nextTensorId=0,aN.nextVariableId=0;let aG=aR();function aW(e,t){return aG.runKernel("Add",{a:e,b:t})}function aL(e){if(e||"u">typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("u">typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function aM(){return"u">typeof window&&null!=window.document||"u">typeof WorkerGlobalScope}let aE=B;function az(e,t){let n=e;if(ai(e))return"string"===t?[]:[e.length];if(av(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(aI(e))return[e.buffer.size/(null==t?4:N(t))];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||ai(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&B.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,a){if(a=a||[],!Array.isArray(t)&&!ai(t)){f(0===n.length,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);return}f(n.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${t.length} elements`),f(t.length===n[0],()=>`Element arr[${a.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);let r=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],r,a.concat(n))}(e,a,[]),a}function aV(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function aX(e,t,n,a="numeric"){if(e instanceof ag())return aV(a,e.dtype,t,n),e;let r=W(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),aV(a,r,t,n),null==e||!ai(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}let i=az(e,r);ai(e)||Array.isArray(e)||(e=[e]);let s="string"!==r?at(e,r):as(e,[],!0);return aG.makeTensor(s,i,r)}function a$(e,t,n,a="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>aX(e,`${t}[${r}]`,n,a))}function aF(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));let r=(...e)=>{aG.startScope(n);try{let t=a(...e);return D(t)&&console.error("Cannot return a Promise inside of tidy."),aG.endScope(t),t}catch(e){throw aG.endScope(null),e}};return Object.defineProperty(r,"name",{value:n+="__op",configurable:!0}),r}aE.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),aE.registerFlag("IS_BROWSER",()=>aM()),aE.registerFlag("IS_NODE",()=>"u">typeof a&&"u">typeof a.versions&&"u">typeof a.versions.node),aE.registerFlag("IS_CHROME",()=>"u">typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),aE.registerFlag("IS_SAFARI",()=>"u">typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),aE.registerFlag("PROD",()=>!1),aE.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>aE.getBool("DEBUG")),aE.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),aE.registerFlag("IS_TEST",()=>!1),aE.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>aE.getBool("DEBUG")),aE.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),aE.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),aE.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);let aZ=aF({complex_:function(e,t){let n=aX(e,"real","complex"),a=aX(t,"imag","complex");return m(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`),aG.runKernel(eg,{real:n,imag:a})}});function aK(e,t,n,a){if(null==a)a=W(e);else if("complex64"===a)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(aI(e)||av(e)){if("float32"!==a&&"int32"!==a)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return aG.backend.createTensorFromGPUData(e,t||n,a)}if(!ai(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){F(t);let e=b(t),a=b(n);f(e===a,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`);for(let e=0;e<n.length;++e){let a=n[e],r=e!==n.length-1||a!==b(t.slice(e));f(n[e]===t[e]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return ai(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?at(e,a):as(e,[],!0),aG.makeTensor(e,t,a)}function aD(e,t,n){let a=az(e,n);return aK(e,t,a,n)}class aO{static join(e){return new aO(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>ai(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),r=new Uint8Array(a),i=0;for(let a=n;a<this.shards.length;a++){let n=this.shards[a],s=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,s,l-s);if(r.set(u,o),i+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,a=e.length;for(;n<=a;){let r=Math.floor((a-n)/2)+n,i=t(e[r]);if(0===i)return r;i<0?a=r:n=r+1}return -1}(this.shards,t);return -1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function aA(){return aG.memory()}function aP(e,t){return aG.tidy(e,t)}function aB(e){aS(e).forEach(e=>e.dispose())}function aH(e){return aG.keep(e)}function aU(e,t,n=1){return aG.registerBackend(e,t,n)}function a_(){return aG.backend}async function aY(e,t){let n=[],a=[],r=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<r.length;++i){let s=r[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),a=0;for(let e=0;e<t.length;e++){let r=t[e],i=new Uint8Array(new Uint32Array([r.length]).buffer);n.set(i,a),a+=4,n.set(r,a),a+=r.length}e(n)});a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let a=new Uint8Array(t),r=0;return n.forEach(e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength}),a.buffer}(await Promise.all(a)),specs:n}}let aQ="u">typeof r&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function aJ(e){return aQ?r.byteLength(e,"utf8"):new Blob([e]).size}function aj(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:aJ(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:aJ(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new aO(e.weightData).byteLength}}class aq{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==aq.instance&&(aq.instance=new aq),aq.instance}static registerSaveRouter(e){aq.getInstance().saveRouters.push(e)}static registerLoadRouter(e){aq.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return aq.getHandlers(e,"save")}static getLoadHandlers(e,t){return aq.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return("load"===t?aq.getInstance().loadRouters:aq.getInstance().saveRouters).forEach(t=>{let r=t(e,n);null!==r&&a.push(r)}),a}}let a0=e=>aq.getSaveHandlers(e),a1="tensorflowjs",a2="models_store",a3="model_info_store";function a9(){if(!B.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function a5(e){let t=e.result;t.createObjectStore(a2,{keyPath:"modelPath"}),t.createObjectStore(a3,{keyPath:"modelPath"})}class a4{constructor(e){if(this.indexedDB=a9(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let a=this.indexedDB.open(a1,1);a.onupgradeneeded=()=>a5(a),a.onsuccess=()=>{let r=a.result;if(null==t){let t=r.transaction(a2,"readonly"),a=t.objectStore(a2).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{let a;t.weightData=aO.join(t.weightData);let i=aj(t),s=r.transaction(a3,"readwrite"),o=s.objectStore(a3),l;try{l=o.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(e){return n(e)}l.onsuccess=()=>{let l;let u=(a=r.transaction(a2,"readwrite")).objectStore(a2);try{l=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:i}),l.onerror=e=>{let t=(o=s.objectStore(a3)).delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},l.onerror=e=>(r.close(),n(l.error)),s.oncomplete=()=>{null==a?r.close():a.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)})}}a4.URL_SCHEME="indexeddb://";let a7=e=>{var t;return B.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(a4.URL_SCHEME)?(t=e.slice(a4.URL_SCHEME.length),new a4(t)):null};aq.registerSaveRouter(a7),aq.registerLoadRouter(a7);class a8{constructor(){this.indexedDB=a9()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(a1,1);n.onupgradeneeded=()=>a5(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(a3,"readonly"),i=r.objectStore(a3).getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(a.close(),t(i.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(a4.URL_SCHEME)?t.slice(a4.URL_SCHEME.length):t,new Promise((t,n)=>{let a=this.indexedDB.open(a1,1);a.onupgradeneeded=()=>a5(a),a.onsuccess=()=>{let r;let i=a.result,s=i.transaction(a3,"readwrite"),o=s.objectStore(a3),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return i.close(),n(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=o.delete(e),s=()=>{let a=(r=i.transaction(a2,"readwrite")).objectStore(a2).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>n(l.error)};a.onsuccess=s,a.onerror=e=>(s(),i.close(),n(l.error))}},l.onerror=e=>(i.close(),n(l.error)),s.oncomplete=()=>{null==r?i.close():r.oncomplete=()=>i.close()}},a.onerror=e=>n(a.error)})}}let a6="tensorflowjs_models",re="info";function rt(e){return{info:[a6,e,re].join("/"),topology:[a6,e,"model_topology"].join("/"),weightSpecs:[a6,e,"weight_specs"].join("/"),weightData:[a6,e,"weight_data"].join("/"),modelMetadata:[a6,e,"model_metadata"].join("/")}}function rn(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class ra{constructor(e){if(!B.getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=rt(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=aj(e),i=aO.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(aQ)return r.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(i));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:a}}catch{throw rn(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){let e=JSON.parse(i);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(aQ){let t=r.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ra.URL_SCHEME="localstorage://";let rr=e=>{var t;return B.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ra.URL_SCHEME)?(t=e.slice(ra.URL_SCHEME.length),new ra(t)):null};aq.registerSaveRouter(rr),aq.registerLoadRouter(rr);class ri{constructor(){f(B.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),f(typeof window>"u"||"u">typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=a6+"/",n="/"+re;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;let n=rt(e=(t=e).startsWith(ra.URL_SCHEME)?t.slice(ra.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(n.info));return rn(n),a}}class rs{constructor(){this.managers={}}static getInstance(){return null==rs.instance&&(rs.instance=new rs),rs.instance}static registerManager(e,t){f(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),f(e.length>0,()=>"scheme must not be an empty string.");let n=rs.getInstance();f(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=rs.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(rs.getInstance().managers)}}class ro{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!B.getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return nS(e)}}if(B.get("IS_BROWSER")){B.setPlatform("browser",new ro);try{rs.registerManager(ra.URL_SCHEME,new ri)}catch{}try{rs.registerManager(a4.URL_SCHEME,new a8)}catch{}}let rl={importFetch:()=>require("node-fetch")};class ru{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=B.global.fetch?B.global.fetch(e,n):(null==t&&(t=rl.importFetch()),t(e,n))}now(){let e=a.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function rh(e,t="float32",n){return t=t||"float32",F(e),new ac(e,t,n)}B.get("IS_NODE")&&!B.get("IS_BROWSER")&&B.setPlatform("node",new ru);let rd=aF({cast_:function(e,t){let n=aX(e,"x","cast");if(!("bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw Error("Only strings can be casted to strings");return aG.runKernel(ep,{x:n},{dtype:t})}}),rc=aF({clone_:function(e){let t={x:aX(e,"x","clone","string_or_numeric")};return aG.runKernel(eq,t)}});aR(),af={buffer:rh,cast:rd,clone:rc,print:function(e,t=!1){console.log(e.toString(t))}};let rp=aF({add_:function(e,t){let n=aX(e,"a","add"),a=aX(t,"b","add");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel("Add",r)}}),rf=aF({floorDiv_:function(e,t){let n=aX(e,"a","floorDiv"),a=aX(t,"b","floorDiv");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel(eU,r)}}),rm=aF({div_:function(e,t){let n=aX(e,"a","div"),a=aX(t,"b","div");if([n,a]=aw(n,a),"int32"===n.dtype&&"int32"===a.dtype)return rf(n,a);let r={a:n,b:a};return aG.runKernel(eF,r,{})}}),rg=aF({mul_:function(e,t){let n=aX(e,"a","mul"),a=aX(t,"b","mul");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel(tf,r)}}),rb=aF({abs_:function(e){let t=aX(e,"x","abs");return"complex64"===t.dtype?aG.runKernel(eb,{x:t}):aG.runKernel("Abs",{x:t})}}),ry=aF({acos_:function(e){let t={x:aX(e,"x","acos")};return aG.runKernel(_,t)}}),rx=aF({acosh_:function(e){let t={x:aX(e,"x","acosh")};return aG.runKernel(Y,t)}}),rk=aF({all_:function(e,t=null,n=!1){let a={x:aX(e,"x","all","bool")};return aG.runKernel("All",a,{axis:t,keepDims:n})}}),rv=aF({any_:function(e,t=null,n=!1){let a={x:aX(e,"x","any","bool")};return aG.runKernel("Any",a,{axis:t,keepDims:n})}}),rI=aF({argMax_:function(e,t=0){let n={x:aX(e,"x","argMax")};return aG.runKernel(J,n,{axis:t})}}),rw=aF({argMin_:function(e,t=0){let n={x:aX(e,"x","argMin")};return aG.runKernel(j,n,{axis:t})}}),rS=aF({asin_:function(e){let t={x:aX(e,"x","asin")};return aG.runKernel(q,t)}}),rC=aF({asinh_:function(e){let t={x:aX(e,"x","asinh")};return aG.runKernel(ee,t)}}),rT=aF({atan_:function(e){let t={x:aX(e,"x","atan")};return aG.runKernel(et,t)}}),rN=aF({atan2_:function(e,t){let n=aX(e,"a","atan2"),a=aX(t,"b","atan2");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel(ea,r)}}),rR=aF({atanh_:function(e){let t={x:aX(e,"x","atanh")};return aG.runKernel(en,t)}});function rG(e,t,n,a,r="NHWC",i){let s=[...t,e[3]];return rM(e,s,n,i,a,null,null,rO(r))}function rW(e,t,n,a,r,i,s="channelsLast"){let o;let[l,u]=rV(t);if("channelsLast"===s)o=[l,u,e[3],e[3]];else if("channelsFirst"===s)o=[l,u,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return rM(e,o,n,a,r,i,!1,s)}function rL(e,t,n,a,r,i,s="NDHWC"){let o,l;let[u,h,d]=rX(t);if("NDHWC"===s)l="channelsLast",o=[u,h,d,e[4],e[4]];else if("NCDHW"===s)l="channelsFirst",o=[u,h,d,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return rE(e,o,n,a,r,!1,l,i)}function rM(e,t,n,a,r,i,s=!1,o="channelsLast"){let l,[u,h,d,c]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,d,c]=e;else if("channelsFirst"===o)[u,c,h,d]=e;else throw Error(`Unknown dataFormat ${o}`);let[p,f,,m]=t,[g,b]=rV(n),[y,x]=rV(a),k=r$(p,y),v=r$(f,x),{padInfo:I,outHeight:w,outWidth:S}=function(e,t,n,a,r,i,s,o,l){let u,h,d;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let r=function(e,t,n,a,r){null==a&&(a=rz(e,t,n));let i=e[0],s=e[1];return[rF((i-t+2*a)/n+1,r),rF((s-t+2*a)/n+1,r)]}([t,n],i,a,e,o);h=r[0],d=r[1]}else if("same"===e){h=Math.ceil(t/a),d=Math.ceil(n/r);let e=Math.max(0,(h-1)*a+i-t),o=Math.max(0,(d-1)*r+s-n),l=Math.floor(e/2),c=Math.floor(o/2);u={top:l,bottom:e-l,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-i+1)/a),d=Math.ceil((n-s+1)/r);else if("object"==typeof e){let c="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:c,bottom:p,left:f,right:m,type:0===c&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},h=rF((t-i+c+p)/a+1,o),d=rF((n-s+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:h,outWidth:d}}(r,h,d,g,b,k,v,i,o),C=s?m*c:m;return"channelsFirst"===o?l=[u,C,w,S]:"channelsLast"===o&&(l=[u,w,S,C]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:d,inChannels:c,outHeight:w,outWidth:S,outChannels:C,padInfo:I,strideHeight:g,strideWidth:b,filterHeight:p,filterWidth:f,effectiveFilterHeight:k,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:x,inShape:e,outShape:l,filterShape:t}}function rE(e,t,n,a,r,i=!1,s="channelsLast",o){let l,[u,h,d,c,p]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,h,d,c,p]=e;else if("channelsFirst"===s)[u,p,h,d,c]=e;else throw Error(`Unknown dataFormat ${s}`);let[f,m,g,,b]=t,[y,x,k]=rX(n),[v,I,w]=rX(a),S=r$(f,v),C=r$(m,I),T=r$(g,w),{padInfo:N,outDepth:R,outHeight:G,outWidth:W}=function(e,t,n,a,r,i,s,o,l,u,h){let d,c,p,f;if("valid"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,a,r,i){null==r&&(r=rz(e,t[0],a[0]));let s=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(s[n]=rF((e[n]-t[n]+2*r)/a[n]+1,i));return s}([t,n,a,1],[o,l,u],0,[r,i,s],e,h);c=m[0],p=m[1],f=m[2]}else if("same"===e){c=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(a/s);let e=(c-1)*r+o-t,h=(p-1)*i+l-n,m=(f-1)*s+u-a,g=Math.floor(e/2),b=Math.floor(h/2),y=Math.floor(m/2);d={top:b,bottom:h-b,left:y,right:m-y,front:g,back:e-g,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:c,outHeight:p,outWidth:f}}(r,h,d,c,y,x,k,S,C,T,o),L=i?b*p:b;return"channelsFirst"===s?l=[u,L,R,G,W]:"channelsLast"===s&&(l=[u,R,G,W,L]),{batchSize:u,dataFormat:s,inDepth:h,inHeight:d,inWidth:c,inChannels:p,outDepth:R,outHeight:G,outWidth:W,outChannels:L,padInfo:N,strideDepth:y,strideHeight:x,strideWidth:k,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:I,dilationWidth:w,inShape:e,outShape:l,filterShape:t}}function rz(e,t,n,a=1){let r=r$(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function rV(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function rX(e){return"number"==typeof e?[e,e,e]:e}function r$(e,t){return t<=1?e:e+(e-1)*(t-1)}function rF(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function rZ(e){let[t,n,a]=rV(e);return 1===t&&1===n&&1===a}function rK(e,t){return rZ(e)||rZ(t)}function rD(e){return rV(e).every(e=>e>0)}function rO(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function rA(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)f(t%1==0,()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{f(t%1==0,()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}let rP=aF({reshape_:function(e,t){let n={x:aX(e,"x","reshape","string_or_numeric")};return aG.runKernel(tM,n,{shape:t})}}),rB=aF({avgPool_:function(e,t,n,a,r){let i=aX(e,"x","avgPool","float32");f(rK(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let s=i,o=!1;3===i.rank&&(o=!0,s=rP(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),rA("avgPool",a,r);let l={x:s},u=aG.runKernel(er,l,{filterSize:t,strides:n,pad:a,dimRoundingMode:r});return u=rd(u,i.dtype),o?rP(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),rH=aF({avgPool3d_:function(e,t,n,a,r,i="NDHWC"){let s=aX(e,"x","avgPool3d","float32"),o=s,l=!1;4===s.rank&&(l=!0,o=rP(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),f(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),f("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),f("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),rA("avgPool3d",a,r);let u={x:o},h=aG.runKernel(es,u,{filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i});return h=rd(h,o.dtype),l?rP(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),rU=aF({concat_:function(e,t=0){f(e.length>=1,()=>"Pass at least one tensor to concat");let n=a$(e,"tensors","concat","string_or_numeric");return("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===n.length)?rc(n[0]):aG.runKernel(ey,n,{axis:t})}}),r_=aF({matMul_:function(e,t,n=!1,a=!1){let r=aX(e,"a","matMul"),i=aX(t,"b","matMul");[r,i]=aw(r,i);let s={a:r,b:i};return aG.runKernel(el,s,{transposeA:n,transposeB:a})}}),rY=aF({sigmoid_:function(e){let t={x:aX(e,"x","sigmoid","float32")};return aG.runKernel(tY,t)}}),rQ=aF({slice_:function(e,t,n){let a=aX(e,"x","slice","string_or_numeric");if(0===a.rank)throw Error("Slicing scalar is not possible");return aG.runKernel(tH,{x:a},{begin:t,size:n})}}),rJ=aF({tanh_:function(e){let t={x:aX(e,"x","tanh","float32")};return aG.runKernel(na,t)}}),rj=aF({batchToSpaceND_:function(e,t,n){let a=aX(e,"x","batchToSpaceND"),r=t.reduce((e,t)=>e*t);return f(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),f(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),f(a.shape[0]%r==0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),aG.runKernel(eu,{x:a},{blockShape:t,crops:n})}}),rq=aF({batchNorm_:function(e,t,n,a,r,i){let s,o;null==i&&(i=.001);let l=aX(e,"x","batchNorm"),u=aX(t,"mean","batchNorm"),h=aX(n,"variance","batchNorm");null!=r&&(s=aX(r,"scale","batchNorm")),null!=a&&(o=aX(a,"offset","batchNorm")),f(u.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f(null==o||u.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f(null==s||u.rank===s.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:0===l.rank||1===l.rank?rP(l,[1,1,1,l.size]):2===l.rank?rP(l,[1,1,l.shape[0],l.shape[1]]):3===l.rank?rP(l,[1,l.shape[0],l.shape[1],l.shape[2]]):l,scale:s,offset:o,mean:u,variance:h},c={varianceEpsilon:i};return rP(aG.runKernel(e_,d,c),l.shape)}}),r0=aF({batchNorm2d_:function(e,t,n,a,r,i){let s,o;let l=aX(e,"x","batchNorm"),u=aX(t,"mean","batchNorm"),h=aX(n,"variance","batchNorm");return null!=r&&(s=aX(r,"scale","batchNorm")),null!=a&&(o=aX(a,"offset","batchNorm")),f(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),f(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),f(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=s&&f(2===s.rank||1===s.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${s.rank}.`),null!=o&&f(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),rq(l,u,h,o,s,i)}}),r1=aF({batchNorm3d_:function(e,t,n,a,r,i){let s,o;let l=aX(e,"x","batchNorm"),u=aX(t,"mean","batchNorm"),h=aX(n,"variance","batchNorm");return null!=r&&(s=aX(r,"scale","batchNorm")),null!=a&&(o=aX(a,"offset","batchNorm")),f(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),f(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),f(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=s&&f(3===s.rank||1===s.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${s.rank}.`),null!=o&&f(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),rq(l,u,h,o,s,i)}}),r2=aF({batchNorm4d_:function(e,t,n,a,r,i){let s,o;let l=aX(e,"x","batchNorm"),u=aX(t,"mean","batchNorm"),h=aX(n,"variance","batchNorm");return null!=r&&(s=aX(r,"scale","batchNorm")),null!=a&&(o=aX(a,"offset","batchNorm")),f(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),f(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),f(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=s&&f(4===s.rank||1===s.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${s.rank}.`),null!=o&&f(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),rq(l,u,h,o,s,i)}}),r3=aF({bincount_:function(e,t,n){let a=aX(e,"x","bincount"),r=aX(t,"weights","bincount");return f("int32"===a.dtype,()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),f(n>=0,()=>`size must be non-negative, but got ${n}.`),f(r.size===a.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`),aG.runKernel(eh,{x:a,weights:r},{size:n})}}),r9=aF({broadcastTo_:function(e,t){let n=aX(e,"broadcastTo","x"),a=n.shape;if(F(t),t.length<n.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=rP(n,e)}let r=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return rc(n);let s={x:n};return aG.runKernel(nr,s,{reps:i})}}),r5=aF({ceil_:function(e){let t={x:aX(e,"x","ceil","float32")};return aG.runKernel(ef,t)}});function r4(e,t,n){F(e),n=n||W(t);let a={shape:e,value:t,dtype:n};return aG.runKernel(eP,{},a)}let r7=aF({clipByValue_:function(e,t,n){let a=aX(e,"x","clipByValue");return(f(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)?r4(a.shape,t,a.dtype):aG.runKernel(em,{x:a},{clipValueMin:t,clipValueMax:n})}}),r8=aF({concat1d_:function(e){return rU(e,0)}}),r6=aF({concat2d_:function(e,t){return rU(e,t)}}),ie=aF({concat3d_:function(e,t){return rU(e,t)}}),it=aF({concat4d_:function(e,t){return rU(e,t)}}),ia=aF({conv2d_:function(e,t,n,a,r="NHWC",i=[1,1],s){let o=aX(e,"x","conv2d","float32"),l=aX(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=rP(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),f(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),rA("conv2d",a,s);let d="NHWC"===r?u.shape[3]:u.shape[1];f(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),f(rK(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),f(rD(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),f(rD(n),()=>"Error in conv2D: Strides should be larger than 0.");let c={x:u,filter:l},p=aG.runKernel(ex,c,{strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s});return h?rP(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ir=aF({conv1d_:function(e,t,n,a,r="NWC",i=1,s){let o=aX(e,"x","conv1d"),l=aX(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=rP(o,[1,o.shape[0],o.shape[1]])),f(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),f(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),rA("conv1d",a,s),f(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),f(rK(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),f(rD(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),f(rD(n),()=>"Error in conv1D: Stride should be larger than 0."),f("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=rP(l,[1,l.shape[0],l.shape[1],l.shape[2]]),c=ia(rP(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d,[1,n],a,"NHWC",[1,i],s);return h?rP(c,[c.shape[2],c.shape[3]]):rP(c,[c.shape[0],c.shape[2],c.shape[3]])}}),ii=aF({conv2DBackpropInput_:function(e,t,n,a,r,i="NHWC",s){f(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=rP(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),f(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),f(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),f(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let h="NHWC"===i?o[3]:o[1],d="NHWC"===i?l.shape[3]:l.shape[1];f(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),f(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),rA("conv2dDerInput",r,s);let c={dy:l,filter:n},p={strides:a,pad:r,dataFormat:i,dimRoundingMode:s,inputShape:o},m=aG.runKernel(ev,c,p);return u?rP(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),is=aF({conv2dTranspose_:function(e,t,n,a,r,i){return ii(n,aX(e,"x","conv2dTranspose"),aX(t,"filter","conv2dTranspose"),a,r,"NHWC",i)}}),io=aF({conv3d_:function(e,t,n,a,r="NDHWC",i=[1,1,1]){let s=aX(e,"x","conv3d"),o=aX(t,"filter","conv3d"),l=s,u=!1;4===s.rank&&(u=!0,l=rP(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),f(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),f(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),f(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),f(rK(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),f("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),f(rD(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),f(rD(n),()=>"Error in conv3D: Strides should be larger than 0.");let h={x:l,filter:o},d=aG.runKernel(eI,h,{strides:n,pad:a,dataFormat:r,dilations:i});return u?rP(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),il=aF({conv3DBackpropInput_:function(e,t,n,a,r){f(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=rP(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);let l=i[4],u=s.shape[4];f(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),f(5===s.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),f(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),f(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),f(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let h={dy:s,filter:n},d={pad:r,strides:a,inputShape:i},c=aG.runKernel(eS,h,d);return o?rP(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),iu=aF({conv3dTranspose_:function(e,t,n,a,r){return il(n,aX(e,"x","conv3dTranspose"),aX(t,"filter","conv3dTranspose"),a,r)}}),ih=aF({cos_:function(e){let t={x:aX(e,"x","cos","float32")};return aG.runKernel("Cos",t)}}),id=aF({cosh_:function(e){let t={x:aX(e,"x","cosh","float32")};return aG.runKernel(eC,t)}}),ic=aF({cumprod_:function(e,t=0,n=!1,a=!1){let r={x:aX(e,"x","cumprod")};return aG.runKernel(eT,r,{axis:t,exclusive:n,reverse:a})}}),ip=aF({cumsum_:function(e,t=0,n=!1,a=!1){let r={x:aX(e,"x","cumsum")};return aG.runKernel(eN,r,{axis:t,exclusive:n,reverse:a})}}),im=aF({denseBincount_:function(e,t,n,a=!1){let r=aX(e,"x","denseBincount"),i=aX(t,"weights","denseBincount");return f("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),f(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),f(n>=0,()=>`size must be non-negative, but got ${n}.`),f(i.size===r.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`),aG.runKernel(eG,{x:r,weights:i},{size:n,binaryOutput:a})}}),ig=aF({depthToSpace_:function(e,t,n="NHWC"){let a=aX(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],i="NHWC"===n?a.shape[2]:a.shape[3],s="NHWC"===n?a.shape[3]:a.shape[1];return f(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),f(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${a.shape}`),f(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${a.shape}`),f(s%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${a.shape}`),aG.runKernel(eW,{x:a},{blockSize:t,dataFormat:n})}}),ib=aF({depthwiseConv2d_:function(e,t,n,a,r="NHWC",i=[1,1],s){let o=aX(e,"x","depthwiseConv2d","float32"),l=aX(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=rP(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),f(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let d="NHWC"===r?u.shape[3]:u.shape[1];f(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),rA("depthwiseConv2d",a,s);let c={x:u,filter:l},p=aG.runKernel(eL,c,{strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s});return h?rP(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),iy=aF({dilation2d_:function(e,t,n,a,r=[1,1],i="NHWC"){let s=aX(e,"x","dilation2d"),o=aX(t,"filter","dilation2d");f(3===s.rank||4===s.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),f(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),f("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;3===s.rank&&(l=rP(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),f(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let h={x:l,filter:o},d=aG.runKernel(eV,h,{strides:n,pad:a,dilations:r});return u?rP(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function ix(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let i=n-1-r,s=e[i]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(i)}return a}function ik(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],i=t.length-a-1,s=t[i];(null==r||1===r&&s>1)&&n.unshift(i)}return n}function iv(e,t){let n=Math.max(e.length,t.length),a=Array(n);for(let r=0;r<n;r++){let i=e[e.length-r-1];null==i&&(i=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===i)a[n-r-1]=s;else if(1===s)a[n-r-1]=i;else if(i!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else a[n-r-1]=i}return a}let iI=aF({equal_:function(e,t){let n=aX(e,"a","equal","string_or_numeric"),a=aX(t,"b","equal","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(eD,r)}}),iw=aF({where_:function(e,t,n){let a=aX(t,"a","where"),r=aX(n,"b","where"),i=aX(e,"condition","where","bool"),s=iv(iv(i.shape,a.shape),r.shape),o=r9(i,s),l=r9(a,s),u=r9(r,s);return aG.runKernel(tP,{condition:o,t:l,e:u})}}),iS=aF({zerosLike_:function(e){let t={x:aX(e,"x","zerosLike")};return aG.runKernel(nd,t)}}),iC=aF({divNoNan_:function(e,t){let n=aX(e,"a","div"),a=aX(t,"b","div");[n,a]=aw(n,a);let r=rm(n,a),i=iS(r);return iw(iI(a,i),i,r)}}),iT=aF({dot_:function(e,t){let n=aX(e,"t1","dot"),a=aX(t,"t2","dot");f((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);let r=1===n.rank?n.size:n.shape[1],i=1===a.rank?a.size:a.shape[0];if(f(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),1===n.rank&&1===a.rank){let e=r_(rP(n,[1,-1]),rP(a,[-1,1]));return rP(e,[])}if(1===n.rank&&2===a.rank){let e=r_(rP(n,[1,-1]),rP(a,[a.shape[0],a.shape[1]]));return rP(e,[e.size])}if(2!==n.rank||1!==a.rank)return r_(n,rP(a,[a.shape[0],a.shape[1]]));{let e=r_(n,rP(a,[-1,1]));return rP(e,[e.size])}}}),iN=aF({einsum_:function(e,...t){let n=t.map((e,t)=>aX(e,`tensors${t}`,"einsum"));return aG.runKernel(eZ,n,{equation:e})}}),iR=aF({elu_:function(e){let t={x:aX(e,"x","elu","float32")};return aG.runKernel("Elu",t)}}),iG=aF({erf_:function(e){let t=aX(e,"x","erf");f("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=rd(t,"float32"));let n={x:t};return aG.runKernel("Erf",n)}});function iW(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function iL(e,t,n){let a=e.length+t.length,r=[],i=0,s=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[s++]);return r}function iM(e,t){let n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map(t=>e[t])]}function iE(e,t){return iL(e,t.map(e=>1),t)}function iz(e,t,n){f(iW(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function iV(e,t){if(iW(e,t))return null;let n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach(e=>n.push(e)),n}function iX(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function i$(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}let iF=aF({max_:function(e,t=null,n=!1){let a={x:aX(e,"x","max")};return aG.runKernel("Max",a,{reductionIndices:t,keepDims:n})}}),iZ=aF({min_:function(e,t=null,n=!1){let a={x:aX(e,"x","min")};return aG.runKernel("Min",a,{axis:t,keepDims:n})}}),iK=aF({pow_:function(e,t){let n=aX(e,"base","pow"),a=aX(t,"exp","pow");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel("Pow",r)}});function iD(e,t){if((ai(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ai(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return aK(e,[],[],t)}let iO=aF({sqrt_:function(e){let t={x:aX(e,"x","sqrt","float32")};return aG.runKernel(tJ,t)}}),iA=aF({square_:function(e){let t=aX(e,"x","square");return aG.runKernel("Square",{x:t},{})}}),iP=aF({sum_:function(e,t=null,n=!1){let a=aX(e,"x","sum");"bool"===a.dtype&&(a=rd(a,"int32"));let r={x:a};return aG.runKernel("Sum",r,{axis:t,keepDims:n})}}),iB=aF({norm_:function(e,t="euclidean",n=null,a=!1){let r=function e(t,n,a=null){if(0===t.rank)return rb(t);if(1!==t.rank&&null===a)return e(rP(t,[-1]),n,a);if(1===t.rank||"number"==typeof a||Array.isArray(a)&&1===a.length){if(1===n)return iP(rb(t),a);if(n===1/0)return iF(rb(t),a);if(n===-1/0)return iZ(rb(t),a);if("euclidean"===n||2===n)return iO(iP(iK(rb(t),iD(2,"int32")),a));throw Error(`Error in norm: invalid ord value: ${n}`)}if(Array.isArray(a)&&2===a.length){if(1===n)return iF(iP(rb(t),a[0]),a[1]-1);if(n===1/0)return iF(iP(rb(t),a[1]),a[0]);if(n===-1/0)return iZ(iP(rb(t),a[1]),a[0]);if("fro"===n||"euclidean"===n)return iO(iP(iA(t),a));throw Error(`Error in norm: invalid ord value: ${n}`)}throw Error(`Error in norm: invalid axis: ${a}`)}(e=aX(e,"x","norm"),t,n),i=r.shape;if(a){let t=w(n,e.shape);i=iE(r.shape,t)}return rP(r,i)}}),iH=aF({euclideanNorm_:function(e,t=null,n=!1){return iB(e,"euclidean",t,n)}}),iU=aF({exp_:function(e){let t={x:aX(e,"x","exp")};return aG.runKernel("Exp",t)}}),i_=aF({expandDims_:function(e,t=0){let n=aX(e,"x","expandDims","string_or_numeric");return f(t<=n.rank,()=>"Axis must be <= rank of the tensor"),aG.runKernel(eO,{input:n},{dim:t})}}),iY=aF({expm1_:function(e){let t={x:aX(e,"x","expm1")};return aG.runKernel(eA,t)}}),iQ=aF({tile_:function(e,t){let n=aX(e,"x","tile","string_or_numeric");return f(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),aG.runKernel(nr,{x:n},{reps:t})}}),iJ=aF({eye_:function(e,t,n,a="float32"){null==t&&(t=e);let r=rh([e,t],a),i=e<=t?e:t;for(let e=0;e<i;++e)r.set(1,e,e);let s=rP(r.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return iQ(i_(s,0),[n[0],1,1]);if(2===n.length)return iQ(i_(i_(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return iQ(i_(i_(i_(s,0),0),0),[n[0],n[1],n[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ij=aF({floor_:function(e){let t={x:aX(e,"x","floor","float32")};return aG.runKernel(eH,t)}}),iq=aF({gather_:function(e,t,n=0,a=0){let r=aX(e,"x","gather"),i=aX(t,"indices","gather","int32");return aG.runKernel(eY,{x:r,indices:i},{axis:n,batchDims:a})}}),i0=aF({greater_:function(e,t){let n=aX(e,"a","greater","string_or_numeric"),a=aX(t,"b","greater","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(eJ,r)}}),i1=aF({greaterEqual_:function(e,t){let n=aX(e,"a","greaterEqual","string_or_numeric"),a=aX(t,"b","greaterEqual","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(ej,r)}}),i2=aF({imag_:function(e){let t={input:aX(e,"input","imag")};return aG.runKernel(e1,t)}}),i3=aF({isFinite_:function(e){let t={x:aX(e,"x","isFinite")};return aG.runKernel(e2,t)}}),i9=aF({isInf_:function(e){let t={x:aX(e,"x","isInf")};return aG.runKernel(e3,t)}}),i5=aF({isNaN_:function(e){let t={x:aX(e,"x","isNaN")};return aG.runKernel(e9,t)}}),i4=aF({leakyRelu_:function(e,t=.2){let n={x:aX(e,"x","leakyRelu")};return aG.runKernel(e5,n,{alpha:t})}}),i7=aF({less_:function(e,t){let n=aX(e,"a","less","string_or_numeric"),a=aX(t,"b","less","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(e4,r)}}),i8=aF({lessEqual_:function(e,t){let n=aX(e,"a","lessEqual","string_or_numeric"),a=aX(t,"b","lessEqual","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(e7,r)}}),i6=aF({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){let i=aX(e,"x","localResponseNormalization");f(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),f(t%1==0,()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,o=!1;3===i.rank&&(o=!0,s=rP(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u=aG.runKernel("LRN",l,{depthRadius:t,bias:n,alpha:a,beta:r});return o?rP(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),se=aF({log_:function(e){let t={x:aX(e,"x","log","float32")};return aG.runKernel("Log",t)}}),st=aF({log1p_:function(e){let t={x:aX(e,"x","log1p")};return aG.runKernel(e6,t)}});function sn(e){return aG.customGrad(e)}let sa=aF({neg_:function(e){let t={x:aX(e,"x","neg")};return aG.runKernel("Neg",t)}}),sr=aF({softplus_:function(e){let t={x:aX(e,"x","softplus")};return aG.runKernel(tQ,t)}}),si=aF({logSigmoid_:function(e){let t=aX(e,"x","logSigmoid");return sn(e=>({value:sa(sr(sa(e))),gradFunc:t=>rg(t,rY(sa(e)))}))(t)}}),ss=aF({sub_:function(e,t){let n=aX(e,"a","sub"),a=aX(t,"b","sub");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel("Sub",r)}}),so=aF({logSoftmax_:function(e,t=-1){let n=aX(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return sn((e,n)=>{let a=iF(e,t,!0),r=ss(e,a),i=ss(rd(r,"float32"),se(iP(iU(r),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{let[a]=n,r=iU(a);return ss(e,rg(iP(e,t,!0),r))}}})(n)}}),sl=aF({logSumExp_:function(e,t=null,n=!1){let a=aX(e,"x","logSumExp"),r=w(t,a.shape),i=iF(a,r,!0),s=se(iP(iU(ss(a,i)),r)),o=rp(rP(i,s.shape),s);if(n){let e=iE(o.shape,r);return rP(o,e)}return o}}),su=aF({logicalAnd_:function(e,t){let n=aX(e,"a","logicalAnd","bool"),a=aX(t,"b","logicalAnd","bool");return iv(n.shape,a.shape),aG.runKernel(te,{a:n,b:a})}}),sh=aF({logicalNot_:function(e){let t={x:aX(e,"x","logicalNot","bool")};return aG.runKernel(tt,t)}}),sd=aF({logicalOr_:function(e,t){let n=aX(e,"a","logicalOr","bool"),a=aX(t,"b","logicalOr","bool");return iv(n.shape,a.shape),aG.runKernel(tn,{a:n,b:a})}}),sc=aF({logicalXor_:function(e,t){let n=aX(e,"a","logicalXor","bool"),a=aX(t,"b","logicalXor","bool");return iv(n.shape,a.shape),su(sd(e,t),sh(su(e,t)))}}),sp=aF({maxPool_:function(e,t,n,a,r){let i=aX(e,"x","maxPool"),s=i,o=!1;3===i.rank&&(o=!0,s=rP(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),f(rK(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),rA("maxPool",a,r);let l={x:s},u=aG.runKernel(ti,l,{filterSize:t,strides:n,pad:a,dimRoundingMode:r});return o?rP(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),sf=aF({maxPool3d_:function(e,t=[1,1,1],n,a,r,i="NDHWC"){let s=aX(e,"x","maxPool3d"),o=s,l=!1;4===s.rank&&(l=!0,o=rP(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),f(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),f("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),rA("maxPool3d",a,r);let u={x:o},h=aG.runKernel(to,u,{filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i});return l?rP(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),sm=aF({maximum_:function(e,t){let n=aX(e,"a","maximum"),a=aX(t,"b","maximum");[n,a]=aw(n,a),"bool"===n.dtype&&(n=rd(n,"int32"),a=rd(a,"int32")),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(tr,r)}}),sg=aF({mean_:function(e,t=null,n=!1){let a={x:aX(e,"x","mean")};return aG.runKernel(th,a,{axis:t,keepDims:n})}});function sb(e,t="float32"){if(F(e),"complex64"===t)return aZ(sb(e,"float32"),sb(e,"float32"));let n=X(b(e),t);return aG.makeTensor(n,e,t)}function sy(e,t="float32"){if(F(e),"complex64"===t)return aZ(sy(e,"float32"),sb(e,"float32"));let n=V(b(e),t);return aG.makeTensor(n,e,t)}let sx=aF({minimum_:function(e,t){let n=aX(e,"a","minimum"),a=aX(t,"b","minimum");[n,a]=aw(n,a),"bool"===n.dtype&&(n=rd(n,"int32"),a=rd(a,"int32")),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(td,r)}}),sk=aF({mirrorPad_:function(e,t,n){f("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let a=aX(e,"x","mirrorPad");if(0===a.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);let r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)f(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),f(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`);return aG.runKernel(tc,{x:a},{paddings:t,mode:n})}}),sv=aF({mod_:function(e,t){let n=aX(e,"a","mod"),a=aX(t,"b","mod");[n,a]=aw(n,a);let r={a:n,b:a};return aG.runKernel("Mod",r)}}),sI=aF({moments_:function(e,t=null,n=!1){let a=w(t,(e=aX(e,"x","moments")).shape),r=sg(e,a,n),i=r.shape;n||(i=iE(r.shape,a));let s=sg(iA(ss(rd(e,"float32"),rP(r,i))),a,n);return{mean:r,variance:s}}}),sw=aF({notEqual_:function(e,t){let n=aX(e,"a","notEqual","string_or_numeric"),a=aX(t,"b","notEqual","string_or_numeric");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(tm,r)}}),sS=aF({oneHot_:function(e,t,n=1,a=0,r="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:aX(e,"indices","oneHot","int32")};return aG.runKernel(tk,i,{dtype:r,depth:t,onValue:n,offValue:a})}}),sC=aF({onesLike_:function(e){let t={x:aX(e,"x","onesLike")};return aG.runKernel(tx,t)}}),sT=aF({pad_:function(e,t,n=0){let a=aX(e,"x","pad");if(0===a.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return aG.runKernel(tI,{x:a},{paddings:t,constantValue:n})}}),sN=aF({spaceToBatchND_:function(e,t,n){let a=aX(e,"x","spaceToBatchND");return f(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),f(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),f(a.shape.reduce((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),aG.runKernel(tj,{x:a},{blockShape:t,paddings:n})}}),sR=aF({pool_:function(e,t,n,a,r,i,s){let o;null==r&&(r=[1,1]),null==i&&(i=1),0===a&&(a="valid");let l=aX(e,"x","maxPool"),u=l,h=!1;3===l.rank&&(h=!0,u=rP(l,[1,l.shape[0],l.shape[1],l.shape[2]])),f(rK(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);let d=rW(u.shape,t,i,r,a),c=[d.dilationHeight,d.dilationWidth];o="same"===a?function(e,t){let n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),a=n.map(e=>Math.floor(e/2)),r=n.map((e,t)=>e-a[t]);return n.map((e,t)=>[a[t],r[t]])}([d.filterHeight,d.filterWidth],c):[[0,0],[0,0]];let p=1===c[0]&&1===c[1],[m,g]=function(e,t,n){let a=n.map(e=>e[0]),r=n.map(e=>e[1]),i=e.concat(a,r),s=t.map((e,t)=>(e-i[t]%e)%e),o=r.map((e,t)=>e+s[t]);return[t.map((e,t)=>[a[t],o[t]]),t.map((e,t)=>[0,s[t]])]}([d.inHeight,d.inWidth],c,o),b=p?a:"valid",y=p?u:sN(u,c,m),x=("avg"===n?()=>rB(y,t,i,b,s):()=>sp(y,t,i,b,s))(),k=p?x:rj(x,c,g);return h?rP(k,[k.shape[1],k.shape[2],k.shape[3]]):k}}),sG=aF({prelu_:function(e,t){let n=aX(e,"x","prelu"),a=aX(t,"alpha","prelu");return aG.runKernel(tw,{x:n,alpha:a})}}),sW=aF({prod_:function(e,t=null,n=!1){let a=aX(e,"x","prod");"bool"===a.dtype&&(a=rd(a,"int32"));let r={x:a};return aG.runKernel(tS,r,{axis:t,keepDims:n})}});var sL={exports:{}};sL.exports,function(e,t,n){function a(e){var t,n=this,a=(t=0xefc8249d,function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));t=a>>>0,a-=t,a*=t,t=a>>>0,a-=t,t+=0x100000000*a}return(t>>>0)*23283064365386963e-26});n.next=function(){var e=2091639*n.s0+23283064365386963e-26*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new a(e),i=t&&t.state,s=n.next;return s.int32=function(){return 0x100000000*n.next()|0},s.double=function(){return s()+(2097152*s()|0)*11102230246251565e-32},s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.alea=i}(0,sL,!1);var sM=sL.exports,sE={exports:{}};sE.exports,function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/0x100000000};return s.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a);return a},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xor128=i}(0,sE,!1);var sz=sE.exports,sV={exports:{}};sV.exports,function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/0x100000000};return s.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a);return a},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xorwow=i}(0,sV,!1);var sX=sV.exports,s$={exports:{}};s$.exports,function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],e^=e>>>7,n=e^e<<24^((e=a[r+1&7])^e>>>10)^((e=a[r+3&7])^e>>>3)^((e=a[r+4&7])^e<<7),e=a[r+7&7],e^=e<<13,n^=e^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/0x100000000};return s.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a);return a},s.int32=n.next,s.quick=s,i&&(i.x&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xorshift7=i}(0,s$,!1);var sF=s$.exports,sZ={exports:{}};sZ.exports,function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,i=t.i;return t.w=a=a+0x61c88647|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(a^a>>>16)|0},function(e,t){var n,a,r,i,s,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(a^=t.charCodeAt((i+32)%t.length)),0===i&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,i>=0&&(s=s+0x61c88647|0,r=0==(n=o[127&i]^=a+s)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=s,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/0x100000000};return s.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a);return a},s.int32=n.next,s.quick=s,i&&(i.X&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xor4096=i}(0,sZ,!1);var sK=sZ.exports,sD={exports:{}};sD.exports,function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/0x100000000};return s.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,a=(e+t)/2097152;while(0===a);return a},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.tychei=i}(0,sD,!1);var sO=sD.exports,sA={exports:{}};let sP=function(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(t){var a=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,a.get?a:{enumerable:!0,get:function(){return e[t]}})}),n}(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));!function(e,t,n){var a,r="random",i=n.pow(256,6),s=n.pow(2,52),o=2*s;function l(l,p,f){var m=[],g=d(function e(t,n){var a,r=[],i=typeof t;if(n&&"object"==i)for(a in t)try{r.push(e(t[a],n-1))}catch{}return r.length?r:"string"==i?t:t+"\0"}((p=!0==p?{entropy:!0}:p||{}).entropy?[l,c(t)]:l??function(){try{var n;return a&&(n=a.randomBytes)?n=n(256):(n=new Uint8Array(256),(e.crypto||e.msCrypto).getRandomValues(n)),c(n)}catch{var r=e.navigator,i=r&&r.plugins;return[+new Date,e,i,e.screen,c(t)]}}(),3),m),b=new u(m),y=function(){for(var e=b.g(6),t=i,n=0;e<s;)e=(e+n)*256,t*=256,n=b.g(1);for(;e>=o;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|b.g(4)},y.quick=function(){return b.g(4)/0x100000000},y.double=y,d(c(b.S),t),(p.pass||f||function(e,t,a,i){return i&&(i.S&&h(i,b),e.state=function(){return h(b,{})}),a?(n[r]=e,t):e})(y,g,"global"in p?p.global:this==n,p.state)}function u(e){var t,n=e.length,a=this,r=0,i=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);r<256;)s[r]=r++;for(r=0;r<256;r++)s[r]=s[i=255&i+e[r%n]+(t=s[r])],s[i]=t;(a.g=function(e){for(var t,n=0,r=a.i,i=a.j,s=a.S;e--;)t=s[r=255&r+1],n=256*n+s[255&(s[r]=s[i=255&i+t])+(s[i]=t)];return a.i=r,a.j=i,n})(256)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function d(e,t){for(var n,a=e+"",r=0;r<a.length;)t[255&r]=255&(n^=19*t[255&r])+a.charCodeAt(r++);return c(t)}function c(e){return String.fromCharCode.apply(0,e)}if(d(n.random(),t),sA.exports){sA.exports=l;try{a=sP}catch{}}else n["seed"+r]=l}("u">typeof self?self:nT,[],Math);var sB=sA.exports;sB.alea=sM,sB.xor128=sz,sB.xorwow=sX,sB.xorshift7=sF,sB.xor4096=sK,sB.tychei=sO;class sH{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=r||Math.random();this.random=sB.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,i;do i=(a=2*this.random()-1)*a+(r=2*this.random()-1)*r;while(i>=1||0===i);let s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class sU{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sB.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let s_=aF({randomNormal_:function(e,t=0,n=1,a,r){if(F(e),null!=a&&"bool"===a)throw Error(`Unsupported data type ${a}`);let i=new sH(t,n,a,!1,r),s=rh(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),sY=aF({randomUniform_:function(e,t=0,n=1,a="float32",r){F(e);let i=rh(e,a),s=new sU(t,n,null,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});function sQ(e,t,n=1,a="float32"){if(0===n)throw Error("Cannot have a step of zero");return aG.runKernel(tR,{},{start:e,stop:t,step:n,dtype:a})}let sJ=aF({real_:function(e){let t={input:aX(e,"input","real")};return aG.runKernel(tG,t)}}),sj=aF({reciprocal_:function(e){let t={x:aX(e,"x","reciprocal")};return aG.runKernel(tW,t)}}),sq=aF({relu_:function(e){let t={x:aX(e,"x","relu")};return aG.runKernel(tL,t)}}),s0=aF({relu6_:function(e){let t={x:aX(e,"x","relu6")};return aG.runKernel(t$,t)}}),s1=aF({reverse_:function(e,t){let n={x:aX(e,"x","reverse")};return aG.runKernel(tF,n,{dims:t})}}),s2=aF({round_:function(e){let t={x:aX(e,"x","round")};return aG.runKernel(tZ,t)}}),s3=aF({rsqrt_:function(e){let t={x:aX(e,"x","rsqrt","float32")};return aG.runKernel(tK,t)}}),s9=aF({selu_:function(e){let t={x:aX(e,"x","selu")};return aG.runKernel(tB,t)}}),s5=aF({separableConv2d_:function(e,t,n,a,r,i=[1,1],s="NHWC"){let o=aX(e,"x","separableConv2d"),l=aX(t,"depthwiseFilter","separableConv2d"),u=aX(n,"pointwiseFilter","separableConv2d"),h=o,d=!1;if(3===o.rank&&(d=!0,h=rP(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),f(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),f(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),f(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),f(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let c=l.shape[2],p=l.shape[3];f(u.shape[2]===c*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*p}, but got ${u.shape[2]}.`);let m=ia(ib(h,l,a,r,s,i),u,1,"valid",s);return d?rP(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),s4=aF({sign_:function(e){let t={x:aX(e,"x","sign")};return aG.runKernel(t_,t)}}),s7=aF({sin_:function(e){let t={x:aX(e,"x","sin","float32")};return aG.runKernel("Sin",t)}}),s8=aF({sinh_:function(e){let t={x:aX(e,"x","sinh")};return aG.runKernel(tU,t)}}),s6=aF({slice1d_:function(e,t,n){let a=aX(e,"x","slice1d");return f(1===a.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),rQ(a,[t],[n])}}),oe=aF({slice2d_:function(e,t,n){let a=aX(e,"x","slice2d");return f(2===a.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),rQ(a,t,n)}}),ot=aF({slice3d_:function(e,t,n){let a=aX(e,"x","slice3d");return f(3===a.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),rQ(a,t,n)}}),on=aF({slice4d_:function(e,t,n){let a=aX(e,"x","slice4d");return f(4===a.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),rQ(a,t,n)}}),oa=aF({softmax_:function(e,t=-1){let n=aX(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={dim:t};return aG.runKernel(t0,{logits:n},a)}}),or=aF({fft_:function(e){return f("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),aG.runKernel("FFT",{input:e})}}),oi=aF({ifft_:function(e){return f("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),aG.runKernel(e0,{input:e})}}),os=aF({irfft_:function(e){let t;let n=e.shape[e.shape.length-1],a=e.size/n;if(n<=2)t=oi(rP(e,[a,n]));else{let r=[a,2*(n-1)],i=rP(sJ(e),[a,n]),s=rP(i2(e),[a,n]),o=s1(rQ(i,[0,1],[a,n-2]),1),l=rg(s1(rQ(s,[0,1],[a,n-2]),1),iD(-1));t=oi(rP(aZ(rU([i,o],1),rU([s,l],1)),[r[0],r[1]]))}if(t=sJ(t),3===e.rank&&0!==e.shape[0]){let n=t,a=e.shape[0];t=rP(t,[a,t.shape[0]/a,t.shape[1]]),n.dispose()}return t}}),oo=aF({split_:function(e,t,n=0){let a={x:aX(e,"x","split")};return aG.runKernel(tq,a,{numOrSizeSplits:t,axis:n})}}),ol=aF({rfft_:function(e,t){let n;f("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a=e.shape[e.shape.length-1],r=e.size/a;if(null!=t&&t<a){let r=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,n=rQ(e,r,i),a=t}else if(null!=t&&t>a){let r=e.shape.map(e=>e);r[e.shape.length-1]=t-a,n=rU([e,sb(r)],e.shape.length-1),a=t}else n=e;let i=iS(n),s=or(rP(aZ(n,i),[r,a])),o=Math.floor(a/2)+1,l=sJ(s),u=i2(s),h=oo(l,[o,a-o],l.shape.length-1),d=oo(u,[o,a-o],u.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=o,rP(aZ(h[0],d[0]),c)}}),ou=aF({squaredDifference_:function(e,t){let n=aX(e,"a","squaredDifference"),a=aX(t,"b","squaredDifference");[n,a]=aw(n,a),iv(n.shape,a.shape);let r={a:n,b:a};return aG.runKernel(t4,r,{})}}),oh=aF({squeeze_:function(e,t){let n=aX(e,"x","squeeze","string_or_numeric");return rP(n,S(n.shape,t).newShape)}}),od=aF({stack_:function(e,t=0){let n=a$(e,"tensors","stack","string_or_numeric");return f(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&f(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),aG.runKernel(tv,n,{axis:t})}}),oc=aF({step_:function(e,t=0){let n={x:aX(e,"x","step")};return aG.runKernel(nc,n,{alpha:t})}}),op=aF({stridedSlice_:function(e,t,n,a,r=0,i=0,s=0,o=0,l=0){let u={x:aX(e,"x","stridedSlice","string_or_numeric")};return aG.runKernel(t6,u,{begin:t,end:n,strides:a,beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l})}}),of=aF({tan_:function(e){let t={x:aX(e,"x","tan","float32")};return aG.runKernel("Tan",t)}});function om(e,t){g(e);let n=az(e,t);if(1!==n.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return aK(e,null,n,t)}function og(e,t,n){if(g(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let a=az(e,n);if(2!==a.length&&1!==a.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return aK(e,t,a,n)}function ob(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw Error(i+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw Error(i+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw Error(i+` update.rank != ${r+e.length-a}`);for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw Error(i+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function oy(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,i=n.length,s=1;for(let e=r;e<i;++e)s*=n[e];let o=r<1?1:r,l=b(t.shape)/o,u=[...E(n.slice(0,r)),1];return{sliceRank:r,numUpdates:l,sliceSize:s,strides:u,outputSize:b(n)}}let ox=aF({topk_:function(e,t=1,n=!0){let a=aX(e,"x","topk");if(0===a.rank)throw Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let[i,s]=aG.runKernel(ni,{x:a},{k:t,sorted:n});return{values:i,indices:s}}}),ok=aF({truncatedNormal_:function(e,t=0,n=1,a,r){if(F(e),null!=a&&"bool"===a)throw Error("Unsupported data type $ { dtype }");let i=new sH(t,n,a,!0,r),s=rh(e,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),ov=aF({unique_:function(e,t=0){let n=aX(e,"x","unique","string_or_numeric");f(n.rank>0,()=>"The input tensor must be at least 1D");let[a,r]=aG.runKernel(nl,{x:n},{axis:t});return{values:a,indices:r}}}),oI=aF({unsortedSegmentSum_:function(e,t,n){let a=aX(e,"x","unsortedSegmentSum"),r=aX(t,"segmentIds","unsortedSegmentSum","int32");return f(n%1==0,()=>"numSegments must be of dtype int"),aG.runKernel(nh,{x:a,segmentIds:r},{numSegments:n})}}),ow=aF({unstack_:function(e,t=0){let n=aX(e,"x","unstack","string_or_numeric");return f(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),aG.runKernel(nu,{value:n},{axis:t})}});function oS(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let a=rh(e,"int32"),r=rh([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let i=a.indexToLoc(n[t]),s=t*e.length;r.values.set(i,s)}return r.toTensor()}let oC=aF({transpose_:function(e,t,n){let a=aX(e,"x","transpose");if(null==t&&(t=a.shape.map((e,t)=>t).reverse()),f(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(e=>{f(e>=0&&e<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`)}),a.rank<=1)return a.clone();let r={perm:t};return"complex64"===a.dtype?aP(()=>{let e=sJ(a),t=i2(a);return e=aG.runKernel(no,{x:e},r),t=aG.runKernel(no,{x:t},r),n&&(t=sa(t)),aZ(e,t)}):aG.runKernel(no,{x:a},r)}}),oT=aF({dropout_:function(e,t,n,a){let r=aX(e,"x","dropout");if(f("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),f(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof am?r.clone():r;let i=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t;return rg(r,rm(ij(rp(sY(i,0,1,"float32",a),s)),s))}}),oN=aF({conv2DBackpropFilter_:function(e,t,n,a,r,i="NHWC",s){let o=e;3===e.rank&&(o=rP(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=rP(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),f(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),f(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===i?o.shape[3]:o.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];f(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),f(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),rA("conv2dDerFilter",r,s);let d={x:o,dy:l};return aG.runKernel(ek,d,{strides:a,pad:r,dataFormat:i,dimRoundingMode:s,filterShape:n})}});function oR(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return rg(e,oc(t));throw Error(`Cannot compute gradient for fused activation ${n}.`)}function oG(e,t){let n=t,a=ik(e.shape,t.shape);return a.length>0&&(n=iP(n,a)),rP(n,e.shape)}function oW(e,t,n,a){if("linear"===t)return e;if("relu"===t)return sq(e);if("elu"===t)return iR(e);if("relu6"===t)return s0(e);if("prelu"===t)return sG(e,n);if("leakyrelu"===t)return i4(e,a);if("sigmoid"===t)return rY(e);throw Error(`Unknown fused activation ${t}.`)}let oL=(e,t)=>!(e>0)||"linear"===t,oM=aF({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){let d,c;if(l=l||"linear",!1===oL(aG.state.gradientDepth,l)){f("NHWC"===r,()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let d=ia(e,t,n,a,r,i,s);return null!=o&&(d=rp(d,o)),oW(d,l,u,h)}let p=aX(e,"x","conv2d","float32"),m=aX(t,"filter","conv2d","float32"),g=p,b=!1;3===p.rank&&(b=!0,g=rP(p,[1,p.shape[0],p.shape[1],p.shape[2]])),f(4===g.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`),f(4===m.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),rA("fused conv2d",a,s);let y="NHWC"===r?g.shape[3]:g.shape[1];f(m.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${m.shape[2]}.`),f(rK(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let x=rM(g.shape,m.shape,n,i,a,s);if(null!=o&&(d=aX(o,"bias","fused conv2d"),[d]=aw(d,p),"NHWC"===r?iv(x.outShape,d.shape):(f(d.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${d.shape.length}.`),f(0===d.shape.length||d.shape[0]===x.outChannels||1===d.shape[0],()=>`Error in fused conv2d: bias shape (${d.shape}) is not compatible with the number of output channels (${x.outChannels})`))),null!=u){let e=u.shape;if(f(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)f(1===e[0]||e[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`);else if(3===e.length)try{iv(e,x.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`)}c=aX(u,"prelu weights","fused conv2d")}let k=(e,t)=>{f("NHWC"===r,()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[s,o,u,h]=t,d=oR(e,u,l);f(rZ(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let c=[ii(o.shape,d,s,n,a),oN(o,d,s.shape,n,a)];if(null!=h){let e=oG(h,d);c.push(e)}return c},v={x:g,filter:m,bias:d,preluActivationWeights:c},I={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s,activation:l,leakyreluAlpha:h};return null==o?sn((e,t,n)=>{let a=aG.runKernel(ng,v,I);return n([t,e,a]),b&&(a=rP(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:k}})(g,m):sn((e,t,n,a)=>{let r=aG.runKernel(ng,v,I);return a([t,e,r,n]),b&&(r=rP(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}})(g,m,d)}}),oE=aF({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,i=[1,1],s){let o=e;3===e.rank&&(o=rP(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=rP(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l};return aG.runKernel(eM,u,{strides:a,pad:r,dimRoundingMode:s,dilations:i,filterShape:n})}}),oz=aF({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,i=[1,1],s){let o=t,l=!1;3===t.rank&&(l=!0,o=rP(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h=aG.runKernel(eE,u,{strides:a,pad:r,dimRoundingMode:s,dilations:i,inputShape:e});return l?rP(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),oV=aF({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){let l,u;if(!1===oL(aG.state.gradientDepth,i)){let l=r_(e,t,n,a);return null!=r&&(l=rp(l,r)),oW(l,i,s,o)}let h=aX(e,"a","fused matMul"),d=aX(t,"b","fused matMul");[h,d]=aw(h,d);let c=n?h.shape[h.rank-2]:h.shape[h.rank-1],p=a?d.shape[d.rank-1]:d.shape[d.rank-2],m=n?h.shape[h.rank-1]:h.shape[h.rank-2],g=a?d.shape[d.rank-2]:d.shape[d.rank-1],y=h.shape.slice(0,-2),x=d.shape.slice(0,-2),k=b(y),v=b(x);f(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${h.shape} and ${d.shape} and transposeA=${n} and transposeB=${a} must match.`);let I=iv(h.shape.slice(0,-2),d.shape.slice(0,-2)).concat([m,g]),w=n?rP(h,[k,c,m]):rP(h,[k,m,c]),S=a?rP(d,[v,g,p]):rP(d,[v,p,g]);null!=r&&(l=aX(r,"bias","fused matMul"),[l]=aw(l,h),iv(I,l.shape)),null!=s&&(u=aX(s,"prelu weights","fused matMul"));let C=(e,t)=>{let s,o;let[l,u,h,d]=t,c=oR(rP(e,h.shape),h,i);return(n||a?!n&&a?(s=r_(c,u,!1,!1),o=r_(c,l,!0,!1)):n&&!a?(s=r_(u,c,!1,!0),o=r_(l,c,!1,!1)):(s=r_(u,c,!0,!0),o=r_(c,l,!0,!0)):(s=r_(c,u,!1,!0),o=r_(l,c,!0,!1)),null!=r)?[s,o,oG(d,c)]:[s,o]},T={a:w,b:S,bias:l,preluActivationWeights:u},N={transposeA:n,transposeB:a,activation:i,leakyreluAlpha:o};return null==r?sn((e,t,n)=>{let a=aG.runKernel(nm,T,N);return n([e,t,a]),{value:rP(a,I),gradFunc:C}})(w,S):sn((e,t,n,a)=>{let r=aG.runKernel(nm,T,N);return a([e,t,r,n]),{value:rP(r,I),gradFunc:C}})(w,S,l)}}),oX=aF({cropAndResize_:function(e,t,n,a,r="bilinear",i=0){let s=aX(e,"image","cropAndResize"),o=aX(t,"boxes","cropAndResize","float32"),l=aX(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return f(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),f(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),f(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),f(2===a.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),f(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),f("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),aG.runKernel(eR,{image:s,boxes:o,boxInd:l},{method:r,extrapolationValue:i,cropSize:a})}}),o$=aF({flipLeftRight_:function(e){let t=aX(e,"image","flipLeftRight","float32");return f(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),aG.runKernel(eB,{image:t},{})}}),oF=aF({grayscaleToRGB_:function(e){let t=aX(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];f(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),f(1===a,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`);let r=Array(t.rank);return r.fill(1,0,n),r[n]=3,iQ(t,r)}}),oZ=aF({rgbToGrayscale_:function(e){let t;let n=aX(e,"image","RGBToGrayscale"),a=n.rank-1,r=n.shape[a];f(n.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${n.rank}.`),f(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let i=n.dtype,s=rd(n,"float32"),o=om([.2989,.587,.114]);switch(n.rank){case 2:t=iN("ij,j->i",s,o);break;case 3:t=iN("ijk,k->ij",s,o);break;case 4:t=iN("ijkl,l->ijk",s,o);break;case 5:t=iN("ijklm,m->ijkl",s,o);break;case 6:t=iN("ijklmn,n->ijklm",s,o);break;default:throw Error("Not a valid tensor rank.")}return rd(t=i_(t,-1),i)}}),oK=aF({rotateWithOffset_:function(e,t,n=0,a=.5){let r=aX(e,"image","rotateWithOffset","float32");return f(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),aG.runKernel(nf,{image:r},{radians:t,fillValue:n,center:a})}});function oD(e,t,n,a,r,i){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);let s=e.shape[0];return n=Math.min(n,s),f(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),f(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),f(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),f(1===t.rank,()=>"scores must be a 1D tensor"),f(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),f(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:i}}let oO=aF({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let i=aX(e,"boxes","nonMaxSuppression","float32"),s=aX(t,"scores","nonMaxSuppression","float32"),o=oD(i,s,n,a,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return aG.runKernel(tg,{boxes:i,scores:s},l)}});function oA(e,t){return e>t?1:e<t?-1:0}function oP(e,t,n,a,r,i){return oB(e,t,n,a,r,0,!1,i,!0)}function oB(e,t,n,a,r,i,s=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(oH);let h=i>0?-.5/i:0,d=[],c=[];for(;d.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<r)break;let o=!1;for(let n=d.length-1;n>=s;--n){let s=function(e,t,n){let a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),p=(o-i)*(l-s),f=(d-u)*(c-h);if(p<=0||f<=0)return 0;let m=Math.max(Math.min(o,d)-Math.max(i,u),0)*Math.max(Math.min(l,c)-Math.max(s,h),0);return m/(p+f-m)}(e,i,d[n]);if(s>=a){o=!0;break}if(t.score=t.score*function(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}(a,h,s),t.score<=r)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(i),c.push(t.score)):t.score>r&&function(e,t,n){let a=function(e,t,n){let a=0,r=e.length,i=0,s=!1;for(;a<r;){let o=n(t,e[i=a+(r-a>>>1)]);o>0?a=i+1:(r=i,s=!o)}return s?a:-a-1}(e,t,n||oA);e.splice(a<0?-(a+1):a,0,t)}(u,t,oH))}let p=d.length,f=n-p;o&&f>0&&(d.push(...Array(f).fill(0)),c.push(...Array(f).fill(0)));let m={selectedIndices:d};return s&&(m.selectedScores=c),l&&(m.validOutputs=p),m}function oH(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function oU(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){var i;let s=aX(e,"boxes","nonMaxSuppressionAsync"),o=aX(t,"scores","nonMaxSuppressionAsync"),l=oD(s,o,n,a,r);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold;let u=await Promise.all([s.data(),o.data()]),{selectedIndices:h}=(i=u[0],oB(i,u[1],n,a,r,0));return s!==e&&s.dispose(),o!==t&&o.dispose(),om(h,"int32")}let o_=aF({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=0){let s=aX(e,"boxes","nonMaxSuppression"),o=aX(t,"scores","nonMaxSuppression"),l=oD(s,o,n,a,r,i);n=l.maxOutputSize;let u={maxOutputSize:n,iouThreshold:a=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=aG.runKernel(ty,{boxes:s,scores:o},u);return{selectedIndices:h[0],selectedScores:h[1]}}});async function oY(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=0){var s;let o=aX(e,"boxes","nonMaxSuppressionAsync"),l=aX(t,"scores","nonMaxSuppressionAsync"),u=oD(o,l,n,a,r,i);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;let h=await Promise.all([o.data(),l.data()]),{selectedIndices:d,selectedScores:c}=(s=h[0],oB(s,h[1],n,a,r,i,!0));return o!==e&&o.dispose(),l!==t&&l.dispose(),{selectedIndices:om(d,"int32"),selectedScores:om(c)}}let oQ=aF({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=aX(e,"boxes","nonMaxSuppression"),o=aX(t,"scores","nonMaxSuppression"),l=oD(s,o,n,a,r,null),u=l.maxOutputSize,h=l.iouThreshold,d=l.scoreThreshold,c=aG.runKernel(tb,{boxes:s,scores:o},{maxOutputSize:u,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:i});return{selectedIndices:c[0],validOutputs:c[1]}}});async function oJ(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=aX(e,"boxes","nonMaxSuppressionAsync"),o=aX(t,"scores","nonMaxSuppressionAsync"),l=oD(s,o,n,a,r,null),u=l.maxOutputSize,h=l.iouThreshold,d=l.scoreThreshold,[c,p]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=oP(c,p,u,h,d,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:om(f,"int32"),validOutputs:iD(m,"int32")}}let oj=aF({resizeBilinear_:function(e,t,n=!1,a=!1){let r=aX(e,"images","resizeBilinear");f(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),f(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),f(!1===a||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=rP(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let o={images:i},l=aG.runKernel(tV,o,{alignCorners:n,halfPixelCenters:a,size:t});return s?rP(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),oq=aF({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){let r=aX(e,"images","resizeNearestNeighbor");f(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),f(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),f("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),f(!1===a||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=rP(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let o={images:i},l=aG.runKernel(tE,o,{alignCorners:n,halfPixelCenters:a,size:t});return s?rP(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),o0=aF({threshold_:function(e,t="binary",n=!1,a=.5){let r=aX(e,"image","threshold"),i=r.shape[0]*r.shape[1],s=rg(om([a]),255),o,l,u,h;if(f(3===r.rank,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),f(3===r.shape[2]||1===r.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),f("int32"===r.dtype||"float32"===r.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),f("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===r.shape[2]){[o,l,u]=oo(r,[1,1,1],-1);let e=rg(o,.2989),t=rg(l,.587),n=rg(u,.114);h=rp(rp(e,t),n)}else h=e;return"otsu"===t&&(s=function(e,t){let n=om([-1]),a=om([0]),r=om([0]),i,s,o,l,u,h;for(let d=0;d<e.size-1;d++){i=rQ(e,0,d+1),s=rQ(e,d+1),u=rm(iP(i),t),h=rm(iP(s),t),o=rm(iP(rg(i,sQ(0,i.size))),iP(i));let c=r4(s.shape,i.size),p=rp(sQ(0,s.size),c),f=ss(o,l=rm(iP(rg(s,p)),iP(s))),m=ss(o,l),g=rg(u,h),b=i0(r=rg(rg(g,f),m),a);a=iw(b,r,a),n=iw(b,om([d]),n)}return n}(r3(rd(s2(h),"int32"),aD([]),256),i)),rd(rg(n?i8(h,s):i0(h,s),255),"int32")}}),o1=aF({transform_:function(e,t,n="nearest",a="constant",r=0,i){let s=aX(e,"image","transform","float32"),o=aX(t,"transforms","transform","float32");return f(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),f(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),f(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`),aG.runKernel(ns,{image:s,transforms:o},{interpolation:n,fillMode:a,fillValue:r,outputShape:i})}});function o2(e,t=!1){return aG.tidy(()=>{f(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],a=e.shape[1],r=iJ(n),i=rc(e),s=og([[1]],[1,1]),o=rc(s),l=n>=a?a:n;for(let e=0;e<l;++e){let t=i,l=o,u=r;[o,i,r]=aG.tidy(()=>{let t=rQ(i,[e,e],[n-e,1]),l=iB(t),u=rQ(i,[e,e],[1,1]),h=iw(i0(u,0),og([[-1]]),og([[1]])),d=ss(u,rg(h,l)),c=rm(t,d);o=1===c.shape[0]?rc(s):rU([s,rQ(c,[1,0],[c.shape[0]-1,c.shape[1]])],0);let p=sa(rm(r_(h,d),l)),f=rQ(i,[e,0],[n-e,a]),m=rg(p,o),g=oC(o);if(0===e)i=ss(f,r_(m,r_(g,f)));else{let t=ss(f,r_(m,r_(g,f)));i=rU([rQ(i,[0,0],[e,a]),t],0)}let b=oC(m),y=rQ(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=ss(y,r_(r_(y,o),b));else{let t=ss(y,r_(r_(y,o),b));r=rU([rQ(r,[0,0],[n,e]),t],1)}return[o,i,r]}),aB([t,l,u])}return!t&&n>a&&(r=rQ(r,[0,0],[n,a]),i=rQ(i,[0,0],[a,a])),[r,i]})}aF({bandPart_:function(e,t,n){let a,r;let i=aX(e,"a","bandPart");f(i.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${i.rank}.`);let s=i.shape,[o,l]=i.shape.slice(-2);"number"==typeof t?(f(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),f(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),a=aX(t<0?o:t,"numLower","bandPart")):(f("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),a=iw(i7(t,0),o,sx(t,o))),"number"==typeof n?(f(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),f(n<=l,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`),r=aX(n<0?l:n,"numUpper","bandPart")):(f("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),r=iw(i7(n,0),l,sx(n,l)));let u=ss(rP(sQ(0,o,1,"int32"),[-1,1]),sQ(0,l,1,"int32")),h=su(i8(u,a),i1(u,sa(r))),d=sb([o,l],i.dtype);return rP(od(ow(rP(i,[-1,o,l])).map(e=>iw(h,e,d))),s)}}),aF({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,f(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)f(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=oo(e,e.shape[0],0).map(e=>oh(e,[0]));f(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],a=e;for(let t=0;t<e.length;++t)n.push(aG.tidy(()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){let t=rg(iP(rg(n[a],e)),n[a]);e=ss(e,t)}return rm(e,iB(e,"euclidean"))}));return t?od(n,0):n}});let o3=aF({qr_:function(e,t=!1){if(f(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return o2(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),a=ow(rP(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];return a.forEach(e=>{let[n,a]=o2(e,t);r.push(n),i.push(a)}),[rP(od(r,0),e.shape),rP(od(i,0),e.shape)]}}}),o9={flipLeftRight:o$,grayscaleToRGB:oF,resizeNearestNeighbor:oq,resizeBilinear:oj,rgbToGrayscale:oZ,rotateWithOffset:oK,cropAndResize:oX,nonMaxSuppression:oO,nonMaxSuppressionAsync:oU,nonMaxSuppressionWithScore:o_,nonMaxSuppressionWithScoreAsync:oY,nonMaxSuppressionPadded:oQ,nonMaxSuppressionPaddedAsync:oJ,threshold:o0,transform:o1},o5=new Map,o4=new Map;class o7{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class o8{constructor(){this.classNameMap={}}static getMap(){return null==o8.instance&&(o8.instance=new o8),o8.instance}static register(e){o8.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function o6(e,t,n){f(null!=e.className,()=>"Class being registered does not have the static className property defined."),f("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),f(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);let a=t+">"+n;return o8.register(e),o5.set(a,e),o4.set(e,a),e}class le extends o7{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:r[e.name]}));this.applyGradients(e)}else this.applyGradients(r);return aB(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){f(L(e),()=>"The f passed in variableGrads(f) must be a function"),f(null==t||Array.isArray(t)&&t.every(e=>e instanceof ab),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n)for(let e in t=[],aG.registeredVariables)t.push(aG.registeredVariables[e]);let a=n?t.filter(e=>!e.trainable):null,r=t.length;f((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let{value:i,grads:s}=aG.gradients(e,t,null,!0);f(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),f(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let o={};return t.forEach((e,t)=>{null!=s[t]&&(o[e.name]=s[t])}),null!=a&&a.forEach(e=>o[e.name]=null),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&aB(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:iD(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(le,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class lt extends le{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=aG.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=aG.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:aP(()=>iS(a).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:aP(()=>iS(a).variable(!1))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;aP(()=>{let e=rp(rg(i,this.rho),rg(iA(r),1-this.rho)),t=rg(rm(iO(rp(s,this.epsilon)),iO(rp(i,this.epsilon))),r),n=rp(rg(s,this.rho),rg(iA(t),1-this.rho));i.assign(e),s.assign(n);let o=rp(rg(t,-this.learningRate),a);a.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(aB(this.accumulatedGrads.map(e=>e.variable)),aB(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}class ln extends le{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=aG.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:aP(()=>r4(a.shape,this.initialAccumulatorValue).variable(!1))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[n].variable;aP(()=>{let e=rp(i,iA(r));i.assign(e);let t=rp(rg(rm(r,iO(rp(e,aG.backend.epsilon()))),-this.learningRate),a);a.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&aB(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}class la extends le{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],aP(()=>{this.accBeta1=iD(t).variable(),this.accBeta2=iD(n).variable()}),null==a&&(this.epsilon=aG.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);aP(()=>{let n=ss(1,this.accBeta1),a=ss(1,this.accBeta2);t.forEach((t,r)=>{let i=aG.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:aP(()=>iS(i).variable(!1))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:aP(()=>iS(i).variable(!1))});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=rp(rg(o,this.beta1),rg(s,1-this.beta1)),h=rp(rg(l,this.beta2),rg(iA(s),1-this.beta2)),d=rm(u,n),c=rm(h,a);o.assign(u),l.assign(h);let p=rp(rg(rm(d,rp(iO(c),this.epsilon)),-this.learningRate),i);i.assign(p)}),this.accBeta1.assign(rg(this.accBeta1,this.beta1)),this.accBeta2.assign(rg(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&aB(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&aB(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),aP(()=>{this.accBeta1.assign(iK(this.beta1,this.iterations_+1)),this.accBeta2.assign(iK(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}class lr extends le{static get className(){return"Adamax"}constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],aP(()=>{this.iteration=iD(0).variable(),this.accBeta1=iD(t).variable()}),null==a&&(this.epsilon=aG.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);aP(()=>{let n=ss(1,this.accBeta1),a=rm(-this.learningRate,rp(rg(this.iteration,this.decay),1));t.forEach((t,r)=>{let i=aG.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:iS(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:iS(i).variable(!1)});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=rp(rg(o,this.beta1),rg(s,1-this.beta1)),h=sm(rg(l,this.beta2),rb(s));o.assign(u),l.assign(h);let d=rp(rg(rm(a,n),rm(u,rp(h,this.epsilon))),i);i.assign(d)}),this.iteration.assign(rp(this.iteration,1)),this.accBeta1.assign(rg(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&aB(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&aB(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class li extends le{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let r=aG.registeredVariables[t];aP(()=>{let e=rp(rg(this.c,a),r);r.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=aH(iD(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ls extends li{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=iD(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=aG.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:aP(()=>iS(a).variable(!1))});let r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&aP(()=>{let e;let t=rp(rg(this.m,r),i);e=this.useNesterov?rp(rg(this.c,rp(i,rg(t,this.m))),a):rp(rg(this.c,t),a),r.assign(t),a.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&aB(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class lo extends le{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=aG.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=aG.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:aP(()=>iS(a).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:aP(()=>iS(a).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:aP(()=>iS(a).variable(!1))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;aP(()=>{let e=rp(rg(i,this.decay),rg(iA(r),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,o=rp(rg(t,this.decay),rg(r,1-this.decay)),l=rm(rg(r,this.learningRate),iO(ss(e,rp(iA(o),this.epsilon)))),u=rp(rg(s,this.momentum),l);i.assign(e),t.assign(o),s.assign(u);let h=ss(a,u);a.assign(h)}else{let e=rp(rg(i,this.decay),rg(iA(r),1-this.decay)),t=rp(rg(s,this.momentum),rm(rg(r,this.learningRate),iO(rp(e,this.epsilon))));i.assign(e),s.assign(t);let n=ss(a,t);a.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&aB(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&aB(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&aB(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}let ll=[lt,ln,la,lr,ls,lo,li],lu=aF({fromPixels_:function(e,t=3){let a,r;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let i=!1,s=!1,o=!1,l=!1,u=!1,h=!1;if(e.data instanceof Uint8Array)i=!0;else if("u">typeof ImageData&&e instanceof ImageData)s=!0;else if("u">typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("u">typeof HTMLImageElement&&e instanceof HTMLImageElement)l=!0;else if(null!=e.getContext)u=!0;else if("u">typeof ImageBitmap&&e instanceof ImageBitmap)h=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=nv(np,aG.backendName))return aG.runKernel(np,{pixels:e},{numChannels:t});let[d,c]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(u)a=e.getContext("2d").getImageData(0,0,d,c).data;else if(s||i)a=e.data;else if(l||o||h){if(null==n){if(typeof document>"u"){if("u">typeof OffscreenCanvas&&"u">typeof OffscreenCanvasRenderingContext2D)n=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else n=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}n.canvas.width=d,n.canvas.height=c,n.drawImage(e,0,0,d,c),a=n.getImageData(0,0,d,c).data}if(4===t)r=new Int32Array(a);else{let e=d*c;r=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)r[n*t+e]=a[4*n+e]}return function(e,t,n){if(g(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let a=az(e,n);if(3!==a.length&&1!==a.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return aK(e,t,a,n)}(r,[c,d,t],"int32")}});function lh(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===b(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,i=r[r.length-1],s=1;for(let e=0;e<r.length-1;++e)s*=r[e];let o=e.shape,l=r.slice();l.pop();let u=1;for(let e=i;e<n;++e)u*=o[e],l.push(o[e]);let h=[...E(e.shape).map(e=>e/u),1].slice(0,i);return[l,s,u,h]}function ld(e,t,n){let a=e.shape.length;f(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),f(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let r=0;r<a;++r)f(t[r]+n[r]<=e.shape[r],()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function lc(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function lp(e,t,n,a){let r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function lf(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function lm(e,t,n,a,r){let i=[...r],s=lf(n,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=0;else{var o;let s=(o=r)<=t?o:o-(n-1),l=a[s];e&1<<s&&(l=0),i[r]=l}return i}function lg(e,t,n,a,r){let i=[...r],s=lf(n,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{var o;let s=(o=r)<=t?o:o-(n-1),l=a[s];e&1<<s&&(l=Number.MAX_SAFE_INTEGER),i[r]=l}for(let e=0;e<i.length;e++){let t=r[e];i[e]<0&&(i[e]+=t),i[e]=d(0,i[e],r[e])}return i}function lb(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function ly(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=d(0,s,l-1)}function lx(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=o>0?d(0,s,l):d(-1,s,l-1)}function lk(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function lv(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function lI(e,t,n){let a,r;let i=e.shape.length;return(a="number"==typeof t?[t,...Array(i-1).fill(0)]:t.length<i?t.concat(Array(i-t.length).fill(0)):t.slice()).forEach(e=>{f(-1!==e,()=>"slice() does not support negative begin indexing.")}),r=(r=null==n?Array(i).fill(-1):"number"==typeof n?[n,...Array(i-1).fill(-1)]:n.length<i?n.concat(Array(i-n.length).fill(-1)):n).map((t,n)=>t>=0?t:(f(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,r]}function lw(e,t,n,a,r,i,s,o,l){let u;if(null==a?(u=Array(t.length)).fill(1):u=a,null!=s&&s&s-1)throw Error("Multiple ellipses in slice is not allowed.");let h=!1,d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)h&&1<<e&o&&d.numAddAxisAfterEllipsis++,1<<e&s&&(h=!0);h||(d.ellipsisMask|=1<<d.dims,d.dims++);let c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(d,c);let p=!0,f=!0,m=!0,g=[],b=[];for(let t=0;t<e.length;++t){if(0===c.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(c.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let r=[c.beginMask&1<<t,c.endMask&1<<t],i=[c.strides[t]>0?0:-1,c.strides[t]>0?a:a-1];if(n&&c.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===c.strides[t];let s=!!(c.beginMask&1<<t&&c.endMask&1<<t);if(c.beginValid&&c.endValid){if(n){let e=c.begin[t]<0?a+c.begin[t]:c.begin[t];if(c.begin[t]=e,c.end[t]=c.begin[t]+1,e<0||e>=a)throw Error(`slice index ${c.begin[t]} of dimension ${t} out of bounds.`)}else c.begin[t]=lS(c.begin[t],0,c.strides[t],a,r,i),c.end[t]=lS(c.end[t],1,c.strides[t],a,r,i);let e=1===c.strides[t]&&0===c.begin[t]&&c.end[t]===a;p=p&&e,f=f&&(0===t&&1===c.strides[t]||e)}else p=p&&1===c.strides[t]&&s,f=f&&(0===t&&1===c.strides[t]||s);let o,l=!1;if(c.beginValid&&c.endValid?(o=c.end[t]-c.begin[t],l=!0):n?(o=1,l=!0):s&&a>=0&&(o=c.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=c.strides[t]<0?0:Math.trunc(o/c.strides[t])+(o%c.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<c.finalShapeGatherIndices.length;++e){let t=c.finalShapeGatherIndices[e];t>=0?b.push(g[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter((e,t)=>-2!==c.finalShapeGatherIndices[t]),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:c.begin,end:c.end,strides:c.strides}}function lS(e,t,n,a,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{let t=e<0?a+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}let lC=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:ld,computeFlatOffset:lv,computeOutShape:lc,getNormalizedAxes:function(e,t,n,a,r,i,s,o,l){let u=e.length,h=Array(u),d=Array(u),c=Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=lm(s,l,u,a,e),d=lg(o,l,u,r,e),c=lp(i,l,u,e)}else for(let t=0;t<u;t++)h[t]=ly(s,a,i,e,t,l),d[t]=lx(o,r,i,e,t,l),c[t]=lb(i,t,l);return{begin:h,end:d,strides:c}},isSliceContinous:lk,maskToAxes:function(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},parseSliceParams:lI,sliceInfo:lw,startForAxis:ly,startIndicesWithElidedDims:lm,stopForAxis:lx,stopIndicesWithElidedDims:lg,stridesForAxis:lb,stridesWithElidedDims:lp},Symbol.toStringTag,{value:"Module"}));class lT{static sgd(e){return new li(e)}static momentum(e,t,n=!1){return new ls(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new lo(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new la(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new lt(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new lr(e,t,n,a,r)}static adagrad(e,t=.1){return new ln(e,t)}}let lN="u">typeof requestAnimationFrame?requestAnimationFrame:"u">typeof setImmediate?setImmediate:e=>e();function lR(){return new Promise(e=>lN(()=>e()))}function lG(e,t){let n=e[0].length;e.forEach((e,t)=>{f(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),f(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((e,r)=>{for(let i=0;i<n;i++)f(i===t||e[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`)})}function lW(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}function lL(e,t,n){let a=[];if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){let i=n[r],s=a[a.length-n.length+r],o=a[s];if(i>=0){if(o>=0){if(o!==i)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else a[s]=i}}return a}function lM(e){let t={FIRST_DIM_SIZE:Im.FIRST_DIM_SIZE,VALUE_ROWIDS:Im.VALUE_ROWIDS,ROW_LENGTHS:Im.ROW_LENGTHS,ROW_SPLITS:Im.ROW_SPLITS,ROW_LIMITS:Im.ROW_LIMITS,ROW_STARTS:Im.ROW_STARTS},n=[];for(let a of e)if(a in t)n.push(t[a]);else break;return n}function lE(e){return 0===e.length?0:e[0]===Im.FIRST_DIM_SIZE?e.length-1:e.length}function lz(e,t){if(null==e||null==t)return;let n=e.length,a=t.length;if(n>=a)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){let n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}function lV(e){return e<=30?e:M(e,Math.floor(Math.sqrt(e)))}function lX(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function l$(e,t,n,a=!0){let r=[];if(a)(r=r.concat(t.slice(0))).push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function lF(e,t,n=!0){let a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{let n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function lZ(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function lK(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function lD(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function lO(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function lA(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function lP(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function lB(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function lH(e,t){return{real:e[2*t],imag:e[2*t+1]}}function lU(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function l_(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),a[r]=Math.sin(i)}return{real:n,imag:a}}function lY(e,t,n){let a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}(Ie=Im||(Im={}))[Ie.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",Ie[Ie.VALUE_ROWIDS=1]="VALUE_ROWIDS",Ie[Ie.ROW_LENGTHS=2]="ROW_LENGTHS",Ie[Ie.ROW_SPLITS=3]="ROW_SPLITS",Ie[Ie.ROW_LIMITS=4]="ROW_LIMITS",Ie[Ie.ROW_STARTS=5]="ROW_STARTS";let lQ=/->/g;function lJ(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(lQ,"").length)/2;if(n<1)throw Error("Equations without an arrow are not supported.");if(n>1)throw Error('Equation must contain exactly one arrow ("->").');let[a,r]=e.split("->");f(-1===a.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let i=a.split(","),s=i.length;if(t!==s)throw Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<r.length;++e){let t=r[e];if(!i.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){let t=a[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<i[e].length;++t)l[e].push(o.indexOf(i[e][t]))}let u=o.length,h=r.length,d=[];for(let e=h;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function lj(e,t){let n=Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return{permutationIndices:n=n.filter(e=>-1!==e),expandDims:a}}function lq(e,t,n){let a=Array(e);for(let e=0;e<n.length;++e){let r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:f(a[t[e][n]]===r[n],()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`)}}function l0(e,t){let n=[],a=0;0===e.length&&e.push(-1),a=e.length+1;for(let e=0;e<a;++e)n.push([]);let r=[];for(let a=0;a<e.length;++a)for(let i of function(e,t){let n=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&n.push(a);return n}(t,e[a]))-1===r.indexOf(i)&&(n[a].push(i),r.push(i));return{path:e,steps:n}}function l1(e){return e.every((e,t)=>e===t)}function l2(e,t,n=0){let a=[];if("number"==typeof t)f(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),a=Array(t).fill(e.shape[n]/t);else{f(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let r=t.indexOf(-1);if(-1!==r){let a=t.reduce((e,t)=>t>0?e+t:e);t[r]=e.shape[n]-a}f(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}function l3(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function l9(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function l5(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function l4(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function l7(e,t){return`size ${e} must be non-negative, not ${t}`}function l8(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function l6(e,t){let n=b(e),a=b(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${a}. inputShape=${e} outputShape= ${t}`}function ue(e,t){let n=b(e),a=b(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${a}. inputShape=${e} outputShape=${t}`}function ut(){return"segment ids must be >= 0"}function un(){return"segment ids are not increasing"}function ua(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ur(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function ui(e,t){let n=!1,a;for(e<=30?(a=e,n=!0):a=M(e,Math.floor(Math.sqrt(e)));!n;)a>t||a===e?n=!0:a=M(e,a+1);return a}function us(e,t,n){let a=[],r=e.length;for(let i=0;i<r;i++)i!==t?a.push(e[i]):a.push(n);return a}function uo(e,t,n,a){let r=t.shape.length,i=e.shape.length;if(0!==a&&(a<-r||a>r))throw Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>i)throw Error(`batchDims (${a}) must be less than rank(x) (
    ${i}).`);if(n<a)throw Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let s=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:s,outputShape:o}}function ul(e){try{return e.map(e=>ar(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function uu(e){return e.map(e=>aa(e))}let uh=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:.254829592,ERF_A2:-.284496736,ERF_A3:1.421413741,ERF_A4:-1.453152027,ERF_A5:1.061405429,ERF_P:.3275911,PARALLELIZE_THRESHOLD:30,get RowPartitionType(){return Im},SELU_SCALE:1.0507009873554805,SELU_SCALEALPHA:1.7580993408473768,applyActivation:oW,assertAndGetBroadcastShape:iv,assertAxesAreInnerMostDims:iz,assertParamsConsistent:lG,assignToTypedArray:lU,axesAreInnerMostDims:iW,calculateShapes:oy,checkEinsumDimSizes:lq,checkPadOnDimRoundingMode:rA,combineLocations:iL,combineRaggedTensorToTensorShapes:lL,complexWithEvenIndex:lP,complexWithOddIndex:lB,computeConv2DInfo:rM,computeConv3DInfo:rE,computeDefaultPad:rz,computeDilation2DInfo:rG,computeOptimalWindowSize:lV,computeOutAndReduceShapes:iM,computeOutShape:lW,computePool2DInfo:rW,computePool3DInfo:rL,convertConv2DDataFormat:rO,decodeEinsumEquation:lJ,eitherStridesOrDilationsAreOne:rK,expandShapeToKeepDim:iE,exponent:lY,exponents:l_,fromStringArrayToUint8:uu,fromUint8ToStringArray:ul,getAxesPermutation:iV,getBroadcastDims:ix,getComplexWithIndex:lH,getEinsumComputePath:l0,getEinsumPermutation:lj,getFusedBiasGradient:oG,getFusedDyActivation:oR,getImageCenter:lX,getInnerMostAxes:i$,getPermuted:lF,getRaggedRank:lE,getReductionAxes:ik,getReshaped:l$,getReshapedPermuted:lZ,getRowPartitionTypesHelper:lM,getSliceBeginCoords:lK,getSliceSize:lD,getSparseFillEmptyRowsIndicesDenseShapeMismatch:l3,getSparseFillEmptyRowsNegativeIndexErrorMessage:l9,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:l5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:l8,getSparseReshapeInputOutputMismatchErrorMessage:ue,getSparseReshapeInputOutputMultipleErrorMessage:l6,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:l4,getSparseReshapeNegativeOutputDimErrorMessage:l7,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ur,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ut,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:un,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:ua,getUndoAxesPermutation:iX,isIdentityPermutation:l1,log:function(...e){B.getBool("IS_TEST")||B.getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:lO,prepareAndValidate:lh,prepareSplitSize:l2,segment_util:Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:uo,computeOutShape:us,segOpComputeOptimalWindowSize:ui},Symbol.toStringTag,{value:"Module"})),shouldFuse:oL,slice_util:lC,splitRealAndImagArrays:lA,stridesOrDilationsArePositive:rD,tupleValuesAreOne:rZ,upcastType:ax,validateDefaultValueShape:lz,validateInput:function(e,t,n){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ob(n,t,e)},validateUpdateShape:ob,warn:ny},Symbol.toStringTag,{value:"Module"}));!function(){for(let e of ll)o6(e)}();let ud={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,oc(rd(n,"float32"),-1))}}},uc=aF({avgPool3dGrad_:function(e,t,n,a,r,i){let s=aX(e,"dy","avgPool3dGrad"),o=aX(t,"input","avgPool3dGrad"),l=s,u=o,h=!1;4===o.rank&&(h=!0,l=rP(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),u=rP(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),f(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),rA("avgPool3dGrad",r,i);let d={dy:l,input:u},c=aG.runKernel(eo,d,{filterSize:n,strides:a,pad:r,dimRoundingMode:i});return h?rP(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),up=aF({avgPoolGrad_:function(e,t,n,a,r){let i=aX(e,"dy","avgPoolGrad"),s=aX(t,"input","avgPoolGrad");f(s.rank===i.rank,()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`);let o=s,l=i,u=!1;3===s.rank&&(u=!0,o=rP(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=rP(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),f(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let h={dy:l,input:o},d=aG.runKernel(ei,h,{filterSize:n,strides:a,pad:r});return u?rP(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),uf={kernelName:eb,inputsToSave:["x"],gradFunc:ud.gradFunc},um=aF({conv3DBackpropFilter_:function(e,t,n,a,r){let i=e;4===e.rank&&(i=rP(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=rP(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),f(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),f(5===s.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`),f(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),f(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),f(s.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:i,dy:s};return aG.runKernel(ew,o,{strides:a,pad:r,filterShape:n})}});function ug(e,t){let n=[];for(let a=e;a<t;++a)n.push(a);return n}function ub(e){let t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}let uy=aF({localResponseNormalizationBackprop_:function(e,t,n,a=5,r=1,i=1,s=.5){return aG.runKernel(ta,{x:e,y:t,dy:n},{depthRadius:a,bias:r,alpha:i,beta:s})}});function ux(e,t,n,a){return t.rank<n.rank&&(t=rP(t,iE(t.shape,a))),e.rank<n.rank&&(e=rP(e,iE(e.shape,a))),{x:()=>rg(e,rd(iI(n,t),e.dtype))}}let uk={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{reductionIndices:a}=n,r=t[0],i=t[1],s=w(a,r.shape),o=ux(e,i,r,s);return{x:()=>o.x()}}},uv=aF({maxPool3dGrad_:function(e,t,n,a,r,i,s){let o=aX(e,"dy","maxPool3dGrad"),l=aX(t,"input","maxPool3dGrad"),u=aX(n,"output","maxPool3dGrad"),h=o,d=l,c=u,p=!1;4===l.rank&&(p=!0,h=rP(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=rP(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),c=rP(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),f(5===h.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),f(5===d.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),f(5===c.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),rA("maxPool3dGrad",i,s);let m={dy:h,input:d,output:c},g=aG.runKernel(tl,m,{filterSize:a,strides:r,pad:i,dimRoundingMode:s});return p?rP(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),uI=aF({maxPoolGrad_:function(e,t,n,a,r,i,s){let o=aX(e,"dy","maxPoolGrad"),l=aX(t,"input","maxPoolGrad"),u=aX(n,"output","maxPoolGrad");return f(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),f(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),f(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),rA("maxPoolGrad",i,s),aG.runKernel(ts,{dy:o,input:l,output:u},{filterSize:a,strides:r,pad:i,dimRoundingMode:s})}}),uw={kernelName:tI,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,i=r.map(e=>e[0]);return{x:()=>rQ(e,i,a.shape)}}},uS={kernelName:tj,gradFunc:(e,t,n)=>{let{blockShape:a,paddings:r}=n;return{x:()=>rj(e,a,r)}}},uC={kernelName:tq,gradFunc:(e,t,n)=>{let{axis:a}=n;return{x:()=>rU(e,a)}}};for(let e of[ud,{kernelName:_,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=iA(rd(n,"float32"));return sa(rm(e,iO(ss(iD(1),t))))}}}},{kernelName:Y,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,iO(ss(iA(rd(n,"float32")),1)))}}},{kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=e,a=ik(n.shape,r);return a.length>0&&(t=iP(t,a)),rP(t,n.shape)},b:()=>{let t=e,n=ik(a.shape,r);return n.length>0&&(t=iP(t,n)),rP(t,a.shape)}}}},{kernelName:Q,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((t,a)=>{n[a]=()=>e.clone()}),n}},{kernelName:J,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iS(n)}}},{kernelName:j,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iS(n)}}},{kernelName:q,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,iO(ss(iD(1),iA(rd(n,"float32")))))}}},{kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,iO(rp(iD(1),iA(rd(n,"float32")))))}}},{kernelName:ea,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=rp(iA(n),iA(a)),i=rg(e,rm(a,t)),s=ik(n.shape,r);return s.length>0&&(i=iP(i,s)),rP(i,n.shape)},b:()=>{let t=rp(iA(n),iA(a)),i=sa(rg(e,rm(n,t))),s=ik(a.shape,r);return s.length>0&&(i=iP(i,s)),rP(i,a.shape)}}}},{kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,rp(iA(rd(n,"float32")),1))}}},{kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,ss(iD(1),iA(rd(n,"float32"))))}}},{kernelName:es,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:i,pad:s,dimRoundingMode:o}=n;return{x:()=>uc(e,a,r,i,s,o)}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:i,pad:s}=n;return{x:()=>up(e,a,r,i,s)}}},{kernelName:el,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[a,r]=t,{transposeA:i,transposeB:s}=n;return i||s?!i&&s?{a:()=>r_(e,r,!1,!1),b:()=>r_(e,a,!0,!1)}:i&&!s?{a:()=>r_(r,e,!1,!0),b:()=>r_(a,e,!1,!1)}:{a:()=>r_(r,e,!0,!0),b:()=>r_(e,a,!0,!0)}:{a:()=>r_(e,r,!1,!0),b:()=>r_(a,e,!0,!1)}}},{kernelName:eu,gradFunc:(e,t,n)=>{let{blockShape:a,crops:r}=n;return{x:()=>sN(e,a,r)}}},{kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{let a=n.inputShape,r=n.shape,i=Array.from(r);for(let e=a.length-1;e>=0;e--)if(a[e]===r[e])i[e]=1;else if(1!==a[e])throw Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);let s=[];for(let e=0;e<i.length;e++)i[e]>1&&s.push(e);return{x:()=>iP(e,s,!0)}}},{kernelName:ep,gradFunc:e=>({x:()=>e.clone()})},{kernelName:ef,gradFunc:e=>({x:()=>iS(e)})},{kernelName:em,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>iw(su(i1(a,r),i8(a,i)),e,iS(e))}}},uf,{kernelName:ey,saveAllInputs:!0,gradFunc:(e,t,n)=>{let a=t.map(e=>e.shape),{axis:r}=n,i=w(r,t[0].shape)[0];return oo(e,a.map(e=>e[i]),i).map(e=>()=>e)}},{kernelName:ev,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{strides:i,pad:s,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ia(e,r,i,s,o,1,l),filter:()=>oN(e,a,r.shape,i,s,o,l)}}},{kernelName:ex,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{dilations:i,strides:s,pad:o,dataFormat:l}=n;return f(rZ(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>ii(a.shape,e,r,s,o,l),filter:()=>oN(a,e,r.shape,s,o,l)}}},{kernelName:eI,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:i}=n;f(rZ(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let[s,o]=t;return{x:()=>il(s.shape,e,o,r,i),filter:()=>um(s,e,o.shape,r,i)}}},{kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(sa(s7(rd(n,"float32"))),e)}}},{kernelName:eC,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(s8(rd(n,"float32")),e)}}},{kernelName:eN,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r,exclusive:i,reverse:s}=n;return{x:()=>{let t=iV([r],a.rank),n=ip(e,r,i,!s);return null!=t&&(n=oC(n,t)),n}}}},{kernelName:eL,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:i,dimRoundingMode:s}=n,o=a??[1,1];f(rZ(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return f(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),f(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),f(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),f(rK(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),rA("depthwiseConv2d",i,s),{x:()=>oz(l.shape,e,u,r,i,o,s),filter:()=>oE(l,e,u.shape,r,i,o,s)}}},{kernelName:eV,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,i={x:a,filter:r,dy:e},s={x:a,filter:r,dy:e};return{x:()=>aG.runKernel(eX,i,n),filter:()=>aG.runKernel(e$,s,n)}}},{kernelName:eF,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=rm(e,rd(a,"float32")),i=ik(n.shape,r);return i.length>0?rP(iP(t,i),n.shape):t},b:()=>{let t=rg(e,rd(n,"float32")),i=ik(a.shape,r);return i.length>0&&(t=rP(iP(t,i),a.shape)),sa(rm(t,rd(iA(a),"float32")))}}}},{kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,a={dy:e,y:n};return{x:()=>aG.runKernel(eK,a)}}},{kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=rg(iU(sa(iA(n))),2/Math.sqrt(Math.PI));return{x:()=>rg(e,a)}}},{kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,n)}}},{kernelName:eO,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>rP(e,n.shape)}}},{kernelName:eA,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,iU(n))}}},{kernelName:eU,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=rm(e,rd(a,"float32")),i=ik(n.shape,r);return i.length>0?rP(iP(t,i),n.shape):t},b:()=>{let t=rg(e,rd(n,"float32")),i=ik(a.shape,r);return i.length>0&&(t=rP(iP(t,i),a.shape)),sa(rm(t,rd(iA(a),"float32")))}}}},{kernelName:eH,gradFunc:e=>({x:()=>iS(e)})},{kernelName:e_,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:a}=n,[r,i,s,o]=t,l=o??iD(1),u=ik(i.shape,r.shape),h=[];if(1===i.rank){for(let e=0;e<r.shape.length-1;++e)h.push(r.shape[e]);h.push(1)}let d=ss(r,i),c=rg(e,l),p=s3(rp(s,iD(a))),f=rg(rg(rg(p,p),p),iD(-.5));return{x:()=>1===i.rank?rP(rg(rg(e,iQ(rP(p,[1,1,1,i.shape[0]]),h)),l),r.shape):rP(rg(rg(e,p),l),r.shape),mean:()=>{let e=rg(rg(p,iD(-1)),c);return 1===i.rank&&(e=iP(e,u)),rP(e,i.shape)},variance:()=>{let e=rg(rg(f,d),c);return 1===i.rank&&(e=iP(e,u)),rP(e,i.shape)},scale:()=>{let t=rg(d,p),n=rg(e,t);return 1===i.rank&&(n=iP(n,u)),rP(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=iP(t,u)),rP(t,i.shape)}}}},{kernelName:eY,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[a,r]=t,{axis:i,batchDims:s}=n,o=w(i,a.shape)[0],l=(e,t,n)=>()=>{let a=e.shape,r=t.size,s=a.slice(0,o),l=s.length,u=a.slice(i,a.length).slice(1),h=u.length,d=ug(0,l),c=ug(l+1,l+1+h),p=rP(n,ub([s,[r],u])),f=rP(t,[r]),m=ub([[l],d,c]),g=oI(oC(p,m),f,e.shape[o]);return oC(g,iX(m))};if(1!==s)return{x:l(a,r,e),indices:()=>r};{let t=a.shape[0],n=a.split(t,0);return{x:()=>od(n.map((t,n)=>l(t,r.slice(n,1),e.slice(n,1))())).reshape(a.shape),indices:()=>r}}}},{kernelName:ej,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>iS(n),b:()=>iS(a)}}},{kernelName:eq,gradFunc:e=>({x:()=>rd(e,"float32")})},{kernelName:e2,gradFunc:e=>({x:()=>iS(e)})},{kernelName:e3,gradFunc:e=>({x:()=>iS(e)})},{kernelName:e9,gradFunc:e=>({x:()=>iS(e)})},{kernelName:e5,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{alpha:r}=n,i=i0(a,0);return{x:()=>iw(i,e,rg(e,r))}}},{kernelName:e6,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,rp(n,1))}}},{kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,rd(n,"float32"))}}},{kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n;return{logits:()=>{let t=iU(a);return ss(e,rg(iP(e,r,!0),t))}}}},{kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{depthRadius:i,bias:s,alpha:o,beta:l}=n;return{x:()=>uy(a,r,e,i,s,o,l)}}},uk,uk,{kernelName:tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>rg(e,rd(i1(n,a),"float32")),b:()=>rg(e,rd(i7(n,a),"float32"))}}},{kernelName:to,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=n;return{x:()=>uv(e,a,r,i,s,o,l)}}},{kernelName:ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:i,strides:s,pad:o}=n;return{x:()=>uI(e,a,r,i,s,o)}}},{kernelName:th,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,i=w(r,a.shape),s=b(iM(a.shape,i)[1]);return{x:()=>{let t=a.shape.slice();return i.forEach(e=>{t[e]=1}),rm(rg(rP(e,t),sy(a.shape,"float32")),s)}}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{axis:a}=n,[r,i]=t,s=w(a,r.shape),o=ux(e,i,r,s);return{x:()=>o.x()}}},{kernelName:td,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>rg(e,rd(i8(n,a),"float32")),b:()=>rg(e,rd(i0(n,a),"float32"))}}},{kernelName:tc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,i=r.map(e=>e[0]);return{x:()=>rQ(e,i,a.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=ik(n.shape,r);return t.length>0?rP(iP(e,t),n.shape):e},b:()=>{let t=rg(e,sa(ij(rm(n,a)))),i=ik(a.shape,r);return i.length>0?rP(iP(t,i),a.shape):t}}}},{kernelName:tf,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=rg(e,rd(a,"float32")),i=ik(n.shape,r);return i.length>0?rP(iP(t,i),n.shape):t},b:()=>{let t=rg(e,rd(n,"float32")),i=ik(a.shape,r);return i.length>0?rP(iP(t,i),a.shape):t}}}},{kernelName:"Neg",gradFunc:e=>({x:()=>sa(e)})},{kernelName:tk,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>sb(n.shape,"float32")}}},{kernelName:tx,gradFunc:e=>({x:()=>iS(e)})},{kernelName:tv,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:a}=n;return ow(e,a).map(e=>()=>e)}},uw,uw,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,a,r]=t,i=iv(n.shape,a.shape);return{a:()=>{let t=rd(a,"float32"),r=rg(e,rg(t,iK(n,ss(t,iD(1))))),s=ik(n.shape,i);return s.length>0&&(r=iP(r,s)),rP(r,n.shape)},b:()=>{let t=rg(e,rg(r,iw(i0(n,0),se(n),iS(n)))),s=ik(a.shape,i);return s.length>0&&(t=iP(t,s)),rP(t,a.shape)}}}},{kernelName:tw,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,a]=t,r=i0(n,0);return{x:()=>iw(r,e,rg(e,a)),alpha:()=>{let t=iw(r,iS(e),rg(e,n)),i=ik(a.shape,e.shape);return i.length>0&&(t=iP(t,i)),rP(t,a.shape)}}}},{kernelName:tS,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,i=[];return i=null==r?a.shape.map((e,t)=>t):"number"==typeof r?[r]:r,{x:()=>(function(e,t,n){let a=e.shape.length,r=a-n.length,i=iV(n,a),s=e;null!=i&&(s=oC(e,i));let o=s.shape.slice(),l=o.splice(a-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let u=function(e,t,n){let a=e.shape.slice();a[n]=1;let r=rP(t,a),i=rg(ic(e,n,!0,!1),ic(e,n,!0,!0));return rg(r,i)}(s.reshape(o),t,r);return u=u.reshape(s.shape),null!=i&&(u=oC(u,iX(i))),u})(a,e,i)}}},{kernelName:tW,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,sa(iA(n)))}}},{kernelName:t$,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=rg(i8(n,6),oc(n));return{x:()=>rg(e,rd(a,"float32"))}}},{kernelName:tL,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,rd(oc(n),"float32"))}}},{kernelName:tM,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rP(e,n.shape)}}},{kernelName:tV,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>aG.runKernel(tX,r,n)}}},{kernelName:tE,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>aG.runKernel(tz,r,n)}}},{kernelName:tF,gradFunc:(e,t,n)=>{let{dims:a}=n,r=w(a,e.shape);return{x:()=>s1(e,r)}}},{kernelName:tZ,gradFunc:e=>({x:()=>iS(e)})},{kernelName:tK,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>sa(rm(e,rg(iK(n,1.5),2)))}}},{kernelName:tP,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>rd(iS(n),"float32"),t:()=>rg(e,rd(n,e.dtype)),e:()=>rg(e,rd(sh(n),e.dtype))}}},{kernelName:tB,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=i0(n,iD(0)),a=iD(1.7580993408473768);return iw(t,rg(e,iD(1.0507009873554805)),rg(rg(e,a),iU(rd(n,"float32"))))}}}},{kernelName:tY,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,rg(n,ss(iD(1),n)))}}},{kernelName:t_,gradFunc:e=>({x:()=>iS(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(ih(rd(n,"float32")),e)}}},{kernelName:tU,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(id(rd(n,"float32")),e)}}},{kernelName:tH,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{begin:r,size:i}=n,s=a.shape,[o,l]=lI(a,r,i),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],s[t]-o[t]-l[t]]);return{x:()=>sT(e,u)}}},{kernelName:t0,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{dim:r}=n,i=rg(e,a);return{logits:()=>ss(i,rg(iP(i,[r],!0),a))}}},{kernelName:tQ,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,rY(n))}}},uS,uS,uC,uC,{kernelName:tJ,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,rg(iO(rd(n,"float32")),2))}}},{kernelName:t4,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iD(2);return{a:()=>rg(e,rg(r,ss(n,a))),b:()=>rg(e,rg(r,ss(a,n)))}}},{kernelName:t7,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(e,rg(rd(n,"float32"),2))}}},{kernelName:nc,gradFunc:e=>({x:()=>iS(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=iv(n.shape,a.shape);return{a:()=>{let t=e,a=ik(n.shape,r);return a.length>0&&(t=iP(t,a)),rP(t,n.shape)},b:()=>{let t=e,n=ik(a.shape,r);return n.length>0&&(t=iP(t,n)),rP(sa(t),a.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,r=a.shape.slice(),{axis:i}=n;w(i,a.shape).forEach(e=>{r[e]=1});let s=rg(rP(e,r),sy(a.shape,"float32"));return{x:()=>s}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rm(e,iA(ih(n)))}}},{kernelName:na,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rg(ss(iD(1),iA(n)),e)}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{reps:r}=n;return{x:()=>{let t=iS(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=rp(t,rQ(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)t=rp(t,rQ(e,[n*a.shape[0],i*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let s=0;s<r[2];++s)t=rp(t,rQ(e,[n*a.shape[0],i*a.shape[1],s*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(4===a.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let s=0;s<r[2];++s)for(let o=0;o<r[3];++o)t=rp(t,rQ(e,[n*a.shape[0],i*a.shape[1],s*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return t}}}},{kernelName:no,gradFunc:(e,t,n)=>{let{perm:a}=n,r=iX(a);return{x:()=>oC(e,r)}}},{kernelName:nu,gradFunc:(e,t,n)=>{let{axis:a}=n;return{value:()=>od(e,a)}}},{kernelName:nh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>(function(e,t){let n=iq(e,sm(t,iS(t))),a=i1(t,iD(0,"int32")),r=n.rank-a.rank;for(let e=0;e<r;++e)a=i_(a,e+1);a=su(a,sy(n.shape,"bool"));let i=iS(n);return iw(a,n,i)})(e,n)}}},{kernelName:nd,gradFunc:e=>({x:()=>iS(e)})}])!function(e){let{kernelName:t}=e;nk.has(t)&&B.getBool("DEBUG")&&ny(`Overriding the gradient for '${t}'`),nk.set(t,e)}(e);ag().prototype.abs=function(){return this.throwIfDisposed(),rb(this)},ag().prototype.acos=function(){return this.throwIfDisposed(),ry(this)},ag().prototype.acosh=function(){return this.throwIfDisposed(),rx(this)},ag().prototype.add=function(e){return this.throwIfDisposed(),rp(this,e)},ag().prototype.all=function(e,t){return this.throwIfDisposed(),rk(this,e,t)},ag().prototype.any=function(e,t){return this.throwIfDisposed(),rv(this,e,t)},ag().prototype.argMax=function(e){return this.throwIfDisposed(),rI(this,e)},ag().prototype.argMin=function(e){return this.throwIfDisposed(),rw(this,e)},ag().prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,()=>"The array must have only 1 element."),rP(this,[])},ag().prototype.asType=function(e){return this.throwIfDisposed(),rd(this,e)},ag().prototype.as1D=function(){return this.throwIfDisposed(),rP(this,[this.size])},ag().prototype.as2D=function(e,t){return this.throwIfDisposed(),rP(this,[e,t])},ag().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),rP(this,[e,t,n])},ag().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),rP(this,[e,t,n,a])},ag().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),rP(this,[e,t,n,a,r])},ag().prototype.asin=function(){return this.throwIfDisposed(),rS(this)},ag().prototype.asinh=function(){return this.throwIfDisposed(),rC(this)},ag().prototype.atan=function(){return this.throwIfDisposed(),rT(this)},ag().prototype.atan2=function(e){return this.throwIfDisposed(),rN(this,e)},ag().prototype.atanh=function(){return this.throwIfDisposed(),rR(this)},ag().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),rB(this,e,t,n,a)},ag().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),rj(this,e,t)},ag().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),rq(this,e,t,n,a,r)},ag().prototype.broadcastTo=function(e){return this.throwIfDisposed(),r9(this,e)},ag().prototype.cast=function(e){return this.throwIfDisposed(),rd(this,e)},ag().prototype.ceil=function(){return this.throwIfDisposed(),r5(this)},ag().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),r7(this,e,t)},ag().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof am&&(e=[e]),rU([this,...e],t)},ag().prototype.conv1d=function(e,t,n,a,r,i){return this.throwIfDisposed(),ir(this,e,t,n,a,r,i)},ag().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),is(this,e,t,n,a,r)},ag().prototype.conv2d=function(e,t,n,a,r,i){return this.throwIfDisposed(),ia(this,e,t,n,a,r,i)},ag().prototype.cos=function(){return this.throwIfDisposed(),ih(this)},ag().prototype.cosh=function(){return this.throwIfDisposed(),id(this)},ag().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ic(this,e,t,n)},ag().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ip(this,e,t,n)},ag().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ig(this,e,t)},ag().prototype.depthwiseConv2d=function(e,t,n,a,r,i){return this.throwIfDisposed(),ib(this,e,t,n,a,r,i)},ag().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),iy(this,e,t,n,a,r)},ag().prototype.divNoNan=function(e){return this.throwIfDisposed(),iC(this,e)},ag().prototype.div=function(e){return this.throwIfDisposed(),rm(this,e)},ag().prototype.dot=function(e){return this.throwIfDisposed(),iT(this,e)},ag().prototype.elu=function(){return this.throwIfDisposed(),iR(this)},ag().prototype.equal=function(e){return this.throwIfDisposed(),iI(this,e)},ag().prototype.erf=function(){return this.throwIfDisposed(),iG(this)},ag().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),iH(this,e,t)},ag().prototype.exp=function(){return this.throwIfDisposed(),iU(this)},ag().prototype.expandDims=function(e){return this.throwIfDisposed(),i_(this,e)},ag().prototype.expm1=function(){return this.throwIfDisposed(),iY(this)},ag().prototype.fft=function(){return this.throwIfDisposed(),or(this)},ag().prototype.flatten=function(){return this.throwIfDisposed(),rP(this,[this.size])},ag().prototype.floor=function(){return this.throwIfDisposed(),ij(this)},ag().prototype.floorDiv=function(e){return this.throwIfDisposed(),rf(this,e)},ag().prototype.gather=function(e,t,n){return this.throwIfDisposed(),iq(this,e,t,n)},ag().prototype.greaterEqual=function(e){return this.throwIfDisposed(),i1(this,e)},ag().prototype.greater=function(e){return this.throwIfDisposed(),i0(this,e)},ag().prototype.ifft=function(){return this.throwIfDisposed(),oi(this)},ag().prototype.irfft=function(){return this.throwIfDisposed(),os(this)},ag().prototype.isFinite=function(){return this.throwIfDisposed(),i3(this)},ag().prototype.isInf=function(){return this.throwIfDisposed(),i9(this)},ag().prototype.isNaN=function(){return this.throwIfDisposed(),i5(this)},ag().prototype.leakyRelu=function(e){return this.throwIfDisposed(),i4(this,e)},ag().prototype.lessEqual=function(e){return this.throwIfDisposed(),i8(this,e)},ag().prototype.less=function(e){return this.throwIfDisposed(),i7(this,e)},ag().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),i6(this,e,t,n,a)},ag().prototype.logSigmoid=function(){return this.throwIfDisposed(),si(this)},ag().prototype.logSoftmax=function(e){return this.throwIfDisposed(),so(this,e)},ag().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),sl(this,e,t)},ag().prototype.log=function(){return this.throwIfDisposed(),se(this)},ag().prototype.log1p=function(){return this.throwIfDisposed(),st(this)},ag().prototype.logicalAnd=function(e){return this.throwIfDisposed(),su(this,e)},ag().prototype.logicalNot=function(){return this.throwIfDisposed(),sh(this)},ag().prototype.logicalOr=function(e){return this.throwIfDisposed(),sd(this,e)},ag().prototype.logicalXor=function(e){return this.throwIfDisposed(),sc(this,e)},ag().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),r_(this,e,t,n)},ag().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),sp(this,e,t,n,a)},ag().prototype.max=function(e,t){return this.throwIfDisposed(),iF(this,e,t)},ag().prototype.maximum=function(e){return this.throwIfDisposed(),sm(this,e)},ag().prototype.mean=function(e,t){return this.throwIfDisposed(),sg(this,e,t)},ag().prototype.min=function(e,t){return this.throwIfDisposed(),iZ(this,e,t)},ag().prototype.minimum=function(e){return this.throwIfDisposed(),sx(this,e)},ag().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),sk(this,e,t)},ag().prototype.mod=function(e){return this.throwIfDisposed(),sv(this,e)},ag().prototype.mul=function(e){return this.throwIfDisposed(),rg(this,e)},ag().prototype.neg=function(){return this.throwIfDisposed(),sa(this)},ag().prototype.norm=function(e,t,n){return this.throwIfDisposed(),iB(this,e,t,n)},ag().prototype.notEqual=function(e){return this.throwIfDisposed(),sw(this,e)},ag().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),sS(this,e,t,n)},ag().prototype.onesLike=function(){return this.throwIfDisposed(),sC(this)},ag().prototype.pad=function(e,t){return this.throwIfDisposed(),sT(this,e,t)},ag().prototype.pool=function(e,t,n,a,r,i){return this.throwIfDisposed(),sR(this,e,t,n,a,r,i)},ag().prototype.pow=function(e){return this.throwIfDisposed(),iK(this,e)},ag().prototype.prelu=function(e){return this.throwIfDisposed(),sG(this,e)},ag().prototype.prod=function(e,t){return this.throwIfDisposed(),sW(this,e,t)},ag().prototype.reciprocal=function(){return this.throwIfDisposed(),sj(this)},ag().prototype.relu=function(){return this.throwIfDisposed(),sq(this)},ag().prototype.relu6=function(){return this.throwIfDisposed(),s0(this)},ag().prototype.reshapeAs=function(e){return this.throwIfDisposed(),rP(this,e.shape)},ag().prototype.reshape=function(e){return this.throwIfDisposed(),rP(this,e)},ag().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),oj(this,e,t,n)},ag().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),oq(this,e,t,n)},ag().prototype.reverse=function(e){return this.throwIfDisposed(),s1(this,e)},ag().prototype.rfft=function(){return this.throwIfDisposed(),ol(this)},ag().prototype.round=function(){return this.throwIfDisposed(),s2(this)},ag().prototype.rsqrt=function(){return this.throwIfDisposed(),s3(this)},ag().prototype.selu=function(){return this.throwIfDisposed(),s9(this)},ag().prototype.separableConv2d=function(e,t,n,a,r,i){return this.throwIfDisposed(),s5(this,e,t,n,a,r,i)},ag().prototype.sigmoid=function(){return this.throwIfDisposed(),rY(this)},ag().prototype.sign=function(){return this.throwIfDisposed(),s4(this)},ag().prototype.sin=function(){return this.throwIfDisposed(),s7(this)},ag().prototype.sinh=function(){return this.throwIfDisposed(),s8(this)},ag().prototype.slice=function(e,t){return this.throwIfDisposed(),rQ(this,e,t)},ag().prototype.softmax=function(e){return this.throwIfDisposed(),oa(this,e)},ag().prototype.softplus=function(){return this.throwIfDisposed(),sr(this)},ag().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),sN(this,e,t)},ag().prototype.split=function(e,t){return this.throwIfDisposed(),oo(this,e,t)},ag().prototype.sqrt=function(){return this.throwIfDisposed(),iO(this)},ag().prototype.square=function(){return this.throwIfDisposed(),iA(this)},ag().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ou(this,e)},ag().prototype.squeeze=function(e){return this.throwIfDisposed(),oh(this,e)},ag().prototype.stack=function(e,t){return this.throwIfDisposed(),od(e instanceof am?[this,e]:[this,...e],t)},ag().prototype.step=function(e){return this.throwIfDisposed(),oc(this,e)},ag().prototype.stridedSlice=function(e,t,n,a,r,i,s,o){return this.throwIfDisposed(),op(this,e,t,n,a,r,i,s,o)},ag().prototype.sub=function(e){return this.throwIfDisposed(),ss(this,e)},ag().prototype.sum=function(e,t){return this.throwIfDisposed(),iP(this,e,t)},ag().prototype.tan=function(){return this.throwIfDisposed(),of(this)},ag().prototype.tanh=function(){return this.throwIfDisposed(),rJ(this)},ag().prototype.tile=function(e){return this.throwIfDisposed(),iQ(this,e)},ag().prototype.toBool=function(){return this.throwIfDisposed(),rd(this,"bool")},ag().prototype.toFloat=function(){return this.throwIfDisposed(),rd(this,"float32")},ag().prototype.toInt=function(){return this.throwIfDisposed(),rd(this,"int32")},ag().prototype.topk=function(e,t){return this.throwIfDisposed(),ox(this,e,t)},ag().prototype.transpose=function(e){return this.throwIfDisposed(),oC(this,e)},ag().prototype.unique=function(e){return this.throwIfDisposed(),ov(this,e)},ag().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),oI(this,e,t)},ag().prototype.unstack=function(e){return this.throwIfDisposed(),ow(this,e)},ag().prototype.where=function(e,t){return this.throwIfDisposed(),iw(e,this,t)},ag().prototype.zerosLike=function(){return this.throwIfDisposed(),iS(this)};class uT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uT.prototype)}}class uN extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uN.prototype)}}class uR extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uR.prototype)}}class uG extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uG.prototype)}}class uW extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uW.prototype)}}class uL{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function uM(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{let n=Array(t);return n.fill(e),n}}function uE(e,t){if(!e)throw new uW(t)}function uz(e,t){let n=0;for(let a of e)a===t&&n++;return n}function uV(e){return 1===e.length?e[0]:e}function uX(e){return Array.isArray(e)?e:[e]}function u$(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function uF(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let uZ={};function uK(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function uD(e,t={},n={},a="object",r=!1){if("string"==typeof e){let r;if(e in n)r=n[e];else if(e in uZ)r=uZ[e];else if(null==(r=t[e]))throw new uR(`Unknown ${a}: ${e}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{let i,s;if(null==e.className||null==e.config)throw new uR(`${a}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let o=e.className;if(o in n?[i,s]=n[o]:o in uZ?[i,s]=uZ.className:o in t&&([i,s]=t[o]),null==i)throw new uR(`Unknown ${a}: ${o}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=s){let t={};for(let e of Object.keys(uZ))t[e]=uZ[e];for(let e of Object.keys(n))t[e]=n[e];e.config.customObjects=t;let a=Object.assign({},uZ);for(let e of Object.keys(n))uZ[e]=n[e];!function e(t){if(!(null==t||"object"!=typeof t)){if(Array.isArray(t))t.forEach(t=>e(t));else for(let n of Object.keys(t)){let a=t[n];null!=a&&"object"==typeof a&&(Array.isArray(a)||"ndarray"!==a.type||"number"!=typeof a.value?e(a):t[n]=a.value)}}}(e.config);let o=s(i,e.config,n,r);return uZ=Object.assign({},a),o}{let t=Object.assign({},uZ);for(let e of Object.keys(n))uZ[e]=n[e];let a=new i(e.config);return uZ=Object.assign({},t),a}}}function uO(e,t){return -1*(e<t?-1:e>t?1:0)}function uA(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function uP(e,t,n){if(null!=n&&0>e.indexOf(n))throw new uR(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function uB(e,t,n=0,a=1/0){return uE(n>=0),uE(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(e=>typeof e===t)}function uH(e,t){Array.isArray(e)?(f(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>uH(e,`element ${n+1} of ${t}`))):f(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(e)}.`)}function uU(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let u_=0,uY={};function uQ(e=""){return e in uY||(uY[e]=0),uY[e]+=1,e+uY[e].toString()}let uJ=["channelsFirst","channelsLast"],uj=["nearest","bilinear"],uq=["valid","same","causal"],u0=["max","avg"],u1=["sum","mul","concat","ave"],u2=new Map;function u3(e){uP(uJ,"DataFormat",e)}function u9(e){uP(uq,"PaddingMode",e)}function u5(e){uP(u0,"PoolMode",e)}let u4=[];function u7(e,t){u4.push(e);try{let e=t();return u4.pop(),e}catch(e){throw u4.pop(),e}}function u8(e){if(!ht(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===u4.length?"":u4.join("/")+"/")+e}function u6(e){if(!ht(e))throw Error("Not a valid tensor name: '"+e+"'");u2.has(e)||u2.set(e,0);let t=u2.get(e);if(u2.set(e,u2.get(e)+1),!(t>0))return e;{let n=`${e}_${t}`;return u2.set(n,1),n}}let he=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ht(e){return!!e.match(he)}function hn(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function ha(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let a=e[n];a<t&&(t=a)}return t}function hr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let a=e[n];a>t&&(t=a)}return t}function hi(e,t){if(t<e)throw new uR(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let a=e;a<t;++a)n.push(a);return n}function hs(){return null==i&&(i=a_().epsilon()),i}function ho(){return"channelsLast"}function hl(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),rP(e,n)}function hu(e,t,n){return aP(()=>{switch(e.rank){case 1:return s6(e,t,n);case 2:return oe(e,[t,0],[n,e.shape[1]]);case 3:return ot(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return on(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return rQ(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return rQ(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new uR(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hh(e,t,n){return aP(()=>{switch(e.rank){case 1:return s6(e,t,n);case 2:return oe(e,[0,t],[e.shape[0],n]);case 3:return ot(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return on(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new uR(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hd(e,t,n,a){return aP(()=>{switch(e.rank){case 1:return s6(e,t,n);case 2:switch(a){case 1:return hu(e,t,n);case 2:return hh(e,t,n);default:throw new uR(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return hu(e,t,n);case 2:return ot(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return hh(e,t,n);default:throw new uR(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return hu(e,t,n);case 2:return on(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return on(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return hh(e,t,n);default:throw new uR(`The axis is not within the rank of the tensor ${a}`)}default:throw new uR(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hc(e,t=-1){let n;return t<0&&(t=0!==(n=e[0].rank)?n:0),t===e[0].rank&&(t=-1),rU(e,t)}function hp(e,t){switch(e.rank){case 1:return r8([e,t]);case 2:return r6([e,t],0);case 3:return ie([e,t],0);case 4:return it([e,t],0);default:throw new uR(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function hf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new uR(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return iQ(e,t)}function hm(e,t=0,n=1,a,r){return s_(e,t,n,a,r)}function hg(e,t,n,a){if(e.rank<2||t.rank<2)throw new uG(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new uG(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return oV({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?hy(e.rank,a,ho()):null,activation:n});{let r=e.shape.slice();e=rP(e,[-1,r.pop()]);let i=t.shape.slice(),s=i.pop(),o=i.pop(),l=[...i,s],u=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=rP(oC(t,u),[o,-1]);let h=[...r,...l];return rP(oV({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?hy(e.rank,a,ho()):null,activation:n}),h)}}function hb(e,t,n){return aP(()=>iq(e,t=Array.isArray(t)?om(t,"int32"):rd(t,"int32"),n))}function hy(e,t,n){let a=t.shape;if(1!==t.rank&&t.rank!==e)throw new uR(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?rP(t,[1,a[0],1,1,1]):rP(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?rP(t,[1,1,1,1,a[0]]):rP(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?rP(t,[1,a[0],1,1]):rP(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?rP(t,[1,1,1,a[0]]):rP(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?rP(t,[1,a[0],1]):rP(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?rP(t,[1,1,a[0]]):rP(t,[1].concat(a))}else if(e<3)return t;throw new uR(`Unsupported input rank by biasAdd: ${t.rank}`)}function hx(e,t,n){return aP(()=>(null==n&&(n=ho()),u3(n),rp(e,hy(e.rank,t,n))))}function hk(e,t,n=!1){return n?e():t()}let hv=["fanIn","fanOut","fanAvg"],hI=["normal","uniform","truncatedNormal"];class hw extends o7{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class hS extends hw{apply(e,t){return sb(e,t)}}hS.className="Zeros",o6(hS);class hC extends hw{apply(e,t){return sy(e,t)}}hC.className="Ones",o6(hC);class hT extends hw{constructor(e){if(super(),"object"!=typeof e)throw new uR(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new uR(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return aP(()=>rg(iD(this.value),sy(e,t)))}getConfig(){return{value:this.value}}}hT.className="Constant",o6(hT);class hN extends hw{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return sY(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hN.className="RandomUniform",o6(hN);class hR extends hw{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new uG(`randomNormal does not support dType ${t}.`);return hm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hR.className="RandomNormal",o6(hR);class hG extends hw{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new uG(`truncatedNormal does not support dType ${t}.`);return ok(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hG.className="TruncatedNormal",o6(hG);class hW extends hw{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return aP(()=>{if(2!==e.length||e[0]!==e[1])throw new uR("Identity matrix initializer can only be used for 2D square matrices.");return rg(this.gain,iJ(e[0]))})}getConfig(){return{gain:this.gain}}}hW.className="Identity",o6(hW);class hL extends hw{constructor(e){if(super(),e.scale<0)throw new uR(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,uP(hv,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,uP(hI,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,a;if(u3(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=hn(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){let t=hn(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{let t=hn(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],r=n[1],i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,a):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),"normal"===this.distribution){let n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new uG(`${this.getClassName()} does not support dType ${t}.`);return ok(e,0,n,t,this.seed)}{let n=Math.sqrt(3*i);return sY(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}hL.className="VarianceScaling",o6(hL);class hM extends hL{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hL.className}}hM.className="GlorotUniform",o6(hM);class hE extends hL{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hL.className}}hE.className="GlorotNormal",o6(hE);class hz extends hL{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hL.className}}hz.className="HeNormal",o6(hz);class hV extends hL{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hL.className}}hV.className="HeUniform",o6(hV);class hX extends hL{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hL.className}}hX.className="LeCunNormal",o6(hX);class h$ extends hL{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hL.className}}h$.className="LeCunUniform",o6(h$);class hF extends hw{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return aP(()=>{if(e.length<2)throw new uG("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);let n=b(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);let i=o3(hm([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),!1),s=i[0];return s=rg(s,i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]).sign()),n<a&&(s=s.transpose()),rg(iD(this.gain),s.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}hF.className="Orthogonal",o6(hF);let hZ={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function hK(e,t={}){return uD(e,o8.getMap().classNameMap,t,"initializer")}function hD(e){if("string"!=typeof e)return e instanceof hw?e:hK(e);{let t=e in hZ?hZ[e]:e;if("GlorotNormal"===t)return new hE;if("GlorotUniform"===t)return new hM;if("HeNormal"===t)return new hz;if("HeUniform"===t)return new hV;if("LeCunNormal"===t)return new hX;if("LeCunUniform"===t)return new h$;{let e={};return e.className=t,e.config={},hK(e)}}}function hO(e){return Array.isArray(e)&&Array.isArray(e[0])}function hA(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function hP(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new uR(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function hB(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new uR(`Expected exactly 1 Shape; got ${e.length}`)}function hH(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}let hU="Variable";class h_{constructor(e,t="float32",n=hU,a=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=u_++,n=n??hU,this.originalName=u8(n),this.name=u6(this.originalName),this.trainable_=a,this.constraint=r,this.val=function(e,t=!0,n,a){return aG.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function hY(e){return e.map(e=>e.read())}function hQ(e){e.forEach(e=>{e[0].write(e[1])})}class hJ{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hj{constructor(e,t,n,a,r,i,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=s,this.id=u_++,null!=i&&(this.originalName=u8(i),this.name=u6(this.originalName)),this.rank=t.length}}let hq=0;class h0{constructor(e,t){for(let n of(this.callArgs=t,this.id=hq++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes,e.inboundLayers))null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let h1=0;class h2 extends o7{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=h1++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=u$(e)+"_"+uQ(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new uN(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new uR(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return uV(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return uV(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new uT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new uT(`Layer ${this.name} is not connected, no input to return.`);return uV(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new uT(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new uT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return uV(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=uX(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let n=uX(this.inputSpec);if(t.length!==n.length)throw new uR(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let a=t[e],r=n[e];if(null==r)continue;let i=a.rank;if(null!=r.ndim&&i!==r.ndim)throw new uR(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new uR(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new uR(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&a.dtype!==r.dtype)throw new uR(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){let t=a.shape;for(let n in r.axes){let a=Number(n),i=r.axes[n],s=a>=0?t[a]:t[t.length+a];if(null!=i&&-1===[i,null].indexOf(s))throw new uR(`Input ${e} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){let n=r.shape[t],i=a.shape[t];if(null!=n&&null!=i&&n!==i)throw new uR(`Input ${e} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=uX(e),a=function(e){let t=!0;for(let n of uX(e))if(!(n instanceof hj)){t=!1;break}return t}(e),r=function(e){let t=!0;for(let n of uX(e))if(n instanceof hj){t=!1;break}return t}(e);if(a===r)throw new uR("Arguments to apply() must be all SymbolicTensors or all Tensors");return u7(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of uX(e))t.push(n.shape);this.build(uV(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);let r=uX(a),i=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(a=uV(i),null!=this.activityRegularizer)throw new uG("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{let n;let a=function(e){e=uX(e);let t=[];for(let n of e)t.push(n.shape);return uV(t)}(e),r=this.computeOutputShape(a),i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),n=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,a)=>new hj(i,n,this,uX(e),t,this.name,a)):new hj(i,r,this,uX(e),t,this.name),this.addInboundNode(e,n,null,null,a,r,t),this._refCount++,null!=this.activityRegularizer)throw new uG("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape){if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new uT(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new uT(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new uN(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return hH(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hY(e?this.trainableWeights:this.weights)}setWeights(e){aP(()=>{let t=this.weights;if(t.length!==e.length)throw new uR(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],a=hY(t);for(let r=0;r<a.length;++r){let i=a[r],s=t[r],o=e[r];if(!y(i.shape,o.shape))throw new uR(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([s,o])}hQ(n)})}addWeight(e,t,n,a,r,i,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new uR(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():hD("zeros"));let l=a.apply(t,n),u=new h_(l,n,e,i,s);return l.dispose(),null!=r&&this.addLoss(()=>r.apply(u.read())),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=uX(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let a=this.computeMask(e,n),r=uX(t),i=uX(a);if(r.length!==i.length)throw Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<r.length;e++)r[e].kerasMask=i[e]}addInboundNode(e,t,n,a,r,i,s=null){let o=uX(e);t=uX(t),n=uX(n),a=uX(a),r=hA(r),i=hA(i);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new h0({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class h3 extends h2{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:uQ("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new uR("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new uR("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new uR("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let a=new hj(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new h0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new uR(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}h3.className="InputLayer",o6(h3);class h9{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof h9)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null==this.id2Value[e.id])this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return rd(t,e.dtype)}catch{throw new uR(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n);else throw new uR(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hj){if(null==this.id2Value[e.id])throw new uR(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new uR(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hj){if(null==this.id2Value[e.id])throw new uR(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new uR(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&aB(this.id2Mask)}}let h5=new uL,h4=new uL;function h7(e,t,n,a){let r=null!=n&&n.training,i=Array.isArray(e),s=i?e:[e],o=s.map(e=>e.name),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);let h=o.join(",")+"|"+t.names().sort().join(","),d=h5.get(h),c;if(null==d){let e=function(e,t){f(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(1===e.length){let r=h8(e[0],t);n=r.sorted,a=r.recipientMap}else{let r=new Set;for(let i of e){let{sorted:e,recipientMap:s}=h8(i,t);for(let t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(let e in s)null==a[e]&&(a[e]=new Set),s[e].forEach(t=>a[e].add(t))}}return{sorted:n,recipientCounts:function(e){let t={};for(let n in e)t[n]=e[n].size;return t}(a)}}(s,t);d=e.sorted,c=e.recipientCounts,h5.put(h,d),h4.put(h,c)}c={},r||Object.assign(c,h4.get(h));let p=new h9(t);for(let e=0;e<d.length;++e){if(null!=a){let e=aA().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}let i=d[e],s=i.sourceLayer;if(s instanceof h3)continue;let u=[],h=[],f=[],m=!1;for(let e of i.inputs){let n=p.getValue(e),a=p.getMask(e);u.push(n),h.push(a),null!=a&&(m=!0),!r&&(c[e.name]--,0!==c[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=h[0]);let g=uX(s.apply(u,n)),b=null;s.supportsMasking&&(b=s.computeMask(u,h));let y=function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}(i),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(b)?b[0]:b);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||aB(f)}return p.disposeMasks(),i?l:l[0]}function h8(e,t){let n=new Set,a=[],r={};for(let e of t.names())n.add(e);let i=[],s=[];for(i.push(e);i.length>0;){let e=i[i.length-1];if(n.has(e.name)){i.pop();continue}let t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),a.push(e),n.add(e.name),t&&s.pop();else for(let t of(s.push(i.length-1),e.inputs))null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||i.push(t)}return{sorted:a,recipientMap:r}}function h6(e,t){return aP(()=>iO(iP(rg(e,e),t,!0)))}B.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=h5&&h5.setMaxEntries(e),null!=h4&&h4.setMaxEntries(e)});class de extends o7{getConfig(){return{}}}class dt extends de{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aP(()=>{let t=h6(e,this.axis);return rg(e,rm(r7(t,0,this.maxValue),rp(hs(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}dt.className="MaxNorm",o6(dt);class dn extends de{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aP(()=>rm(e,rp(hs(),h6(e,this.axis))))}getConfig(){return{axis:this.axis}}}dn.className="UnitNorm",o6(dn);class da extends de{apply(e){return sq(e)}}da.className="NonNeg",o6(da);class dr extends de{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aP(()=>{let t=h6(e,this.axis),n=rp(rg(this.rate,r7(t,this.minValue,this.maxValue)),rg(1-this.rate,t));return rg(e,rm(n,rp(hs(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}dr.className="MinMaxNorm",o6(dr);let di={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ds(e,t={}){return uD(e,o8.getMap().classNameMap,t,"constraint")}function dl(e){return null==e?null:"string"==typeof e?ds({className:e in di?di[e]:e,config:{}}):e instanceof de?e:ds(e)}async function du(e){if(null==e)return;let t=[],n=[],a=[];for(let r in e){let i=e[r];"number"!=typeof i&&(t.push(i.data()),n.push(r),a.push(i))}if(t.length>0){let r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];aB(a)}}function dh(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}(It=Ig||(Ig={}))[It.SILENT=0]="SILENT",It[It.VERBOSE=1]="VERBOSE";class dd{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class dc{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochBegin(e,t)}async onEpochEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochEnd(e,t)}async onBatchBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchBegin(e,t)}async onBatchEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchEnd(e,t)}async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}}class dp extends dd{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;for(let e in this.seen+=n,t){let a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let r=aP(()=>rp(this.totals[e],rg(a,n)));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:aP(()=>{let n=rg(rm(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),aH(t[e])}))}}class df extends dd{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let n in null==t&&(t={}),this.epoch.push(e),t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){let s=r[i];e.push(s.data()),t.push(a),n.push(i)}}let a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class dm extends dd{constructor(e,t){var n,a,r;let i,s;if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||lR,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");G(this.yieldEvery)&&(this.maybeWait=(n=this.maybeWait.bind(this),a=this.yieldEvery,i=null!=(r=this.nowFunc)?r():an(),(...e)=>{let t=null!=r?r():an();return t-i<a||(i=t,s=n(...e)),s})),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let a=[];null!=this.yield&&(await du(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await du(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await du(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await du(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await du(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):G(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await du(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await du(e),await this.trainEnd(e))}}function dg(e,t){return null==e&&(e={}),e instanceof dd?[e]:Array.isArray(e)&&e[0]instanceof dd?e:uX(e).map(e=>new dm(e,t))}class db{constructor(){}static registerCallbackConstructor(e,t){f(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),db.checkForDuplicate(t),null==db.constructors[e]&&(db.constructors[e]=[]),db.constructors[e].push(t)}static checkForDuplicate(e){for(let t in db.constructors)db.constructors[+t].forEach(t=>{if(t===e)throw new uR("Duplicate callback constructor.")})}static clear(){db.constructors={}}static createCallbacks(e){let t=[];for(let n in db.constructors){let a=+n;e>=a&&t.push(...db.constructors[a])}return t.map(e=>new e)}}function dy(e,t,n,a,r,i,s,o,l){let u=new df,h=[new dp,...db.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let d=new dc(h);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:i,batchSize:s,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function dx(e,t={},n=!1){return uD(e,o8.getMap().classNameMap,t,"layer",n)}function dk(e,t){return aP(()=>{var n;"float32"!==e.dtype&&(e=rd(e,"float32"));let a=iP(rg(n=e,n),t,!0),r=r4(a.shape,hs()),i=iO(sm(a,r));return rm(e,i)})}function dv(e,t){return aP(()=>{var n;return sg(rg(n=ss(t,e),n),-1)})}function dI(e,t){return aP(()=>sg(rb(ss(t,e)),-1))}function dw(e,t){return aP(()=>{let n=ss(e,t),a=r7(rb(e),hs(),Number.MAX_VALUE);return rg(100,sg(rb(rm(n,a)),-1))})}function dS(e,t,n=!1){return aP(()=>{if(n)t=oa(t);else{let e=iP(t,t.shape.length-1,!0);t=rm(t,e)}return t=r7(t,hs(),1-hs()),sa(iP(rg(rd(e,"float32"),se(t)),t.shape.length-1))})}function dC(e,t,n=!1){return aP(()=>{let a=rd(ij(function(e){let t=[hn(e.shape)];return rP(e,t)}(e)),"int32"),r=(t=r7(t,hs(),1-hs())).shape;return dS(rP(sS(a,r[r.length-1]),r),t,n)})}function dT(e,t){return aP(()=>{let n;return sg(function(e,t){if(!y(e.shape,t.shape))throw new uR(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return aP(()=>{let n=sq(t),a=sa(rb(t));return rp(ss(n,rg(t,e)),st(iU(a)))})}(e,n=se(rm(n=r7(t,hs(),1-hs()),ss(1,n)))),-1)})}function dN(e,t){return aP(()=>sa(iP(rg(dk(e,-1),dk(t,-1)),-1)))}db.constructors={};let dR={meanSquaredError:dv,meanAbsoluteError:dI,meanAbsolutePercentageError:dw,meanSquaredLogarithmicError:function(e,t){return aP(()=>{var n;return sg(rg(n=ss(se(rp(1,r7(t,hs(),Number.MAX_VALUE))),se(rp(1,r7(e,hs(),Number.MAX_VALUE)))),n),-1)})},squaredHinge:function(e,t){return aP(()=>{let n=sm(0,ss(1,rg(e,t)));return sg(rg(n,n),-1)})},hinge:function(e,t){return aP(()=>sg(sm(0,ss(1,rg(e,t))),-1))},categoricalHinge:function(e,t){return aP(()=>{let n=iP(rg(e,t),-1),a=iF(rg(ss(1,e),t),-1);return sm(0,rp(1,ss(a,n)))})},logcosh:function(e,t){return aP(()=>{let n=Math.log(2),a=ss(t,e);return sg(ss(rp(a,sr(rg(-2,a))),n),-1)})},categoricalCrossentropy:dS,sparseCategoricalCrossentropy:dC,binaryCrossentropy:dT,kullbackLeiblerDivergence:function(e,t){return aP(()=>{let n=r7(e,hs(),1);return iP(rg(e,se(rm(n,r7(t,hs(),1)))),-1)})},poisson:function(e,t){return aP(()=>{let n=se(rp(hs(),t));return sg(ss(t,rg(e,n)),-1)})},cosineProximity:dN};function dG(e){if("string"!=typeof e)return e;{if(e in dR)return dR[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new uR(t)}}function dW(e,t){return aP(()=>{let n=rg(.5,sC(t)),a=rd(i0(t,n),e.dtype);return sg(iI(e,a),-1)})}function dL(e,t){return aP(()=>rd(iI(rI(e,-1),rI(t,-1)),"float32"))}function dM(e,t){return dT(e,t)}function dE(e,t){return e.rank===t.rank&&(e=oh(e,[e.rank-1])),(t=rI(t,-1)).dtype!==e.dtype&&(t=rd(t,e.dtype)),rd(iI(e,t),"float32")}let dz={binaryAccuracy:dW,categoricalAccuracy:dL,precision:function(e,t){return aP(()=>{let n=aP(()=>rd(iP(su(iI(e,1),iI(t,1))),"float32")),a=rp(n,aP(()=>rd(iP(su(iI(e,0),iI(t,1))),"float32")));return rd(iw(i0(a,0),rm(n,a),0),"float32")})},categoricalCrossentropy:dS,sparseCategoricalCrossentropy:dC,mse:dv,MSE:dv,mae:dI,MAE:dI,mape:dw,MAPE:dw,cosine:dN};function dV(e){if(uE(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(dR))if(dR[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(dz))if(dz[n]===e){t=n;break}return void 0!==t?t:e.name}}function dX(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){for(let n of Object.keys(t))if("string"!=typeof n||!e(t[n]))return!1;return!0}if(!Array.isArray(t))return!1;for(let n of t)if(!e(n))return!1;return!0}{let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function d$(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function dF(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}let dZ="4.16.0",dK=e=>{let t=Object.keys(e);if(0===t.length)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};class dD extends h2{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=uQ(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],uA(this.inputs).length!==this.inputs.length)throw new uR(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);for(let e of(uA(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[],this.outputs)){let t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;uE(0===n,"input layer has >1 nodes"),uE(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof h3))throw TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let t={},n={},a={},r={},i={},s=[],o=(e,t,n,a,r,l)=>{(null==a||null==r||null==l)&&(a=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);let u=a.inboundNodes[r];if(-1!==n.indexOf(u))throw new uN(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(dD.nodeKey(a,r)),a.id in i||(i[a.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let a=u.inputTensors[e];o(a,t,n,u.inboundLayers[e],u.nodeIndices[e],u.tensorIndices[e])}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);s.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);for(let e of s.slice().reverse()){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];i=Math.max(i,null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id]),a[e.outboundLayer.id]=i,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let a=0;a<e.inboundLayers.length;a++){let r=e.inboundLayers[a],s=e.nodeIndices[a],o=r.inboundNodes[s],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,l),n[o.id]=o}}let h={};for(let e in t){let a=t[e];a in h||(h[a]=[]),h[a].push(n[e])}let d={};for(let e in a){let t=a[e];t in d||(d[t]=[]),d[t].push(r[e])}let c=Object.keys(d).map(e=>parseInt(e,10)).sort(uO);for(let e of(this.layers=[],c)){let t=d[e];for(let e of(t.sort((e,t)=>{let n=i[e.id],a=i[t.id];return n<a?-1:n>a?1:0}),t))e instanceof dD&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(h).map(e=>parseInt(e,10)).sort(uO);let p=this.inputs.slice(),f=[];for(let e of c)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===p.indexOf(n))throw new uN(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${f}`);for(let e of t.outputTensors)p.push(e);f.push(e.name)}}this.nodesByDepth=h;let m=this.layers.map(e=>e.name);for(let e of m){let t=m.filter(t=>t===e).length;if(1!==t)throw new uN(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new h0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new uR("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},a=0,r=dK(e);for(let t of(r&&this.parseWeights(e),this.layers))for(let[e,i]of t.weights.entries()){let t=r?`${i.name.split("/").slice(0,-1).join("/")+"/"}${e}`:i.originalName;if(null!=n[t])throw new uR(`Duplicate weight name: ${t}`);n[t]=i,a++}let i=[];for(let a in e){let r=a;if(null==n[a]){let e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])i.push([n[r],e[a]]);else if(t)throw new uR(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new uR(`${e.length} of ${a} weights are not set: ${e}`)}hQ(i)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!a.includes(e)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${dZ}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=function e(t,n){if(null==t)return null;if("string"==typeof t)return u$(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let a=[],r=t.length;for(let i=0;i<r;++i){let r=t[i];dF(n,i,r)?a.push(r):a.push(e(r,n))}return a}{let n={};for(let a of Object.keys(t)){let r=t[a],i=u$(a);("name"===a||"className"===a)&&"string"==typeof r?n[i]=r:n[i]=e(r,a)}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return aP(()=>{e=uX(e);let n=new h9;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return h7(this.outputs,n,t)})}computeMask(e,t){return aP(()=>{let n;return e=uX(e),n=null==t?uM(null,e.length):uX(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=hA(e);if(t.length!==this.inputLayers.length)throw new uR(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let a=this.inputLayers[e],r=t[e];n[a.name+"_0_0"]=r}let a=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(uO);if(a.length>1)for(let e of a)for(let t of this.nodesByDepth[e]){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let a=[];for(let e=0;e<t.inboundLayers.length;e++){let r=t.inboundLayers[e],i=t.nodeIndices[e],s=t.tensorIndices[e],o=n[`${r.name}_${i}_${s}`];a.push(o)}let r=hA(e.computeOutputShape(uV(a))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${i}_${t}`]=r[t]}let r=[],i=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${a}`;i.push(r)}for(let e=0;e<i.length;e++){let t=i[e];uE(t in n),r.push(n[t])}return uV(r)}runInternalGraph(e,t){null==t&&(t=uM(null,e.length));let n={};for(let a=0;a<this.inputs.length;++a){let r=this.inputs[a],i=e[a],s=t[a];n[r.id]=[i,s]}for(let e of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(uO))for(let t of this.nodesByDepth[e]){let e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,i=[];for(let e of a)e.id in n&&i.push(n[e.id]);if(i.length===a.length){let a={},s,o,l,u;if(null!=t.callArgs&&(a=t.callArgs),1===i.length){let[t,n]=i[0];null==a.mask&&(a.mask=n),l=uX(e.call(t,a)),u=uX(e.computeMask(t,n)),s=[t],o=[n]}else s=i.map(e=>e[0]),o=i.map(e=>e[1]),null==a.mask&&(a.mask=o),l=uX(e.call(s,a)),u=uX(e.computeMask(s,o));if(e.activityRegularizer)throw new uG("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){let t=r[e],a=l[e],i=u[e];n[t.id]=[a,i]}}}let a=[],r=[],i=[];for(let e of this.outputs){uE(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,s]=n[e.id];i.push(t.shape),a.push(t),r.push(s)}return[a,r,i]}buildNodeConversionMap(e){let t;let n={};for(let e of this.layers){t=e instanceof dD?1:0;for(let a=0;a<e.inboundNodes.length;a++){let r=dD.nodeKey(e,a);this.containerNodes.has(r)&&(n[r]=t,t+=1)}}return n}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new uR("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new uR(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new uR(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return aP(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let a=dD.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let a=e.getClassName(),r=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){let a=e.inboundNodes[n],r=dD.nodeKey(e,n),s={};if(this.containerNodes.has(r)){if(a.callArgs)try{JSON.stringify(a.callArgs),s=a.callArgs}catch{console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(a.inboundLayers.length>0){let e=[];for(let n=0;n<a.inboundLayers.length;n++){let r=a.inboundLayers[n],i=a.nodeIndices[n],o=a.tensorIndices[n],l=t[dD.nodeKey(r,i)];null==l&&(l=0),e.push([r.name,l,o,s])}i.push(e)}}}let s={};s.name=e.name,s.className=a,s.config=r,s.inboundNodes=i,n.push(s)}e.layers=n;let a=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],i=dD.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);let o=this.inputLayersTensorIndices[e];a.push([n.name,s,o])}e.inputLayers=a;let r=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],i=dD.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);let o=this.outputLayersTensorIndices[e];r.push([n.name,s,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){let r={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}let o=t.name,l=t.layers;for(let e of l)!function(e){let n=e.name,i=dx(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(a),r[n]=i,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new uR(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)})}(e);for(;!function(e){if(null==e)throw new uR(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}(i);)for(let e of l){let t=r[e.name];if(t.name in i){let e=i[t.name];for(let n of(delete i[t.name],e))!function(e,t){let n;let a=[];for(let i of t){let o=i[0],l=i[1],u=i[2];if(n=null==i[3]?{}:i[3],!(o in r)){s(e,t);return}let h=r[o];if(h.inboundNodes.length<=l){s(e,t);return}let d=h.inboundNodes[l];a.push(d.outputTensors[u])}a.length>0&&e.apply(uV(a),n)}(t,n)}}let u=[],h=[];for(let e of t.inputLayers){let t=e[0],n=e[1],a=e[2];uE(t in r);let i=r[t].inboundNodes[n].outputTensors;u.push(i[a])}for(let e of t.outputLayers){let t=e[0],n=e[1],a=e[2];uE(t in r);let i=r[t].inboundNodes[n].outputTensors;h.push(i[a])}return new e({inputs:u,outputs:h,name:o})}get stateful(){if(this._stateful)throw new uR("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){aP(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function dO(e,t){return function(e,t,n){let a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function dA(e,t,n,a){if(null!=t||null!=a)throw Error("Support sampleWeight is not implemented yet");if(null==n)return null;{let t=aP(()=>{if(1===e.shape.length)return rc(e);if(2===e.shape.length){if(e.shape[1]>1)return rI(e,1);if(1===e.shape[1])return rP(e,[e.shape[0]]);throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await t.data());aB(t);let r=[];return a.forEach(e=>{if(null==n[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])}),om(r,"float32")}}function dP(e,t){let n,a;n=t.xs,a=t.ys,f(null!=n&&null!=a,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let r=dB("input",e.inputNames,n),i=dB("output",e.outputNames,a),s=r[0].shape[0];f(r.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),f(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<r.length;t++)f(r[t].shape[0]===s,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${r[t].shape[0]}; expected  ${s} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)f(i[t].shape[0]===s,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${s} based on input ${e.inputNames[0]}.`);return{xs:r,ys:i}}function dB(e,t,n){if(n instanceof am)return[n];if(Array.isArray(n))return f(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let a=[];for(let r of t){if(null==n[r])throw new uR(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}async function dH(e,t,n){let a=null!=n.batchesPerEpoch;if(f(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),f(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),f(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),f(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),f(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r,i,s,o;let l=null!=n.validationData;if(l){if(dU(n.validationData))f(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let e=function(e){if(3===e.length)throw new uG("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);r=e.xs,i=e.ys}}let u=e.makeTrainFunction(),h=e.getDedupedMetricsNames();s=l?h.slice().concat(h.map(e=>"val_"+e)):h.slice();let d=dg(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:p,history:m}=dy(d,c,n.epochs,null,null,(o=null,null!=n.batchesPerEpoch?o=n.batchesPerEpoch:Number.isFinite(t.size)&&(o=t.size),o),null,l,s);p.setModel(e),e.history=m,await p.onTrainBegin(),e.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,b=await t.iterator();for(;g<n.epochs;){let s={};await p.onEpochBegin(g);let o=0,d=0;for(a||(b=await t.iterator());!a||o<n.batchesPerEpoch;){let t=await b.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${o} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:a,ys:r}=dP(e,t.value),i={};i.batch=d,i.size=a[0].shape[0],await p.onBatchBegin(d,i);let s=[];if(null!=n.classWeight){let t=dO(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await dA(r[e],null,t[e]))}let l=a.concat(r).concat(s),c=u(l);aB(l);for(let e=0;e<h.length;++e){let t=h[e],n=c[e];i[t]=n,aH(n)}await p.onBatchEnd(d,i),dh(i),d++,o++}if(a?o>=n.batchesPerEpoch:t.done){if(l){let t;t=dU(n.validationData)?uX(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):uX(e.evaluate(r,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)s[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(g,s),g++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function dU(e){return"function"==typeof e.iterator}async function d_(e,t,n){let a=null!=(n=n||{}).batches,r=e.testFunction,i=[];if(n.verbose>0)throw new uG("Verbose mode is not implemented yet.");f(!a||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let s="function"==typeof t.next?t:await t.iterator(),o=0,l=0;for(;!a||l<n.batches;){let t=await s.next();if(i=aP(()=>{if(t.value){let{xs:n,ys:a}=dP(e,t.value),s=n.concat(a),u=aP(()=>r(s));if(aB(s),0===l)for(let e=0;e<u.length;++e)i.push(iD(0));let h=s[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=i[e];i[e]=aP(()=>rp(i[e],rg(h,t))),l>0&&aB(n)}aB(u),o+=h,++l}return i}),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){let t=i[e];i[e]=rm(i[e],o),aB(t)}return uV(i)}function dY(e){f(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function dQ(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>hu(e,t,n-t)):hu(e,t,n-t)}function dJ(e,t){return aP(()=>null==e?null:Array.isArray(e)?e.map(e=>dJ(e,t)):hb(e,"int32"===t.dtype?t:rd(t,"int32")))}function dj(e,t){let n=[],a=0,r=null;for(;a<e;)(r=a+t)>=e&&(r=e),n.push([a,r]),a=r;return n}function dq(e){let t=[];e instanceof am&&(e=[e]);for(let n=0;n<e.length;++n){let a=e[n];if(1===a.rank)t.push(hl(a,1));else{if(0===a.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function d0(e,t){if(null==e)return;let n=[];if(t instanceof am)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(let e in t){let a=t[e];n.push(a.id)}let a=[];if(e instanceof am)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&a.push(e)});else if(null!=e)for(let t in e){let r=e[t];-1===n.indexOf(r.id)&&a.push(r)}a.forEach(e=>{e.isDisposed||e.dispose()})}function d1(e){return Array.isArray(e)}function d2(e){return!(e instanceof am)&&!d1(e)}function d3(e,t,n,a=!0,r=""){let i;if(null==t||0===t.length){if(null!=e){let t=!1;if(d1(e)&&e.length>0)t=!0;else if(d2(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new uR(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);if(d2(e))for(let n of(i=[],t)){if(null==e[n])throw new uR(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}else if(d1(e)){if(e.length!==t.length)throw new uR(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new uR(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=dq(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let s=i[e];if(s.shape.length!==n[e].length)throw new uR(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;let i=s.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new uR(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function d9(e,t,n,a=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new uR(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new uR(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let s=i[e];if(s.shape.length!==n[e].length)throw new uR(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!a)continue;let o=s.shape[i],l=n[e][i];if(null!=l&&l!==o)throw new uR(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class d5 extends dD{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new uR("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){let r;let i=function(e){let t=!0,n=[],a=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let r of n.inboundNodes)if(-1!==a.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];if(i?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!i)for(let t in s.push("Receives inputs"),r=[],e.nodesByDepth)r.push(...e.nodesByDepth[t]);a("_".repeat(t)),d$(s,n,a),a("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)i?function(e,t,n){let a,r;try{r=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=e.name,s=e.getClassName();d$([`${i} (${s})`,r,a,e.countParams().toString()],t,n)}(o[e],n,a):function(e,t,n,a){let r,i;try{i=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,a=t.nodeIndices[e],r=t.tensorIndices[e];s.push(`${n}[${a}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===s.length?"":s[0];d$([`${o} (${l})`,i,r,e.countParams().toString(),u],t,a);for(let e=1;e<s.length;++e)d$(["","","","",s[e]],t,a)}(o[e],n,r,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=null!=e.collectedTrainableWeights?hH(e.collectedTrainableWeights):hH(e.trainableWeights),u=hH(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>lT.adagrad(.01),Adadelta:()=>lT.adadelta(1,.95,hs()),Adam:()=>lT.adam(.001,.9,.999,hs()),Adamax:()=>lT.adamax(.002,.9,.999,hs(),0),RMSProp:()=>lT.rmsprop(.001,.9,0,hs()),SGD:()=>lT.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new uR(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof le))throw new uR("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss){if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new uR(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>dG(e))}else{let n=dG(e.loss);this.outputs.forEach(e=>{t.push(n)})}}else{for(let t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new uR(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(dG(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],u7("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let a=function(e,t){let n;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);if("string"==typeof e||"function"==typeof e)n=[e];else if(Array.isArray(e)||"object"==typeof e)n=e;else throw TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(e=>n);{let e=[];for(let a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};u7("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,i;for(let s of t){let t;if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){let t;let r=this.internalOutputShapes[e];1===r[r.length-1]||this.lossFunctions[e]===dT?-1!==["accuracy","acc"].indexOf(s)?a=dW:-1!==["crossentropy","ce"].indexOf(s)&&(a=dM):this.lossFunctions[e]===dC?-1!==["accuracy","acc"].indexOf(s)?a=dE:-1!==["crossentropy","ce"].indexOf(s)&&(a=dC):-1!==["accuracy","acc"].indexOf(s)?a=dL:-1!==["crossentropy","ce"].indexOf(s)&&(a=dS),-1!==["accuracy","acc"].indexOf(s)?t="acc":-1!==["crossentropy","ce"].indexOf(s)&&(t="ce"),i=a,n=""+t}else i=function(e){if("string"==typeof e&&e in dz)return dz[e];if("string"!=typeof e&&null!=e)return e;throw new uR(`Unknown metric ${e}`)}(s),n=""+dV(s);u7(n,()=>{t=i}),r(e,n,t)}})(a[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let a=null==n.batchSize?32:n.batchSize;dY(a);let r=this.standardizeUserDataXY(e,t,!0,a);try{let e=r[0].concat(r[1]);this.makeTestFunction();let t=this.testFunction,i=this.testLoop(t,e,a,n.verbose,n.steps);return uV(i)}finally{d0(r[0],e),d0(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),d_(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(null!=n){if(r=null,null!=t)throw new uR(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(null!=e)r=Array.isArray(e)?e[0].shape[0]:e.shape[0];else throw new uR(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new uR("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),i=new h9;if(e instanceof am&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new uR(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new uR(`No value is provided for the model's input ${t.name}`);i.add(t,n)}let s=h7(r,i);return n?s:s[0]}retrieveSymbolicTensors(e){let t=uM(null,e.length),n=e.length;for(let a of this.layers){let r=Array.isArray(a.output)?a.output:[a.output],i=r.map(e=>e.name);for(let a=0;a<e.length;++a){let s=i.indexOf(e[a]);if(-1!==s&&(t[a]=r[s],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach((t,a)=>{null==t&&n.push(e[a])}),new uR(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return aP(()=>{let a=this.checkNumSamples(e);if(n)throw new uG("Verbose predictLoop() is not implemented yet.");let r=dj(a,t),i=this.outputs.map(e=>[]);for(let t=0;t<r.length;++t)aP(()=>{let n=dQ(e,r[t][0],r[t][1]),a=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)a.push({key:this.inputs[e],value:n[e]});else a.push({key:this.inputs[0],value:n});let i=new h9(a);return h7(this.outputs,i)}).forEach((e,t)=>i[t].push(e));return uV(i.map(e=>rU(e,0)))})}predict(e,t={}){let n=dq(e);d9(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return dY(e),this.predictLoop(n,e)}finally{d0(n,e)}}predictOnBatch(e){d9(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new uN("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===dC?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(e=d3(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=d3(t,this.feedOutputNames,r,!1,"target"),function(e,t,n){let a=uA(e.map(e=>e.shape[0]));a.sort();let r=uA(t.map(e=>e.shape[0]));if(r.sort(),a.length>1)throw new uR(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(r.length>1)throw new uR(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(a.length>0&&r.length>0&&!y(a,r))throw new uR(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}(e,t),function(e,t,n){let a=[dv,dT,dS];for(let r=0;r<e.length;++r){let i=e[r],s=t[r],o=n[r];if(null!=s){if(s===dS&&1===i.shape[i.shape.length-1])throw new uR(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(s)){let e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let a=e[n],r=t[n];if(null!=r&&a!==r)throw new uR(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new uR(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,i){let[s,o]=this.standardizeUserDataXY(e,t,r,i);if(null!=n)throw Error("sample weight is not supported yet.");let l=null;if(null!=a){let e=dO(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await dA(o[t],null,e[t]))}return[s,o,l]}testLoop(e,t,n,a=0,r){return aP(()=>{let i=this.checkNumSamples(t,n,r,"steps"),s=[];if(a>0)throw new uG("Verbose mode is not implemented yet.");if(null!=r)throw new uG("steps mode in testLoop() is not implemented yet");{let a=dj(i,n),r=om(hi(0,i));for(let n=0;n<a.length;++n){let i=a[n][0],o=a[n][1],l=e(dJ(t,hu(r,i,o-i)));if(0===n)for(let e=0;e<l.length;++e)s.push(iD(0));for(let e=0;e<l.length;++e){let t=l[e];s[e]=rp(s[e],rg(o-i,t))}}for(let e=0;e<s.length;++e)s[e]=rm(s[e],i)}return s})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let a=e[n],r=a;if(uz(e,a)>1){let t=uz(e.slice(0,n),a);r+=`_${t}`}t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{let e;let s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:n[e]});let o=new h9(s),l=h7(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let i=(0,this.lossFunctions[n])(a[n],l[n]);null!=r[n]&&(i=rg(i,r[n]));let s=sg(i);t.push(s),e=0===n?i:rp(e,i)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=sg(t(a[r],l[r]))}aH(n),i.push(n)}return e=sg(e),this.calculateLosses().forEach(t=>{e=rp(e,t)}),e},!0,s)].concat(i)}}makeTestFunction(){this.testFunction=e=>aP(()=>{let t;let n=[],a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:a[e]});let s=new h9(i),o=h7(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){let a=sg((0,this.lossFunctions[e])(r[e],o[e]));t=0===e?a:rp(t,a),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1],i=sg(t(r[a],o[a]));n.push(i)}return n})}async fit(e,t,n={}){let a,r,i,s,o,l,u,h,d;if(this.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let c,p;let f=null==n.batchSize?32:n.batchSize;dY(f);let m=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,f);a=m[0],r=m[1],d=m[2];let g=!1,b;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2===n.validationData.length)o=n.validationData[0],l=n.validationData[1];else throw 3===n.validationData.length?new uG("validationData including sample weights is not supported yet."):new uR(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let e=await this.standardizeUserData(o,l,null,null,!0,f);u=e[0],h=e[1],b=u.concat(h)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let e=Math.floor(a[0].shape[0]*(1-n.validationSplit)),t=a[0].shape[0];u=dQ(a,e,t),i=a,a=dQ(a,0,e),h=dQ(r,e,t),s=r,r=dQ(r,0,e),b=u.concat(h)}else null!=n.validationSteps&&(g=!0);let y=a.concat(r).concat(d);this.checkTrainableWeightsConsistency();let x=this.makeTrainFunction(),k=this.getDedupedMetricsNames();g?(this.makeTestFunction(),c=this.testFunction,p=k.slice().concat(k.map(e=>"val_"+e))):(c=null,b=[],p=k.slice());let v=dg(n.callbacks,n.yieldEvery);return await this.fitLoop(x,y,k,f,n.epochs,n.verbose,v,c,b,n.shuffle,p,n.initialEpoch,null,null)}finally{this.isTraining=!1,d0(a,e),d0(r,t),d0(i,e),d0(s,t),d0(u,o),d0(h,l),null!=d&&aB(d)}}async fitLoop(e,t,n,a,r,i,s,o,l,u,h,d,c,f){let m;null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==d&&(d=0);let g=!1;if(null!=o&&null!=l&&(g=!0),null!=f&&(g=!0,null==c))throw new uR("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let b=this.checkNumSamples(t,a,c,"steps_per_epoch");null!=b&&(m=hi(0,b)),null==i&&(i=1);let{callbackList:y,history:x}=dy(s,i,r,d,b,c,a,g,h);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let i=d;i<r;++i){await y.onEpochBegin(i);let r={};if(null!=c)throw new uG("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new uG("batch shuffling is not implemneted yet");u&&function(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,p(e,--t,n)}(m);let i=om(m),s=dj(b,a);for(let u=0;u<s.length;++u){let h={};if(await y.onBatchBegin(u,h),aP(()=>{let d=s[u][0],c=s[u][1],p=hu(i,d,c-d);h.batch=u,h.size=c-d;let f=e(dJ(t,p));for(let e=0;e<n.length;++e){let t=n[e],a=f[e];h[t]=a,aH(a)}if(u===s.length-1&&g){let e=this.testLoop(o,l,a);for(let t=0;t<n.length;++t){let a=n[t],i=e[t];aH(i),r["val_"+a]=i}}}),await y.onBatchEnd(u,h),dh(h),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return dH(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),a=n[0],r=n[1],i=this.makeTrainFunction()(a.concat(r)),s=[];for(let e of i){let t=await e.data();s.push(t[0])}return aB(i),d0(n[0],e),d0(n[1],t),uV(s)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=aA().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-aA().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=u$(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>u$(e))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let a of t)if("string"==typeof n[a])e[a]=u$(n[a]);else throw Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[u$(dV(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>u$(dV(e)));{let e={};for(let t in this.metrics)e[t]=u$(dV(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){let t,n;if(null!=e.weighted_metrics)throw Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw Error("Loading sample_weight_mode is not supported yet.");let a=dx(function e(t,n){if(null===t)return null;if("string"==typeof t)return uF(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let a=[],r=t.length;for(let i=0;i<r;++i){let r=t[i];dF(n,i,r)?a.push(r):a.push(e(r,n))}return a}{let n={};for(let a of Object.keys(t)){let r=t[a];if("name"===a&&"string"==typeof r)n[a]=r;else{let t=uF(a);n[t]=e(r,t)}}return n}}(e.optimizer_config));if("string"==typeof e.loss)t=uF(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>uF(e));else if(null!=e.loss)for(let n in t={},e.loss)t[n]=uF(e.loss[n]);if(Array.isArray(e.metrics))n=e.metrics.map(e=>uF(e));else if(null!=e.metrics)for(let t in n={},e.metrics)n[t]=uF(e.metrics[t]);this.compile({loss:t,metrics:n,optimizer:a})}async save(e,t){if("string"==typeof e){let t=a0(e);if(0===t.length)throw new uR(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new uR(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new uR("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await aY(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${dZ}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){var r;a.trainingConfig=this.getTrainingConfig();let{data:e,specs:t}=await aY(await this.optimizer.getWeights(),"optimizer");n.specs.push(...t),n.data=(r=[n.data,e],aO.join(r))}return null!=this.userDefinedMetadata&&(dX(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){dX(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}d5.className="Model",o6(d5);class d4 extends d5{}d4.className="Functional",o6(d4);class d7 extends d5{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:uQ("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new uR(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t;let n=e instanceof d7||e instanceof d5;if(n){if(1!==(t=e).outputs.length)throw new uR("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new uR("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new uR("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=function(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new uR("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new h3({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new uR(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new uR("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,a){if((null==n||null!=a&&a>0)&&(n=t.sourceLayer,a=t.nodeIndex),0===n.inboundNodes.length)return[t];{let t=n.inboundNodes[a];if(0===t.inboundLayers.length)return t.inputTensors;{let n=[];for(let a=0;a<t.inboundLayers.length;a++)for(let r of e(t.inputTensors[a],t.inboundLayers[a],t.nodeIndices[a]))-1===n.indexOf(r)&&n.push(r);return n}}}(this.outputs[0])}this.inboundNodes=[],new h0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:uM(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(hB(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new d5({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new uN("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new uN("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new uN("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new uN("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new uR("Legacy serialization format not supported yet.");r=t}else f(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,i=t;let s=new e(i);if(!(s instanceof d7))throw new uG(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(let e of r){let t=dx(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new uR("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new uR("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}d7.className="Sequential",o6(d7);let d8=class extends o7{getConfig(){return{}}};class d6 extends d8{apply(e,t=1){return function(e,t=1){if(1!==t)throw new uG(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return iR(e)}(e,t)}}d6.className="elu",o6(d6);class ce extends d8{apply(e){return s9(e)}}ce.className="selu",o6(ce);class ct extends d8{apply(e){return sq(e)}}ct.className="relu",o6(ct);class cn extends d8{apply(e){return aP(()=>sx(6,sq(e)))}}cn.className="relu6",o6(cn);class ca extends d8{apply(e){return e}}ca.className="linear",o6(ca);class cr extends d8{apply(e){return rY(e)}}cr.className="sigmoid",o6(cr);class ci extends d8{apply(e){return aP(()=>r7(rp(.5,rg(.2,e)),0,1))}}ci.className="hardSigmoid",o6(ci);class cs extends d8{apply(e){return sr(e)}}cs.className="softplus",o6(cs);class co extends d8{apply(e){return aP(()=>rm(e,rp(rb(e),1)))}}co.className="softsign",o6(co);class cl extends d8{apply(e){return rJ(e)}}cl.className="tanh",o6(cl);let cu=class extends d8{apply(e,t=-1){return oa(e,t)}};cu.className="softmax",o6(cu);class ch extends d8{apply(e,t=-1){return so(e,t)}}ch.className="logSoftmax",o6(ch);class cd extends d8{apply(e,t=1){return aP(()=>rg(rY(rg(e,t)),e))}}cd.className="swish",o6(cd);class cc extends d8{apply(e){return aP(()=>rg(e,rJ(sr(e))))}}function cp(e){return e.getClassName()}function cf(e,t={}){return uD(e,o8.getMap().classNameMap,t,"activation")}function cm(e){if(null==e){let e={};return e.className="linear",e.config={},cf(e)}if("string"!=typeof e)return e instanceof d8?e:cf(e);{let t={};return t.className=e,t.config={},cf(t)}}cc.className="mish",o6(cc);class cg extends o7{}class cb extends cg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return aP(()=>{let t=sb([1]);return this.hasL1&&(t=rp(t,iP(rg(this.l1,rb(e))))),this.hasL2&&(t=rp(t,iP(rg(this.l2,rg(e,e))))),rP(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}cb.className="L1L2",o6(cb);let cy={l1l2:"L1L2"};function cx(e,t={}){return uD(e,o8.getMap().classNameMap,t,"regularizer")}function ck(e){return null==e?null:"string"==typeof e?cx({className:e in cy?cy[e]:e,config:{}}):e instanceof cg?e:cx(e)}class cv extends h2{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){let n=sq(e=hP(e));return null!=this.maxValue&&(n=r7(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue};return Object.assign(e,super.getConfig()),e}}cv.className="ReLU",o6(cv);class cI extends h2{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return i4(hP(e),this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}cI.className="LeakyReLU",o6(cI);class cw extends h2{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=hD(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ck(e.alphaRegularizer),this.alphaConstraint=dl(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new uR(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){let t=(e=hB(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new hJ({ndim:e.length,axes:n})],this.built=!0}call(e,t){return sG(e=hP(e),this.alpha.read())}getConfig(){let e={alphaInitializer:uK(this.alphaInitializer),alphaRegularizer:uK(this.alphaRegularizer),alphaConstraint:uK(this.alphaConstraint),sharedAxes:this.sharedAxes};return Object.assign(e,super.getConfig()),e}}cw.className="PReLU",o6(cw);let cS=class extends h2{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new uG(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return iR(hP(e))}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}};cS.className="ELU",o6(cS);class cC extends h2{constructor(e){super(e??{}),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=hP(e);return rg(n,rd(i0(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta};return Object.assign(e,super.getConfig()),e}}cC.className="ThresholdedReLU",o6(cC);class cT extends h2{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new cu().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return aP(()=>{let n=hP(e),a=t.mask;if(null!=a){let e=rg(ss(sy(n.shape),rd(a,n.dtype)),iD(-1e9));n=rp(n,e)}return this.axis instanceof Array?this.axis.length>1?iU(ss(n,sl(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function cN(e,t,n){if("number"==typeof e)return uM(e,t);if(e.length!==t)throw new uR(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let r=e[a];if(r!==parseInt(r.toString(),10))throw new uR(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function cR(e,t,n,a,r=1){return null==e?e:Math.floor((("same"===n?e:e-(t+(t-1)*(r-1))+1)+a-1)/a)}function cG(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+hr([n-t,0]);else if("same"===a)e*=t;else throw new uR(`Unsupport padding mode: ${a}.`);return e}function cW(e,t){return aP(()=>(u3(t),"channelsFirst"===t?oC(e,[0,2,3,1]):e))}function cL(e,t){return aP(()=>(u3(t),"channelsFirst"===t?oC(e,[0,2,3,4,1]):e))}function cM(e,t,n,a=[1,1],r="valid",i,s,o=null){return aP(()=>{if(null==i&&(i=ho()),u3(i),3!==e.rank&&4!==e.rank)throw new uR(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new uR(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=cW(e,i);if("causal"===r)throw new uG("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=oM({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=oC(l,[0,3,1,2])),l})}cT.className="Softmax",o6(cT);class cE extends h2{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",cE.verifyArgs(t),this.rank=e,uH(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new uG(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cN(t.kernelSize,e,"kernelSize"),this.strides=cN(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,u9(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,u3(this.dataFormat),this.activation=cm(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=hD(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=dl(t.biasConstraint),this.biasRegularizer=ck(t.biasRegularizer),this.activityRegularizer=ck(t.activityRegularizer),this.dilationRate=cN(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new uR(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new uR(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new uR(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(uE("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!uB(e.kernelSize,"number",1,3))throw new uR(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:cp(this.activation),useBias:this.useBias,biasInitializer:uK(this.biasInitializer),biasRegularizer:uK(this.biasRegularizer),activityRegularizer:uK(this.activityRegularizer),biasConstraint:uK(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}class cz extends cE{constructor(e,t){super(e,t),this.kernel=null,cz.verifyArgs(t),this.filters=t.filters,uH(this.filters,"filters"),this.kernelInitializer=hD(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=dl(t.kernelConstraint),this.kernelRegularizer=ck(t.kernelRegularizer)}build(e){e=hB(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new uR(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return aP(()=>{let t;e=hP(e);let n=null==this.bias?null:this.bias.read(),a=uU(this.activation.getClassName());if(null!=a&&2===this.rank)t=cM(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,r="valid",i,s=1){return aP(()=>{if(null==i&&(i=ho()),u3(i),3!==e.shape.length)throw new uR(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new uR(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new uR(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=oC(e,[0,2,1])),"causal"===r)throw new uG("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ir(e,t,a,"same"===r?"same":"valid","NWC",s);return null!=n&&(o=hx(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=cM(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(3===this.rank)t=function(e,t,n,a=[1,1,1],r="valid",i,s){return aP(()=>{if(null==i&&(i=ho()),u3(i),4!==e.rank&&5!==e.rank)throw new uR(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new uR(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=cL(e,i);if("causal"===r)throw new uG("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=io(o,t,a,"same"===r?"same":"valid","NDHWC",s),null!=n&&(o=hx(o,n)),"channelsFirst"===i&&(o=oC(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new uG("convolutions greater than 3D are not implemented yet.");null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=hB(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let a=cR(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t)).push(this.filters):(a.push(this.filters),a=a.concat(t)),a}getConfig(){let e={filters:this.filters,kernelInitializer:uK(this.kernelInitializer),kernelRegularizer:uK(this.kernelRegularizer),kernelConstraint:uK(this.kernelConstraint)};return Object.assign(e,super.getConfig()),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new uR(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class cV extends cz{constructor(e){super(2,e),cV.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!uB(e.kernelSize,"number",1,2))throw new uR(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}cV.className="Conv2D",o6(cV);class cX extends cz{constructor(e){super(3,e),cX.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!(Array.isArray(e.kernelSize)&&(1===e.kernelSize.length||3===e.kernelSize.length)))throw new uR(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}cX.className="Conv3D",o6(cX);class c$ extends cV{constructor(e){if(super(e),this.inputSpec=[new hJ({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new uR(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=hB(e)).length)throw new uR("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new uR("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hJ({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return aP(()=>{let t,n,a=hP(e);if(4!==a.shape.length)throw new uR(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let r=a.shape,i=r[0];"channelsFirst"===this.dataFormat?(t=2,n=3):(t=1,n=2);let s=r[t],o=r[n],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],d=this.strides[1],c=[i,cG(s,h,l,this.padding),cG(o,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(a=oC(a,[0,2,3,1]));let p=is(a,this.kernel.read(),c,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=oC(p,[0,3,1,2])),null!=this.bias&&(p=hx(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){let t,n,a;let r=(e=hB(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,a=3):(t=3,n=1,a=2);let i=this.kernelSize[0],s=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return r[t]=this.filters,r[n]=cG(r[n],o,i,this.padding),r[a]=cG(r[a],l,s,this.padding),r}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}c$.className="Conv2DTranspose",o6(c$);class cF extends cX{constructor(e){if(super(e),this.inputSpec=[new hJ({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new uR(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=hB(e)).length)throw new uR("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new uR("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hJ({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return aP(()=>{let t,n,a,r=hP(e);if(5!==r.shape.length)throw new uR(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let i=r.shape,s=i[0];"channelsFirst"===this.dataFormat?(a=2,t=3,n=4):(a=1,t=2,n=3);let o=i[a],l=i[t],u=i[n],h=this.kernelSize[0],d=this.kernelSize[1],c=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,cG(o,p,h,this.padding),cG(l,f,d,this.padding),cG(u,m,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=oC(r,[0,2,3,4,1]));let b=iu(r,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=oC(b,[0,4,1,2,3])),null!==this.bias&&(b=hx(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(e){let t,n,a,r;let i=(e=hB(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,a=3,r=4):(t=4,n=1,a=2,r=3);let s=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return i[t]=this.filters,i[n]=cG(i[n],u,s,this.padding),i[a]=cG(i[a],h,o,this.padding),i[r]=cG(i[r],d,l,this.padding),i}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}cF.className="Conv3DTranspose",o6(cF);class cZ extends cz{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new uR("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new uR("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new uR(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=hD(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ck(t.depthwiseRegularizer),this.depthwiseConstraint=dl(t.depthwiseConstraint),this.pointwiseInitializer=hD(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ck(t.pointwiseRegularizer),this.pointwiseConstraint=dl(t.pointwiseConstraint)}build(e){if((e=hB(e)).length<this.rank+2)throw new uR(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new uR(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new hJ({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return aP(()=>{let t;if(e=hP(e),1===this.rank)throw new uG("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=oC(e,[0,2,3,1])),t=s5(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=hx(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=oC(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=uK(this.depthwiseInitializer),e.pointwiseInitializer=uK(this.pointwiseInitializer),e.depthwiseRegularizer=uK(this.depthwiseRegularizer),e.pointwiseRegularizer=uK(this.pointwiseRegularizer),e.depthwiseConstraint=uK(this.depthwiseConstraint),e.pointwiseConstraint=uK(this.pointwiseConstraint),e}}cZ.className="SeparableConv";class cK extends cZ{constructor(e){super(2,e)}}cK.className="SeparableConv2D",o6(cK);class cD extends cz{constructor(e){super(1,e),cD.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!uB(e.kernelSize,"number",1,1))throw new uR(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}cD.className="Conv1D",o6(cD);class cO extends h2{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return aP(()=>{if(e=hP(e),"channelsLast"===this.dataFormat){let t=hd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return hd(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=hd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return hd(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}cO.className="Cropping2D",o6(cO);class cA extends h2{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,u3(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,uP(uj,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return aP(()=>{let t=hP(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=oC(t,[0,2,3,1]);let e=this.size[0]*n[2],a=this.size[1]*n[3];return oC("nearest"===this.interpolation?o9.resizeNearestNeighbor(t,[e,a]):o9.resizeBilinear(t,[e,a]),[0,3,1,2])}{let e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?o9.resizeNearestNeighbor(t,[e,a]):o9.resizeBilinear(t,[e,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}}cA.className="UpSampling2D",o6(cA);class cP extends cE{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=hD(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=dl(e.depthwiseConstraint),this.depthwiseRegularizer=ck(e.depthwiseRegularizer)}build(e){if((e=hB(e)).length<4)throw new uR(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new uR(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aP(()=>{let t=function(e,t,n=[1,1],a="valid",r,i){return aP(()=>{null==r&&(r=ho()),u3(r);let i=cW(e,r);if(4!==e.rank)throw new uR(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new uR(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ib(i,t,n,"same"===a?"same":"valid","NHWC",null),"channelsFirst"===r&&(i=oC(i,[0,3,1,2])),i})}(e=hP(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=hx(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=hB(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=cR(t,this.kernelSize[0],this.padding,this.strides[0]),i=cR(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,i]:[e[0],r,i,a]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=uK(this.depthwiseInitializer),e.depthwiseRegularizer=uK(this.depthwiseRegularizer),e.depthwiseConstraint=uK(this.depthwiseRegularizer),e}}function cB(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new uR("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function cH(e,t,n,a=!1,r,i,s=!1,o=!1){return aP(()=>{let l,u;let h=t.shape.length;if(h<3)throw new uR(`Input should be at least 3D, but is ${h}D.`);let d=[1,0].concat(hi(2,h));if(t=oC(t,d),null!=i)throw new uG("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=rd(rd(r,"bool"),"float32")).rank===h-1&&(r=i_(r,-1)),r=oC(r,d)),a&&(t=s1(t,0),null!=r&&(r=s1(r,0)));let c=[],p,f=n,m=t.shape[0],g=ow(t);null!=r&&(l=ow(r));for(let t=0;t<m;++t){let n=g[t],a=aP(()=>e(n,f));if(null==r)p=a[0],f=a[1];else{let e=aP(()=>{let e=l[t],n=ss(sC(e),e);return{output:rp(rg(a[0],e),rg(f[0],n)),newStates:f.map((t,r)=>rp(rg(a[1][r],e),rg(t,n)))}});p=e.output,f=e.newStates}o&&c.push(p)}return o&&(u=od(c,1)),[p,u,f]})}cP.className="DepthwiseConv2D",o6(cP);class cU extends h2{constructor(e){let t;if(super(e),null==e.cell)throw new uR("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new c1({cells:e.cell}):e.cell).stateSize)throw new uR("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hJ({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?hi(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){let t;hO(e)&&(e=e[0]);let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let a=n[0];if(t=this.returnSequences?[e[0],e[1],a]:[e[0],a],!this.returnState)return t;{let a=[];for(let t of n)a.push([e[0],t]);return[t].concat(a)}}computeMask(e,t){return aP(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;return this.returnState?[e].concat(this.states.map(e=>null)):e})}get states(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}}set states(e){this.states_=e}build(e){let t;if(null!=this.numConstants)throw new uG("Constants support is not implemented in RNN yet.");hO(e)&&(e=e[0]);let n=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new hJ({shape:[n,null,...a]});let r=[e[0]].concat(e.slice(2));if(this.cell.build(r),t=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map(e=>e.shape[e.shape.length-1]),t))throw new uR(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=t.map(e=>new hJ({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){aP(()=>{if(!this.stateful)throw new uT("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new uR("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>sb([n,e])):this.states_=[sb([n,this.cell.stateSize])];else if(null==e)aB(this.states_),null!=this.keptStates&&(aB(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>sb([n,e])):this.states_[0]=sb([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new uR(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):aB(this.states_);for(let t=0;t<this.states_.length;++t){let a=e[t],r=[n,Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize];if(!y(a.shape,r))throw new uR(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map(e=>aH(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});let r=cB(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let i=[],s=[];if(null!=n){for(let e of(t.initialState=n,i=i.concat(n),this.stateSpec=[],n))this.stateSpec.push(new hJ({shape:e.shape}));s=s.concat(this.stateSpec)}if(null!=a&&(t.constants=a,i=i.concat(a),this.numConstants=a.length),!(i[0]instanceof hj))return super.apply(e,t);{let n=[e].concat(i),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;let o=super.apply(n,t);return this.inputSpec=r,o}}call(e,t){return aP(()=>{let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;e=hP(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new uR(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let s={training:a},o=cH((e,t)=>{let n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,a);let d=this.returnSequences?u:l;return this.returnState?[d].concat(h):d})}getInitialState(e){return aP(()=>{let t=sb(e.shape);return t=hl(t=iP(t,[1,2])),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?hf(t,[1,e]):t):this.cell.stateSize>1?[hf(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===cU.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let a=dx(t.cell,n);return new e(Object.assign(t,{cell:a}))}}cU.className="RNN",o6(cU);class c_ extends h2{}class cY extends c_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,uH(this.units,"units"),this.activation=cm(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ck(e.kernelRegularizer),this.recurrentRegularizer=ck(e.recurrentRegularizer),this.biasRegularizer=ck(e.biasRegularizer),this.kernelConstraint=dl(e.kernelConstraint),this.recurrentConstraint=dl(e.recurrentConstraint),this.biasConstraint=dl(e.biasConstraint),this.dropout=ha([1,hr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,hr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=hB(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aP(()=>{let n;if(2!==e.length)throw new uR(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let a=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=c2({ones:()=>sC(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=c2({ones:()=>sC(a),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,s=this.recurrentDropoutMask;n=null!=i?hg(rg(e,i),this.kernel.read()):hg(e,this.kernel.read()),null!=this.bias&&(n=hx(n,this.bias.read())),null!=s&&(a=rg(a,s));let o=rp(n,hg(a,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:cp(this.activation),useBias:this.useBias,kernelInitializer:uK(this.kernelInitializer),recurrentInitializer:uK(this.recurrentInitializer),biasInitializer:uK(this.biasInitializer),kernelRegularizer:uK(this.kernelRegularizer),recurrentRegularizer:uK(this.recurrentRegularizer),biasRegularizer:uK(this.biasRegularizer),activityRegularizer:uK(this.activityRegularizer),kernelConstraint:uK(this.kernelConstraint),recurrentConstraint:uK(this.recurrentConstraint),biasConstraint:uK(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}cY.className="SimpleRNNCell",o6(cY);class cQ extends cU{constructor(e){e.cell=new cY(e),super(e)}call(e,t){return aP(()=>{null!=this.cell.dropoutMask&&(aB(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aB(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return new e(t)}}cQ.className="SimpleRNN",o6(cQ);class cJ extends c_{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new uR("GRUCell does not support reset_after parameter set to true.");this.units=e.units,uH(this.units,"units"),this.activation=cm(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cm(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ck(e.kernelRegularizer),this.recurrentRegularizer=ck(e.recurrentRegularizer),this.biasRegularizer=ck(e.biasRegularizer),this.kernelConstraint=dl(e.kernelConstraint),this.recurrentConstraint=dl(e.recurrentConstraint),this.biasConstraint=dl(e.biasConstraint),this.dropout=ha([1,hr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,hr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=hB(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aP(()=>{let n,a;if(2!==e.length)throw new uR(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let r=null!=t.training&&t.training,i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=c2({ones:()=>sC(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=c2({ones:()=>sC(i),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,o=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=rg(e,s[0]));let l=hg(e,this.kernel.read());this.useBias&&(l=hx(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=rg(i,o[0]));let u=this.recurrentKernel.read(),[h,d]=oo(u,[2*this.units,this.units],u.rank-1),c=hg(i,h),[p,f,m]=oo(l,3,l.rank-1),[g,b]=oo(c,2,c.rank-1);n=this.recurrentActivation.apply(rp(p,g));let y=hg(rg(this.recurrentActivation.apply(rp(f,b)),i),d);a=this.activation.apply(rp(m,y));let x=rp(rg(n,i),rg(rp(1,sa(n)),a));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:cp(this.activation),recurrentActivation:cp(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uK(this.kernelInitializer),recurrentInitializer:uK(this.recurrentInitializer),biasInitializer:uK(this.biasInitializer),kernelRegularizer:uK(this.kernelRegularizer),recurrentRegularizer:uK(this.recurrentRegularizer),biasRegularizer:uK(this.biasRegularizer),activityRegularizer:uK(this.activityRegularizer),kernelConstraint:uK(this.kernelConstraint),recurrentConstraint:uK(this.recurrentConstraint),biasConstraint:uK(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}cJ.className="GRUCell",o6(cJ);class cj extends cU{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cJ(e),super(e)}call(e,t){return aP(()=>{null!=this.cell.dropoutMask&&(aB(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aB(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cj.className="GRU",o6(cj);class cq extends c_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,uH(this.units,"units"),this.activation=cm(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cm(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ck(e.kernelRegularizer),this.recurrentRegularizer=ck(e.recurrentRegularizer),this.biasRegularizer=ck(e.biasRegularizer),this.kernelConstraint=dl(e.kernelConstraint),this.recurrentConstraint=dl(e.recurrentConstraint),this.biasConstraint=dl(e.biasConstraint),this.dropout=ha([1,hr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,hr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;let a=(e=hB(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[a,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,a=this.units;n=new((t=class extends hw{apply(t,n){let r=e.apply([a]),i=new hC().apply([a]),s=e.apply([2*a]);return hp(hp(r,i),s)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return aP(()=>{let n,a;let r=null!=t.training&&t.training;if(3!==e.length)throw new uR(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let i=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=c2({ones:()=>sC(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=c2({ones:()=>sC(i),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=rg(e,o[0]));let u=hg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=rg(i,l[0])),u=rp(u,hg(i,this.recurrentKernel.read())),this.useBias&&(u=hx(u,this.bias.read()));let[h,d,c,p]=oo(u,4,u.rank-1);n=this.recurrentActivation.apply(h),a=rp(rg(this.recurrentActivation.apply(d),s),rg(n,this.activation.apply(c)));let f=rg(this.recurrentActivation.apply(p),this.activation.apply(a));return[f,f,a]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:cp(this.activation),recurrentActivation:cp(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uK(this.kernelInitializer),recurrentInitializer:uK(this.recurrentInitializer),biasInitializer:uK(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:uK(this.kernelRegularizer),recurrentRegularizer:uK(this.recurrentRegularizer),biasRegularizer:uK(this.biasRegularizer),activityRegularizer:uK(this.activityRegularizer),kernelConstraint:uK(this.kernelConstraint),recurrentConstraint:uK(this.recurrentConstraint),biasConstraint:uK(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}cq.className="LSTMCell",o6(cq);class c0 extends cU{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cq(e),super(e)}call(e,t){return aP(()=>{null!=this.cell.dropoutMask&&(aB(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aB(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}c0.className="LSTM",o6(c0);class c1 extends c_{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return aP(()=>{let n;let a=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(a.splice(0,e.stateSize.length)):r.push(a.splice(0,1));r.reverse();let i=[];for(let s=0;s<this.cells.length;++s){let o=this.cells[s];a=r[s],n=0===s?[e[0]].concat(a):[n[0]].concat(a),n=o.call(n,t),i.push(n.slice(1))}for(let e of(a=[],i.slice().reverse()))a.push(...e);return[n[0]].concat(a)})}build(e){let t;hO(e)&&(e=e[0]),this.cells.forEach((n,a)=>{u7(`RNNCell_${a}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){let a=[];for(let e of t.cells)a.push(dx(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return hY(e)}setWeights(e){let t=[];for(let n of this.cells){let a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}hQ(t)}}function c2(e){let{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:i}=e,s=()=>{var e;return null!=i?i(t(),n):(e=t(),aP(()=>oT(e,n,void 0,void 0)))},o=()=>hk(s,t,a);return!r||r<=1?aH(o().clone()):Array(r).fill(void 0).map(o).map(e=>aH(e.clone()))}c1.className="StackedRNNCells",o6(c1);var c3=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&0>t.indexOf(a)&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)0>t.indexOf(a[r])&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n};class c9 extends cU{constructor(e){if(e.unroll)throw new uG("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new uG("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hJ({ndim:5})]}call(e,t){return aP(()=>{if(null!=this.cell.dropoutMask&&(aB(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aB(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new uR("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return aP(()=>{let{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=sb([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){aP(()=>{if(!this.stateful)throw new uT("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new uR("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>sb(r)):this.states_=[sb(r)];else if(null==e)aB(this.states_),null!=this.keptStates&&(aB(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>sb(r)):this.states_[0]=sb(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new uR(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):aB(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t];if(!y(n.shape,r))throw new uR(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>aH(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:i,dilationRate:s}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=cR(l,a[0],r,i[0],s[0]),d=cR(u,a[1],r,i[1],s[1]);return[...e.slice(0,2),...o?[n,h,d]:[h,d,n]]}}c9.className="ConvRNN2D";class c5 extends cq{constructor(e){let{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:i,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,uH(this.filters,"filters"),this.kernelSize=cN(n,2,"kernelSize"),this.kernelSize.forEach(e=>uH(e,"kernelSize")),this.strides=cN(a||1,2,"strides"),this.strides.forEach(e=>uH(e,"strides")),this.padding=r||"valid",u9(this.padding),this.dataFormat=i||"channelsLast",u3(this.dataFormat),this.dilationRate=cN(s||1,2,"dilationRate"),this.dilationRate.forEach(e=>uH(e,"dilationRate"))}build(e){var t;e=hB(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new uR(`The channel dimension of the input should be defined. Found ${e[n]}`);let a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,a=this.filters;e=new((t=class extends hw{apply(e,t){return hc([n.apply([a]),sy([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return aP(()=>{if(3!==e.length)throw new uR(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,a=e[0],r=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=c2({ones:()=>sC(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,o=(e,t,n)=>t&&t[n]?rg(t[n],e):e,l=o(a,s,0),u=o(a,s,1),h=o(a,s,2),d=o(a,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=c2({ones:()=>sC(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,p=o(r,c,0),f=o(r,c,1),m=o(r,c,2),g=o(r,c,3),[b,y,x,k]=oo(this.kernel.read(),4,3),[v,I,w,S]=this.useBias?oo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,y,I,this.padding),h=this.inputConv(h,x,w,this.padding),d=this.inputConv(d,k,S,this.padding);let[C,T,N,R]=oo(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,T),m=this.recurrentConv(m,N),g=this.recurrentConv(g,R);let G=this.recurrentActivation.apply(rp(l,p)),W=this.recurrentActivation.apply(rp(u,f)),L=rp(rg(W,i),rg(G,this.activation.apply(rp(h,m)))),M=rg(this.recurrentActivation.apply(rp(d,g)),this.activation.apply(L));return[M,M,L]})}getConfig(){let e=c3(super.getConfig(),["units"]),t={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),t)}inputConv(e,t,n,a){let r=ia(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hx(r,n,this.dataFormat):r}recurrentConv(e,t){return ia(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}c5.className="ConvLSTM2DCell",o6(c5);class c4 extends c9{constructor(e){super(Object.assign(Object.assign({},e),{cell:new c5(e)}))}static fromConfig(e,t){return new e(t)}}c4.className="ConvLSTM2D",o6(c4);class c7 extends h2{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,a=this.getNoiseShape(n);return hk(()=>{var e,t;return e=this.rate,t=this.seed,aP(()=>oT(n,e,a,t))},()=>n,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return Object.assign(e,super.getConfig()),e}dispose(){return super.dispose()}}c7.className="Dropout",o6(c7);class c8 extends c7{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}}c8.className="SpatialDropout1D",o6(c8);class c6 extends h2{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,uH(this.units,"units"),this.activation=cm(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=hD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=hD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=dl(e.kernelConstraint),this.biasConstraint=dl(e.biasConstraint),this.kernelRegularizer=ck(e.kernelRegularizer),this.biasRegularizer=ck(e.biasRegularizer),this.activityRegularizer=ck(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=hB(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=hB(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return aP(()=>{let n;this.invokeCallHook(e,t);let a=hP(e),r=uU(this.activation.getClassName());return null!=r?n=hg(a,this.kernel.read(),r,this.bias?this.bias.read():null):(n=hg(a,this.kernel.read()),null!=this.bias&&(n=hx(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:cp(this.activation),useBias:this.useBias,kernelInitializer:uK(this.kernelInitializer),biasInitializer:uK(this.biasInitializer),kernelRegularizer:uK(this.kernelRegularizer),biasRegularizer:uK(this.biasRegularizer),activityRegularizer:uK(this.activityRegularizer),kernelConstraint:uK(this.kernelConstraint),biasConstraint:uK(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}c6.className="Dense",o6(c6);class pe extends h2{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=hB(e)).slice(1))if(null==t)throw new uR(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],hn(e,1)]}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=oC(n,e)}return function(e){if(e.rank<=1)throw new uR(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],hn(e.shape,1)];return rP(e,t)}(n)})}getConfig(){let e={};return null!=this.dataFormat&&(e.dataFormat=this.dataFormat),Object.assign(e,super.getConfig()),e}}pe.className="Flatten",o6(pe);class pt extends h2{constructor(e){super(e),this.supportsMasking=!0,this.activation=cm(e.activation)}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);return this.activation.apply(n)})}getConfig(){let e={activation:cp(this.activation)};return Object.assign(e,super.getConfig()),e}}pt.className="Activation",o6(pt);class pn extends h2{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return aP(()=>{var t,n;return t=e=hP(e),n=this.n,aP(()=>{if(2!==t.shape.length)throw new uR(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return hf(hl(t,1),[1,n,1])})})}getConfig(){let e={n:this.n};return Object.assign(e,super.getConfig()),e}}pn.className="RepeatVector",o6(pn);class pa extends h2{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",a=t.slice(),r=1,i=null;for(let e=0;e<a.length;++e){let t=a[e];if(this.isUnknown(t)){if(null===i)i=e;else throw new uR("Can only specifiy one unknown dimension.")}else r*=t}let s=hn(e);if(null!==i){if(0===r||s%r!=0)throw new uR(n);a[i]=s/r}else if(s!==r)throw new uR(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e),a=n.shape;return rP(n,a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape)))})}getConfig(){let e={targetShape:this.targetShape};return Object.assign(e,super.getConfig()),e}}pa.className="Reshape",o6(pa);class pr extends h2{constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=hi(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hJ({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=hB(e)).slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return oC(hP(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims};return Object.assign(e,super.getConfig()),e}}pr.className="Permute",o6(pr);class pi extends h2{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){return rv(sw(hP(e),this.maskValue),-1)}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e),a=rv(sw(n,this.maskValue),-1,!0);return rg(n,rd(a,n.dtype))})}}pi.className="Masking",o6(pi);class ps extends h2{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(uX(e.inputLength))}this.inputDim=e.inputDim,uH(this.inputDim,"inputDim"),this.outputDim=e.outputDim,uH(this.outputDim,"outputDim"),this.embeddingsInitializer=hD(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ck(e.embeddingsRegularizer),this.activityRegularizer=ck(e.activityRegularizer),this.embeddingsConstraint=dl(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return aP(()=>this.maskZero?sw(e=hP(e),iS(e)):null)}computeOutputShape(e){if(e=hB(e),null==this.inputLength)return[...e,this.outputDim];let t=uX(this.inputLength);if(t.length!==e.length-1)throw new uR(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){let r=t[a],i=e[a+1];if(null!=r&&null!=i&&r!==i)throw new uR(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);"int32"!==n.dtype&&(n=rd(n,"int32"));let a=hb(this.embeddings.read(),rP(n,[n.size]));return rP(a,hB(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:uK(this.embeddingsInitializer),embeddingsRegularizer:uK(this.embeddingsRegularizer),activityRegularizer:uK(this.activityRegularizer),embeddingsConstraint:uK(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return Object.assign(e,super.getConfig()),e}}ps.className="Embedding",o6(ps);class po extends h2{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new uG}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){let r=e[e.length-t.length+a],i=t[a];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new uR("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[hB(e)]),e.length<2)throw new uR(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if((t=uA(t)).length>1)throw new uR(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let a=e.map(e=>e.length);-1===e.indexOf(null)&&1===uA(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return aP(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){let a=hr(n);for(let n of e){let e=n.rank;for(let t=0;t<a-e;++t)n=hl(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let a of e){let e=a.rank;if(null==e){let e=a.shape,r=e[0],i=e.slice(1).concat([r]),s=rP(a,[r].concat(hn(e.slice(1))));s=rP(s=oC(s,[1,0]),i),t.push(s),n=!0}else if(e>1){let r=hi(1,e).concat([0]);t.push(oC(a,r)),n=!0}else t.push(a)}let a=this.mergeFunction(t),r=a.rank;if(n){if(null==r){let e=a.shape,t=e.length,n=e[t-1],r=[n].concat(e.slice(0,e.length-1));a=rP(oC(rP(a,[-1,n]),[1,0]),r)}else r>1&&(a=oC(a,[r-1].concat(hi(0,r-1))))}return a}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return 1===(n=uA(n)).length?n.concat(t):[null].concat(t)}computeMask(e,t){return aP(()=>{if(null==t)return null;if(!Array.isArray(t))throw new uR("`mask` should be an Array");if(!Array.isArray(e))throw new uR("`inputs` should be an Array");if(t.length!==e.length)throw new uR(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:i_(e,0)))[0];for(let e=1;e<t.length-1;++e)n=su(n,t[e]);return n})}}class pl extends po{constructor(e){super(e)}mergeFunction(e){return aP(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rp(t,e[n]);return t})}}pl.className="Add",o6(pl);class pu extends po{constructor(e){super(e)}mergeFunction(e){return aP(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rg(t,e[n]);return t})}}pu.className="Multiply",o6(pu);class ph extends po{constructor(e){super(e)}mergeFunction(e){return aP(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rp(t,e[n]);return rg(1/e.length,t)})}}ph.className="Average",o6(ph);class pd extends po{constructor(e){super(e)}mergeFunction(e){return aP(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sm(t,e[n]);return t})}}pd.className="Maximum",o6(pd);class pc extends po{constructor(e){super(e)}mergeFunction(e){return aP(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sx(t,e[n]);return t})}}pc.className="Minimum",o6(pc);class pp extends po{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new uR("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let a=e[t].slice();a.splice(this.axis,1);let r=!1;for(let e of n)if(y(e,a)){r=!0;break}r||n.push(a)}if(n.length>1)throw new uR("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return aP(()=>hc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new uR("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),n=this.axis<0?t.length+this.axis:this.axis;for(let a of e.slice(1)){if(null==t[n]||null==a[n]){t[n]=null;break}t[n]+=a[n]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new uR("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new uR("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new uR(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return aP(()=>{let n=!0;if(t.forEach(e=>{if(null!=e){n=!1;return}}),n)return null;let a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(rd(sC(e[n]),"bool")):t[n].rank<e[n].rank?a.push(i_(t[n],-1)):a.push(t[n]);return rk(rU(a,this.axis),-1,!1)})}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function pf(e,t){for(;e<0;)e+=t;return e}pp.className="Concatenate",o6(pp);class pm extends po{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new uG("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new uR(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new uR(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],a;return a=Array.isArray(this.axes)?this.axes.map((t,n)=>pf(t,e[n].shape.length)):[pf(this.axes,t.shape.length),pf(this.axes,n.shape.length)],this.normalize&&(t=dk(t,a[0]),n=dk(n,a[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new uG("batchDot is not implemented for tensors of 4D or higher rank yet");if(f(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),f(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new uG("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);let i=n;return aP(()=>{let n,s;if(a>r){n=a-r;let e=[];for(let t=0;t<n;++t)e.push(1);t=rP(t,t.shape.concat(e))}else if(r>a){n=r-a;let t=[];for(let e=0;e<n;++e)t.push(1);e=rP(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=i[0]===i[1]?iP(rg(e,t),i[0]):iP(rg(oC(e,[1,0]),t),i[1]);else{let n=i[0]!==e.shape.length-1,a=i[1]===t.shape.length-1;s=r_(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;let t=[];for(let a=e;a<e+n;++a)t.push(a);s=oh(s,t)}return 1===s.shape.length&&(s=i_(s,1)),s})}(t,n,a)}interpretAxes(e,t){return Array.isArray(this.axes)?this.axes:[pf(this.axes,e.length),pf(this.axes,t.length)]}computeOutputShape(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new uG("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);let r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize};return Object.assign(e,super.getConfig()),e}}pm.className="Dot",o6(pm);class pg extends h2{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);return hk(()=>rp(hm(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}pg.className="GaussianNoise",o6(pg);class pb extends h2{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return aP(()=>{this.invokeCallHook(e,t);let n=hP(e);return this.rate>0&&this.rate<1?hk(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return rg(n,hm(n.shape,1,e))},()=>n,t.training||!1):n})}}pb.className="GaussianDropout",o6(pb);class py extends h2{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||hP(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return aP(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return hk(()=>{let t=hP(e),a=i1(sY(n),this.rate);a=rd(a,"float32");let r=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,i=-(-1.7580993408473766*r)*this.rate,s=rp(rg(t,a),rg(rp(a,-1),-1.7580993408473766));return rp(rg(s,r),i)},()=>hP(e),t.training||!1)}return e})}}function px(e,t,n,a,r,i=.001){let s;if(2===e.rank)s=r0(e,t,n,a,r,i);else if(3===e.rank)s=r1(e,t,n,a,r,i);else if(4===e.rank)s=r2(e,t,n,a,r,i);else throw new uG(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return s}py.className="AlphaDropout",o6(py);class pk extends h2{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hD(e.betaInitializer||"zeros"),this.gammaInitializer=hD(e.gammaInitializer||"ones"),this.movingMeanInitializer=hD(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=hD(e.movingVarianceInitializer||"ones"),this.betaConstraint=dl(e.betaConstraint),this.gammaConstraint=dl(e.gammaConstraint),this.betaRegularizer=ck(e.betaRegularizer),this.gammaRegularizer=ck(e.gammaRegularizer)}build(e){e=hB(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new uR(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hJ({ndim:e.length,axes:{[t]:n}})];let a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return aP(()=>{let n=null!=t.training&&t.training,a=hP(e),r=a.shape,i=r.length,s=hi(0,i),o=this.axis>=0?this.axis:this.axis+i;s.splice(o,1);let l=uM(1,i);l[o]=r[o];let u=s.slice();u.sort();let h=!y(u,hi(0,i).slice(0,i-1));if(!n)return(()=>{if(!h)return px(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);{let e=rP(this.movingMean.read(),l);return px(a,e,rP(this.movingVariance.read(),l),this.center?rP(this.beta.read(),l):null,this.scale?rP(this.gamma.read(),l):null,this.epsilon)}})();let[d,c,p]=function(e,t,n,a,r=.001){return y(a.slice().sort(),hi(0,e.rank-1))?function(e,t,n,a,r=.001){return aP(()=>{let i=sI(e,a),s=i.mean,o=i.variance;return[px(e,s,o,n,t,r),s,o]})}(e,t,n,a,r):function(e,t,n,a,r=.001){return aP(()=>{let i=sI(e,a),s=i.mean,o=i.variance,l=[];for(let t of hi(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=rP(s,l),h=rP(o,l),d=null==t?null:rP(t,l);return[px(e,u,h,null==n?null:rP(n,l),d,r),s,o]})}(e,t,n,a,r)}(a,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{aP(()=>{let a=e.read(),r=rg(ss(a,t),1-n);e.write(ss(a,r))})};return(()=>{f(this.movingMean,c,this.momentum),f(this.movingVariance,p,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:uK(this.betaInitializer),gammaInitializer:uK(this.gammaInitializer),movingMeanInitializer:uK(this.movingMeanInitializer),movingVarianceInitializer:uK(this.movingVarianceInitializer),betaRegularizer:uK(this.betaRegularizer),gammaRegularizer:uK(this.gammaRegularizer),betaConstraint:uK(this.betaConstraint),gammaConstraint:uK(this.gammaConstraint)};return Object.assign(e,super.getConfig()),e}}pk.className="BatchNormalization",o6(pk);class pv extends h2{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hD(e.betaInitializer||"zeros"),this.gammaInitializer=hD(e.gammaInitializer||"ones"),this.betaRegularizer=ck(e.betaRegularizer),this.gammaRegularizer=ck(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=hB(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==uA(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=hP(e),a=n.shape,r=a.length;return aP(()=>{let{mean:e,variance:t}=sI(n,this.axis,!0),i=uM(1,r);for(let e of this.axis)i[e]=a[e];let s=e=>null!=e&&e.shape.length!==r?rP(e,i):e,o=this.scale?s(this.gamma.read()):null,l=this.center?s(this.beta.read()):null,u=[],h=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(a[e]),h.push(1)):(u.push(1),h.push(a[e]));return e=iQ(e,u),t=iQ(t,u),null!=o&&(o=iQ(o,h)),null!=l&&(l=iQ(l,h)),px(n,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:uK(this.betaInitializer),gammaInitializer:uK(this.gammaInitializer),betaRegularizer:uK(this.betaRegularizer),gammaRegularizer:uK(this.gammaRegularizer)};return Object.assign(e,super.getConfig()),e}}pv.className="LayerNormalization",o6(pv);class pI extends h2{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?ho():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,n;if(e.padding=e.padding,2!==e.padding.length)throw new uR(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new uR(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new uR(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hJ({ndim:4})]}computeOutputShape(e){let t,n;return e=hB(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return aP(()=>{var t,n,a;return t=hP(e),n=this.padding,a=this.dataFormat,aP(()=>{if(4!==t.rank)throw new uR(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new uR("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a=ho()),"channelsLast"!==a&&"channelsFirst"!==a)throw new uR(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return sT(t,"channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]])})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}function pw(e,t,n,a,r,i){return aP(()=>{let s;u3(r),u5(i),u9(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r=ho()),null==i&&(i="max"),e=cW(e,r);let o="same"===a?"same":"valid";return s="max"===i?sp(e,t,n,o):rB(e,t,n,o),"channelsFirst"===r&&(s=oC(s,[0,3,1,2])),s})}function pS(e,t,n,a,r,i){return aP(()=>{let s;u3(r),u5(i),u9(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r=ho()),null==i&&(i="max"),e=cL(e,r);let o="same"===a?"same":"valid";return s="max"===i?sf(e,t,n,o):rH(e,t,n,o),"channelsFirst"===r&&(s=oC(s,[0,4,1,2,3])),s})}pI.className="ZeroPadding2D",o6(pI);class pC extends h2{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new uR(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(uH(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new uR(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);uH(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,u9(this.padding),this.inputSpec=[new hJ({ndim:3})]}computeOutputShape(e){let t=cR((e=hB(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return aP(()=>(this.invokeCallHook(e,t),e=hl(hP(e),2),oh(this.poolingFunction(hP(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast"),[2])))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return Object.assign(e,super.getConfig()),e}}class pT extends pC{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pw(e,t,n,a,r,"max")}}pT.className="MaxPooling1D",o6(pT);class pN extends pC{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pw(e,t,n,a,r,"avg")}}pN.className="AveragePooling1D",o6(pN);class pR extends h2{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new uR(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];uH(this.poolSize,"poolSize"),uH(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,u3(this.dataFormat),u9(this.padding),this.inputSpec=[new hJ({ndim:4})]}computeOutputShape(e){e=hB(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=cR(t,this.poolSize[0],this.padding,this.strides[0]),n=cR(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return aP(()=>(this.invokeCallHook(e,t),this.poolingFunction(hP(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class pG extends pR{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pw(e,t,n,a,r,"max")}}pG.className="MaxPooling2D",o6(pG);class pW extends pR{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pw(e,t,n,a,r,"avg")}}pW.className="AveragePooling2D",o6(pW);class pL extends h2{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new uR(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];uH(this.poolSize,"poolSize"),uH(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,u3(this.dataFormat),u9(this.padding),this.inputSpec=[new hJ({ndim:5})]}computeOutputShape(e){e=hB(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=cR(t,this.poolSize[0],this.padding,this.strides[0]),n=cR(n,this.poolSize[1],this.padding,this.strides[1]),a=cR(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return aP(()=>(this.invokeCallHook(e,t),this.poolingFunction(hP(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class pM extends pL{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pS(e,t,n,a,r,"max")}}pM.className="MaxPooling3D",o6(pM);class pE extends pL{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return u3(r),u9(a),pS(e,t,n,a,r,"avg")}}pE.className="AveragePooling3D",o6(pE);class pz extends h2{constructor(e){super(e),this.inputSpec=[new hJ({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new uG}}class pV extends pz{constructor(e){super(e||{})}call(e,t){return aP(()=>sg(hP(e),1))}}pV.className="GlobalAveragePooling1D",o6(pV);class pX extends pz{constructor(e){super(e||{})}call(e,t){return aP(()=>iF(hP(e),1))}}pX.className="GlobalMaxPooling1D",o6(pX);class p$ extends h2{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,u3(this.dataFormat),this.inputSpec=[new hJ({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new uG}getConfig(){let e={dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class pF extends p${call(e,t){return aP(()=>{let t=hP(e);return"channelsLast"===this.dataFormat?sg(t,[1,2]):sg(t,[2,3])})}}pF.className="GlobalAveragePooling2D",o6(pF);class pZ extends p${call(e,t){return aP(()=>{let t=hP(e);return"channelsLast"===this.dataFormat?iF(t,[1,2]):iF(t,[2,3])})}}pZ.className="GlobalMaxPooling2D",o6(pZ);class pK extends h2{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Object.assign(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=dx(t.layer,n);delete t.layer;let r={layer:a};return Object.assign(r,t),new e(r)}}class pD extends pK{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=hB(e)).length<3)throw new uR(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=hB(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return aP(()=>cH((e,n)=>[hP(this.layer.call(e,t)),[]],e=hP(e),[],!1,null,null,!1,!0)[1])}}pD.className="TimeDistributed",o6(pD);class pO extends pK{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=dx(n),t.goBackwards=!0!==t.goBackwards;let a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=dx(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,uP(u1,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new uG("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState&&(a=r.slice(1)),t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):uV(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});let r=cB(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);let i=[],s=[];if(null!=n){let e=n.length;if(e%2>0)throw new uR("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);let a=n.map(e=>new hJ({shape:e.shape}));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),s.push(...a)}if(null!=a)throw new uG("Support for constants in Bidirectional layers is not implemented yet.");let o=i[0]instanceof hj;for(let e of i)if(e instanceof hj!==o)throw new uR("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!o)return super.apply(e,t);{let n=[e].concat(i),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;let o=super.apply(n,t);return this.inputSpec=r,o}}call(e,t){return aP(()=>{let n,a,r,i;let s=t.initialState;if(null==s)n=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let r=s.slice(0,s.length/2),i=s.slice(s.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(n)&&(r=n.slice(1).concat(a.slice(1))),n=n[0],a=a[0]),this.returnSequences&&(a=s1(a,1)),"concat"===this.mergeMode?i=hc([n,a]):"sum"===this.mergeMode?i=rp(n,a):"ave"===this.mergeMode?i=rg(.5,rp(n,a)):"mul"===this.mergeMode?i=rg(n,a):null==this.mergeMode&&(i=[n,a]),this.returnState?null==this.mergeMode?i.concat(r):[i].concat(r):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){u7(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),u7(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return n;{let e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode};return Object.assign(e,super.getConfig()),e}static fromConfig(e,t){let n=dx(t.layer);if(delete t.layer,null!=t.numConstants)throw new uG("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=n,new e(t)}}pO.className="Bidirectional",o6(pO);class pA extends h2{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset};return Object.assign(e,super.getConfig()),e}call(e,t){return aP(()=>("float32"!==(e=hP(e)).dtype&&(e=rd(e,"float32")),rp(rg(e,this.scale),this.offset)))}}pA.className="Rescaling",o6(pA);let{resizeBilinear:pP,cropAndResize:pB}=o9;class pH extends h2{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,i,s,o){return aP(()=>{let l,u=!1,h=(a+t)/i,d=(r+n)/s,c=[t/i,n/s,h,d],p=[];3===e.rank?(u=!0,l=od([e])):l=e;for(let e=0;e<l.shape[0];e++)p.push(c);let f=pB(l,aD(p,[p.length,4]),sQ(0,p.length,1,"int32"),[a,r],"nearest");return rd(u?hP(ow(f)):f,o)})}upsize(e,t,n,a){return aP(()=>rd(pP(e,[t,n]),a))}call(e,t){return aP(()=>{let t=hP(e),n=t.dtype,a=t.shape,r=a[a.length-3],i=a[a.length-2],s=0;r!==this.height&&(s=Math.floor((r-this.height)/2));let o=0;return i!==this.width&&0===(o=Math.floor((i-this.width)/2))&&(o=1),s>=0&&o>=0?this.centerCrop(t,s,o,this.height,this.width,r,i,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=hB(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}pH.className="CenterCrop",o6(pH);class pU extends h2{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){return null==(e=hB(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return aP(()=>{let n;if("int32"!==(e=hP(e)).dtype&&(e=rd(e,"int32")),"u">typeof t.countWeights){if("count"!==this.outputMode)throw new uR(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=hP(t.countWeights)}let a=iF(e),r=iZ(e),i=i0(this.numTokens,a).bufferSync().get(0),s=i1(r,0).bufferSync().get(0);if(!(i&&s))throw new uR(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,a){let r,i=hP(e);if("int32"!==i.dtype&&(i=rd(i,"int32")),"int"===t)return i;let s=i.shape;if(0===i.rank&&(i=i_(i,-1)),"oneHot"===t&&1!==i.shape[i.shape.length-1]&&(i=i_(i,-1)),i.rank>2)throw new uR(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${i.rank}.`);let o=["multiHot","oneHot"].includes(t),l=i;if(r="u">typeof a&&"count"===t?im(l,a,n,o):im(l,[],n,o),"tfIdf"!==t)return r;if(a)return rg(r,a);throw new uR("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}pU.className="CategoryEncoding",o6(pU);let p_=new Set(["bilinear","nearest"]);class pY extends h2{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(p_.has(e.interpolation))this.interpolation=e.interpolation;else throw new uR(`Invalid interpolation parameter: ${e.interpolation} is not implemented`)}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=hB(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio};return Object.assign(e,super.getConfig()),e}call(e,t){return aP(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return o9.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return o9.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...p_]} are supported`)})}}pY.className="Resizing",o6(pY);class pQ{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}pQ.className="RandomSeed";class pJ extends h2{constructor(e){super(e),this.randomGenerator=new pQ(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed};return Object.assign(e,super.getConfig()),e}}pJ.className="BaseRandomLayer";let pj=new Set(["bilinear","nearest"]);class pq extends pJ{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new uR(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new uR(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new uR(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n){if(pj.has(n))this.interpolation=n;else throw new uR(`Invalid interpolation parameter: ${n} is not implemented`)}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=hB(e))[2];return[this.imgHeight,-1,t]}call(e,t){return aP(()=>{let t=hP(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=sY([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);let r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return o9.resizeBilinear(e,r);case"nearest":return o9.resizeNearestNeighbor(e,r);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...pj]} are supported`)}})}}function p0(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&f("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}pq.className="RandomWidth",o6(pq),B.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(In=Ib||(Ib={}))[In.DT_INVALID=0]="DT_INVALID",In[In.DT_FLOAT=1]="DT_FLOAT",In[In.DT_DOUBLE=2]="DT_DOUBLE",In[In.DT_INT32=3]="DT_INT32",In[In.DT_UINT8=4]="DT_UINT8",In[In.DT_INT16=5]="DT_INT16",In[In.DT_INT8=6]="DT_INT8",In[In.DT_STRING=7]="DT_STRING",In[In.DT_COMPLEX64=8]="DT_COMPLEX64",In[In.DT_INT64=9]="DT_INT64",In[In.DT_BOOL=10]="DT_BOOL",In[In.DT_QINT8=11]="DT_QINT8",In[In.DT_QUINT8=12]="DT_QUINT8",In[In.DT_QINT32=13]="DT_QINT32",In[In.DT_BFLOAT16=14]="DT_BFLOAT16",In[In.DT_QINT16=15]="DT_QINT16",In[In.DT_QUINT16=16]="DT_QUINT16",In[In.DT_UINT16=17]="DT_UINT16",In[In.DT_COMPLEX128=18]="DT_COMPLEX128",In[In.DT_HALF=19]="DT_HALF",In[In.DT_RESOURCE=20]="DT_RESOURCE",In[In.DT_VARIANT=21]="DT_VARIANT",In[In.DT_UINT32=22]="DT_UINT32",In[In.DT_UINT64=23]="DT_UINT64",In[In.DT_FLOAT_REF=101]="DT_FLOAT_REF",In[In.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",In[In.DT_INT32_REF=103]="DT_INT32_REF",In[In.DT_UINT8_REF=104]="DT_UINT8_REF",In[In.DT_INT16_REF=105]="DT_INT16_REF",In[In.DT_INT8_REF=106]="DT_INT8_REF",In[In.DT_STRING_REF=107]="DT_STRING_REF",In[In.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",In[In.DT_INT64_REF=109]="DT_INT64_REF",In[In.DT_BOOL_REF=110]="DT_BOOL_REF",In[In.DT_QINT8_REF=111]="DT_QINT8_REF",In[In.DT_QUINT8_REF=112]="DT_QUINT8_REF",In[In.DT_QINT32_REF=113]="DT_QINT32_REF",In[In.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",In[In.DT_QINT16_REF=115]="DT_QINT16_REF",In[In.DT_QUINT16_REF=116]="DT_QUINT16_REF",In[In.DT_UINT16_REF=117]="DT_UINT16_REF",In[In.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",In[In.DT_HALF_REF=119]="DT_HALF_REF",In[In.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",In[In.DT_VARIANT_REF=121]="DT_VARIANT_REF",In[In.DT_UINT32_REF=122]="DT_UINT32_REF",In[In.DT_UINT64_REF=123]="DT_UINT64_REF",(Ir=(Ia=Iy||(Iy={})).CheckpointFormatVersion||(Ia.CheckpointFormatVersion={}))[Ir.LEGACY=0]="LEGACY",Ir[Ir.V1=1]="V1",Ir[Ir.V2=2]="V2",(Ii=Ix||(Ix={}))[Ii.FAIL=0]="FAIL",Ii[Ii.SHORTEST=1]="SHORTEST",Ii[Ii.LONGEST=2]="LONGEST";class p1 extends u{nextDataId(){return p1.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new l(this,aG)}write(e,t,n){this.firstUse&&(this.firstUse=!1,B.get("IS_NODE")&&ny(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&R(n[0])){let r=n.map(e=>aa(e));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?lO(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>ar(e));return rh(e.shape,e.dtype,n)}catch{throw Error("Failed to decode encoded string bytes into utf-8")}return rh(e.shape,e.dtype,t)}makeOutput(e,t,n){return aG.makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=an();return e(),{kernelMs:an()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){p0([e],"where");let t=this.readSync(e.dataId);return oS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function p2(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function p3(e){return(t,n,a,r,i)=>{let s=iv(t,n),o=s.length,l=E(s),u=C(i,b(s)),h=t.length,d=n.length,c=E(t),p=E(n),f=ix(t,s),m=ix(n,s);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<u.length;++t){let n=K(t,o,l),i=n.slice(-h);f.forEach(e=>i[e]=0);let s=Z(i,h,c),g=n.slice(-d);m.forEach(e=>g[e]=0);let b=Z(g,d,p);u[t]=e(a[s],r[b])}return[u,s]}}function p9(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",s)},o}function p5(e,t,n="float32"){if("complex64"===n)return p9({inputs:{real:p5(e,t,"float32"),imag:p5(e,t,"float32")},backend:e});let a=X(b(t),n);return e.makeTensorInfo(t,n,a)}function p4(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function p7(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}function p8(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){let a=at([0],n),[r,i]=p3((e,t)=>e!==t?1:0)(t,[],e,a,"bool");return[i,"bool",r]}throw Error(`Error in Cast: failed to cast ${n} to ${a}`)}function p6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:i}=a;if("complex64"===i){if("complex64"===r.dtype)return p4({inputs:{x:r},backend:n});let e=p5(n,r.shape,r.dtype),t=p6({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=p9({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=p7({inputs:{input:r},backend:n}),t=p6({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!T(r.dtype,i)){let e=p4({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}let[s,o,l]=p8(n.data.get(r.dataId).values,r.shape,r.dtype,i);return n.makeTensorInfo(s,o,l)}function fe(e,t,n,a){return null==n?({inputs:n,backend:r})=>{let{a:i,b:s}=n;p0([i,s],e);let o=r.data.get(i.dataId).values,l=r.data.get(s.dataId).values,u="string"===i.dtype?ul(o):o,h="string"===i.dtype?ul(l):l,d=a||i.dtype,[c,p]=t(i.shape,s.shape,u,h,d);return r.makeTensorInfo(p,d,c)}:({inputs:e,backend:r})=>{let{a:i,b:s}=e;if("complex64"===i.dtype||"complex64"===s.dtype){let e=p6({inputs:{x:i},backend:r,attrs:{dtype:"complex64"}}),t=r.data.get(e.dataId),a=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=r.data.get(a.dataId).values,u=r.data.get(o.dataId).values,h=p6({inputs:{x:s},backend:r,attrs:{dtype:"complex64"}}),d=r.data.get(h.dataId),c=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=r.data.get(c.dataId).values,m=r.data.get(p.dataId).values,[g,b,y]=n(i.shape,s.shape,l,u,f,m),x=r.makeTensorInfo(y,"float32",g),k=r.makeTensorInfo(y,"float32",b),v=p9({inputs:{real:x,imag:k},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(k),v}{let e=r.data.get(i.dataId).values,n=r.data.get(s.dataId).values,o=a||i.dtype,[l,u]=t(i.shape,s.shape,e,n,o);return r.makeTensorInfo(u,o,l)}}}function ft(e){return(t,n,a,r,i,s)=>{let o=iv(t,n),l=b(o),u=o.length,h=E(o),d=C("float32",l),c=C("float32",l),p=ix(t,o),f=ix(n,o),m=lO(a,r),g=lO(i,s),y=t.length,x=E(t),k=n.length,v=E(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){let n=t%m.length,a=t%g.length,r=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);d[t]=r.real,c[t]=r.imag}else for(let t=0;t<d.length;t++){let n=K(t,u,h),a=n.slice(-y);p.forEach(e=>a[e]=0);let r=Z(a,y,x),i=n.slice(-k);f.forEach(e=>i[e]=0);let s=Z(i,k,v),o=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);d[t]=o.real,c[t]=o.imag}return[d,c,o]}}p1.nextDataId=0;let fn=p3((e,t)=>e+t),fa=fe("Add",fn,ft((e,t,n,a)=>({real:e+n,imag:t+a})));function fr(e,t,n,a,r){let i=b(a),s=X(r,n);for(let n=0;n<e.length;n++){let a=e[n];if(a<0)throw Error("Input x must be non-negative!");a>=r||(i>0?s[a]+=t[n]:s[a]+=1)}return s}function fi(e,t,n,a=!1){let r=e.shape[0],i=e.shape[1],s=rh([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){let i=e.get(o,r);if(i<0)throw Error("Input x must be non-negative!");i>=n||(a?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,r),o,i):s.set(s.get(o,i)+1,o,i))}return s}let fs=p3((e,t)=>e&t),fo=fe(ed,fs);function fl(e){return(t,n,a)=>{let r=C(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}function fu(e,t,n){return fh(e,fl(t),n)}function fh(e,t,n){return({inputs:a,attrs:r,backend:i})=>{let s;let{x:o}=a;p0(o,e);let l=i.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(l))throw Error("String tensor's value was not an instance of Array");s=ul(l)}else s=l;let u=n||o.dtype,h=t(s,u,r);return i.makeTensorInfo(o.shape,u,h)}}let fd=fl(e=>Math.ceil(e)),fc=fh(ef,fd);function fp(e,t,n,a){let r=C(n,b(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{let n=b(e.shape);r.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{let i="string"===n?ul(e.vals):e.vals,s=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=i[s++]}a+=e.shape[1]})}return r}let ff=p3((e,t)=>e===t?1:0),fm=fe(eD,ff,null,"bool"),fg=fl(e=>Math.exp(e)),fb=fh("Exp",fg,"float32"),fy=fl(e=>Math.expm1(e)),fx=fh(eA,fy),fk=fl(e=>Math.floor(e)),fv=fh(eH,fk),fI=p3((e,t)=>Math.floor(e/t)),fw=fe(eU,fI,null,"int32");function fS(e,t,n,a,r,i,s,o,l){let u=rh([a,i],n);for(let n=0;n<a;n++){let a=[],h=0;for(let t=0;t<r;t++){let i=e[n*r+t];h+=i*s[t],a.push(i)}if(h<0||h>=l/i)throw Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<i;e++)u.values[n*i+e]=t.get(...t.indexToLoc(h*i+e))}return u}function fC(e,t,n){let a=rh(n,e.dtype);for(let n=0;n<a.size;++n){let r=a.indexToLoc(n).slice(),i=r[0],s=r[2],o=t.locToIndex([i,s]);r[2]=t.values[o];let l=e.locToIndex(r);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}let fT=p3((e,t)=>e>t?1:0),fN=fe(eJ,fT,null,"bool"),fR=p3((e,t)=>e>=t?1:0),fG=fe(ej,fR,null,"bool"),fW=p3((e,t)=>e<t?1:0),fL=fe(e4,fW,null,"bool"),fM=p3((e,t)=>e<=t?1:0),fE=fe(e7,fM,null,"bool");function fz(e,t,n){let a=(t-e)/(n-1),r=X(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}let fV=fl(e=>Math.log(e)),fX=fh("Log",fV);function f$(e,t,n,a){let r=C(a,b(n));for(let n=0;n<r.length;++n){let a=n*t,i=e[a];for(let n=0;n<t;++n){let t=e[a+n];(Number.isNaN(t)||t>i)&&(i=t)}r[n]=i}return r}let fF=p3((e,t)=>Math.max(e,t)),fZ=fe(tr,fF),fK=p3((e,t)=>Math.min(e,t)),fD=fe(td,fK),fO=p3((e,t)=>e*t),fA=fe(tf,fO,ft((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})));function fP(e,t,n){return fO([],t,ae(-1,n),e,n)}let fB=p3((e,t)=>e!==t?1:0),fH=fe(tm,fB,null,"bool");function fU(e,t,n,a,r){let i=t.length,s=b(t),o=E(t),l=E(r),u=C(n,b(r));for(let t=0;t<s;++t){let n=K(t,i,o),r=Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];u[Z(r,i,l)]=e[t]}return u}function f_(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:i}=n;p0(r,"transpose");let s=Array(r.shape.length);for(let e=0;e<s.length;e++)s[e]=r.shape[i[e]];let o=fU(a.data.get(r.dataId).values,r.shape,r.dtype,i,s);return{dataId:a.write(o,s,r.dtype),shape:s,dtype:r.dtype}}function fY(e,t,n,a){let[r,i]=iM(e,a),s=ax(t,"int32"),o=X(b(r),s),l=b(i);for(let e=0;e<o.length;++e){let t=e*l,a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:s}}function fQ(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function fJ(e,t,n,a,r,i,s,o){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,a)=>{if(e<0||e>=n){let r=K(a,t.length,E(t)).join(",");throw Error(`indices[${r}] = ${e} is not in [0, ${n})`)}})}(i,s,t[0][0]-1),0===a.length)throw Error("params.rank must be nonzero");let{outSplits:l,valueSlices:u,numValues:h}=function(e,t,n,a){let r=[],i=0,s=Array(t.length-1+n.length).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){let a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw Error("Ragged splits may not be empty");if(a[0]<0)throw Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw Error("Ragged splits must be sorted in ascending order")}}(n,a);let o=1;for(let e=0;e<t.length-1;++e){o*=t[e];let n=t[e+1];for(let t=1;t<o+1;++t)s[e].push(t*n)}for(let a=0;a<e.length;++a){let o=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){let a=n[e],r=e+t.length-1;if(r>=0){let e=s[r],t=e[e.length-1]-a[o];for(let e=o;e<l;++e)s[r].push(a[e+1]+t)}o=a[o],l=a[l]}l!==o&&(r.push([o,l]),i+=l-o)}return{outSplits:s,valueSlices:r,numValues:i}}(i,s,e,a[0]),d=function(e){let t=[];for(let n=0;n<e.length;++n){let a=C("int32",e[n].length);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}(l),c=function(e,t,n,a,r){let i=t.slice();i[0]=r;let s=C(n,b(i)),o=e.length,l=0===o?0:o/t[0];return function(e,t,n,a,r,i){let s=fQ(t,2)[1],o=fQ(i,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)r[l*o+t]=e[n*s+t];++l}}(e,t,a,l,s,i),[s,i]}(n,a,r,u,h);return[d,c[0],c[1]]}function fj(e,t,n,a,r,i,s){if(t.length>1)throw Error("starts must be a scalar or vector");if(r.length>1)throw Error("limits must be a scalar or vector");if(s.length>1)throw Error("deltas must be a scalar or vector");let o=0===t.length,l=0===r.length,u=0===s.length,h=[];o||h.push(t[0]),l||h.push(r[0]),u||h.push(s[0]);for(let e=1;e<h.length;++e)if(h[e]!==h[e-1])throw Error("starts, limits, and deltas must have the same shape");let d=0===h.length?1:h[0],c=C("int32",d+1);c[0]=0;for(let t=0;t<d;++t){let n;let r=o?e[0]:e[t],s=l?a[0]:a[t],h=u?i[0]:i[t];if(0===h)throw Error("Requires delta != 0");if(h>0&&s<r||h<0&&s>r)n=0;else if((n=Math.ceil(Math.abs((s-r)/h)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");c[t+1]=c[t]+n}let p=C(n,c[d]),f=0;for(let t=0;t<d;++t){let n=c[t+1]-c[t],a=o?e[0]:e[t],r=u?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=a,a+=r}return[c,p]}var fq=Im;class f0{constructor(e,t,n,a,r,i,s,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=lM(u),this.raggedRank=lE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===fq.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===fq.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case fq.VALUE_ROWIDS:return f0.getMaxWidthValueRowID(t);case fq.ROW_SPLITS:return f0.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${fq[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let i=1;i<t;++i){let t=e[i];t!==a&&(a=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return f2(e,n)}calculateOutputSize(e){let t=this.valuesShape;lz(this.defaultValueShape,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=lL(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){let a=Math.min(e,n),r=[],i=0;for(let e=0;e<a;++e,i+=t)r.push(i);for(let t=a;t<e;++t)r.push(-1);return f(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,n,a){let r=e.length,i=[];for(let s=0;s<r-1;++s){let r=e[s+1]-e[s],o=Math.min(a,r),l=t[s];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,a){let r=e.length,i=[];if(0===r)return[];let s=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){let r=e[u];if(r===o)l>=0&&(++s<a?l+=n:l=-1);else{if(s=0,o=r,r>=t.length)throw Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,a){let r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case fq.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case fq.ROW_SPLITS:if(r.length-1>t.length)throw Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw Error(`Unsupported partition type: ${fq[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case fq.FIRST_DIM_SIZE:return e[0];case fq.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case fq.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${fq[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let a=f2(t,!1),r=C(this.valuesDType,b(a));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;let r=this.values,i=a.slice(),s=b(i=i.slice(e+1)),o=t.length,l=this.defaultValue;if(l.length!==s&&1!==l.length){let e=this.defaultValueShape;aP(()=>{l=r9(rP(l,e),i).dataSync()})}let u=0,h=0,d=0;for(let e=0;e<=o;++e){let a=e<o?t[e]:-1;if(a===d){++d;continue}if(h<d){let e=r.subarray(u*s);f1(n.subarray(h*s),e,(d-h)*s)}if(e>=o&&(a=Math.floor(n.length/s)),a>d){if(1===this.defaultValue.length)n.subarray(d*s,a*s).fill(this.defaultValue[0]),d=a;else for(;a>d;)f1(n.slice(d*s),l,s),++d}a<0?(u=e+1,h=d):(u=e,d=(h=d)+1)}}}function f1(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function f2(e,t){let n=[];for(let a of e){if(a<0){if(!t)throw Error(`Dimension ${a} must be >= 0`);if(a<-1)throw Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function f3(e,t,n,a,r,i,s,o,l,u){return new f0(e,t,n,a,r,i,s,o,l,u).compute()}function f9(e,t,n,a){let r=e===t,i=e<t&&n<0,s=t<e&&n>1;if(r||i||s)return X(0,a);let o=X(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}let f5=fl(e=>1/Math.sqrt(e)),f4=fh(tK,f5);function f7(e,t,n,a,r,i,s,o,l,u){let h=e.values,d=t.values;if(0===a)return rh(n,t.dtype);let c=l instanceof ac?l:rh([a/r,r],t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<i;e++){let i=[],l=0;for(let t=0;t<s;t++){let n=h[e*s+t];i.push(n),l+=n*o[t]}if(l<0||l>=a/r)throw Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?c.values[l*r+n]+=d[e*r+n]:c.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return c}let f8=fl(e=>1/(1+Math.exp(-e))),f6=fu(tY,e=>1/(1+Math.exp(-e)));function me(e,t,n,a,r){let i=lk(a,t,n),s=b(n),o=E(a);if(i){let n=lv(t,o);return"string"===r?e.slice(n,n+s):e.subarray(n,n+s)}let l="string"===r?ul(e):e,u=rh(a,r,l),h=rh(n,r);for(let e=0;e<h.size;++e){let n=h.indexToLoc(e),a=n.map((e,n)=>e+t[n]);h.set(u.get(...a),...n)}return"string"===r?uu(h.values):h.values}function mt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a;p0(r,"slice");let[o,l]=lI(r,i,s);ld(r,o,l);let u=me(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}function mn(e,t,n,a,r,i,s){let o=t[0],l=i[0],u=Array(l),h=Array(o),d=t[1];if(0===l){if(0!==o)throw Error(l3(o));return[C(n,0),[0,d],C(r,0),u,h]}let c=!0,p=0,f=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d];if(n<0)throw Error(l9(t,n));if(n>=l)throw Error(l5(t,n,l));++f[n],c=c&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&c){for(let e=0;e<o;++e)h[e]=e;return[e,[o,d],a,u,h]}{let t=f[l-1],i=C(n,t*d),c=C(r,t),p=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d],r=p[n],s=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<d;++n)i[s*d+n]=e[t*d+n];c[s]=a[t],h[t]=s}for(let e=0;e<l;++e)if(0===p[e]){let t=0===e?0:f[e-1];i[t*d+0]=e;for(let e=1;e<d;++e)i[t*d+e]=0;c[t]=s}return[i,[t,d],c,u,h]}}function ma(e,t,n,a,r){let i=b(a),s=t[0],o=r.length,l=[],u=1,h=-1;for(let e=0;e<o;++e){let t=r[e];if(-1===t){if(-1!==h)throw Error(l4(h,e));h=e,l.push(1)}else{if(t<0)throw Error(l7(e,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw Error(l8());let e=Math.trunc(i/u);if(u*e!==i)throw Error(l6(a,l));l[h]=e}if(b(l)!==i)throw Error(ue(a,l));let d=a.length,c=[];if(d>0){c[d-1]=1;for(let e=d-2;e>=0;--e)c[e]=c[e+1]*a[e+1]}let p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}let f=C(n,s*o);for(let t=0;t<s;++t){let n=0;for(let a=0;a<d;++a)n+=e[t*d+a]*c[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[s,o],l]}function mr(e,t,n,a,r,i=!1,s=0){let o=a.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?r[o-1]+1:0;if(h<0)throw Error(ut());let d=t.slice();d[0]=h;let c=C(n,d.reduce((e,t)=>e*t,1));if(0===o)return h>0&&c.fill(s),[c,d];if(h<=0)throw Error(ut());let p=0,f=1,m=0,g=r[0];for(;;){let t=0;if(f<o){if(g===(t=r[f])){++f;continue}if(g>=t)throw Error(un())}if(g<0||g>=h)throw Error(ua(g,h));g>m&&c.fill(s,m*u,g*u);for(let t=p;t<f;++t){let n=a[t];if(n<0||n>=l[0])throw Error(ur(t,a[t],l[0]));for(let t=0;t<u;t++)c[g*u+t]+=e[n*u+t]}if(i)for(let e=0;e<u;e++)c[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<h&&c.fill(s,m*u,h*u),[c,d]}let mi=fl(e=>Math.sqrt(e)),ms=fu(tJ,e=>Math.sqrt(e)),mo=p3((e,t)=>{let n=e-t;return n*n}),ml=fe(t4,mo),mu=fl((e,t)=>{let{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)}),mh=fh(t8,mu);function md(e,t,n,a){let r=rh(e,t.dtype);for(let e=0;e<r.size;e++){let i=r.indexToLoc(e),s=Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+a[e];r.set(t.get(...s),...i)}return r}class mc{constructor(e,t,n,a,r,i){this.separator=aa(e),this.nGramWidths=t,this.leftPad=aa(n),this.rightPad=aa(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,n,a,r,i){for(let s=0;s<r;++s){let o;let l=this.getPadWidth(i),u=Math.max(0,l-s),h=Math.max(0,l-(r-(s+1))),d=i-(u+h),c=t+(u>0?0:s-l);o=0+u*this.leftPad.length;for(let t=0;t<d;++t)o+=e[c+t].length;o+=h*this.rightPad.length,o+=(u+h+d-1)*this.separator.length,n[a+s]=new Uint8Array(o);let p=n[a+s],f=0,m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[c+t]),m(this.separator);if(d>0){m(e[c+d-1]);for(let e=0;e<h;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<h-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(!(a=a&&t[r]<=n))throw Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let r=a-1,i=C("int32",a);if(0===n||0===a){let e=Array(n);for(let e=0;e<=r;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=r;++e){let n=t[e]-t[e-1],a=0;this.nGramWidths.forEach(e=>{a+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===a&&(a=1),i[e]=i[e-1]+a}let s=Array(i[r]);for(let n=0;n<r;++n){let a=t[n],r=i[n];if(this.nGramWidths.forEach(i=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,i);this.createNGrams(e,a,s,r,l,i),r+=l}),this.preserveShort&&r===i[n]){let i=t[n+1]-t[n];if(0===i)continue;let o=i+2*this.padWidth;this.createNGrams(e,a,s,r,1,o)}}return[s,i]}}function mp(e,t,n,a,r,i,s,o){return new mc(n,a,r,i,s,o).compute(e,t)}function mf(e,t,n){let a=e.length,r=[],i=0,s=0,o=Array(a);for(let l=0;l<a;++l){let a=r.length;!function(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],i=e.indexOf(r);for(;-1!==i;){let t=e.subarray(0,i);n&&0===t.length||a.push(t),i=(e=e.subarray(i+1)).indexOf(r)}n&&0===e.length||a.push(e);return}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){let t=e.subarray(r,i);n&&0===t.length||a.push(t),r=i+1}}(e[l],t,n,r);let u=r.length-a;o[l]=u,i+=u,s=Math.max(s,u)}let l=C("int32",2*i),u=Array(i),h=[a,s],d=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*d]=e,l[2*d+1]=t,u[d]=r[d],++d;return[l,u,h]}function mm(e,t){let n=C("int32",e.length);for(let a=0;a<e.length;++a)n[a]=(function(e,t=e.length){let n=nq.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=n3.add(2*t),a=n4(e,0).add(n3),r=n4(e,t-8);return n8(n7(r,37).mul(n).add(a),n7(a,25).add(r).mul(n),n)}if(t>=4){let n=n3.add(2*t);return n8(n5(e,0,4).shl(3).add(t),n5(e,t-4,4),n)}if(t>0){let n=e[0],a=e[t>>1],r=e[t-1];return n9(n3.mul(n+(a<<8)).xor(n1.mul(t+(r<<2)))).mul(n3)}return n3}(e,t):function(e,t=e.length){let n=n3.add(2*t),a=n4(e,0).mul(n2),r=n4(e,8),i=n4(e,t-8).mul(n),s=n4(e,t-16).mul(n3);return n8(n7(a.add(r),43).add(n7(i,30)).add(s),a.add(n7(r.add(n3),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=n3.add(2*t),a=n4(e,0).mul(n3),r=n4(e,8),i=n4(e,t-8).mul(n),s=n4(e,t-16).mul(n3),o=n7(a.add(r),43).add(n7(i,30)).add(s),l=n8(o,a.add(n7(r.add(n3),18)).add(i),n),u=n4(e,16).mul(n),h=n4(e,24),d=o.add(n4(e,t-32)).mul(n),c=l.add(n4(e,t-24)).mul(n);return n8(n7(u.add(h),43).add(n7(d,30)).add(c),u.add(n7(h.add(a),18)).add(d),n)}(e,t);let a=n,r=n.mul(n2).add(113),i=n9(r.mul(n3).add(113)).mul(n3),s=[nq.UZERO,nq.UZERO],o=[nq.UZERO,nq.UZERO];a=a.mul(n3).add(n4(e,0));let l=0,u=(t-1>>6)*64,h=u+(t-1&63)-63;do a=n7(a.add(r).add(s[0]).add(n4(e,l+8)),37).mul(n2),r=n7(r.add(s[1]).add(n4(e,l+48)),42).mul(n2),a=a.xor(o[1]),r=r.add(s[0]).add(n4(e,l+40)),i=n7(i.add(o[0]),33).mul(n2),s=n6(e,l,s[1].mul(n2),a.add(o[0])),o=n6(e,l+32,i.add(o[1]),r.add(n4(e,l+16))),[i,a]=[a,i],l+=64;while(l!==u);let d=n2.add(i.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),a=n7(a.add(r).add(s[0]).add(n4(e,l+8)),37).mul(d),r=n7(r.add(s[1]).add(n4(e,l+48)),42).mul(d),a=a.xor(o[1].mul(9)),r=r.add(s[0].mul(9).add(n4(e,l+40))),i=n7(i.add(o[0]),33).mul(d),s=n6(e,l,s[1].mul(d),a.add(o[0])),o=n6(e,l+32,i.add(o[1]),r.add(n4(e,l+16))),[i,a]=[a,i],n8(n8(s[0],o[0],d).add(n9(r).mul(n1)).add(i),n8(s[1],o[1],d).add(a),d)})(e[a]).modulo(t).getLowBitsUnsigned();return n}let mg=p3((e,t)=>e-t),mb=fe("Sub",mg,ft((e,t,n,a)=>({real:e-n,imag:t-a})));function my(e,t){let n=Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let a=rh(n,e.dtype);for(let t=0;t<a.values.length;++t){let n=a.indexToLoc(t),r=Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];let i=e.locToIndex(r);a.values[t]=e.values[i]}return a}let mx=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function mk(e,t,n,a,r){let i=t[t.length-1],[s,o]=[e.length/i,i],l=C(n,s*a),u=C("int32",s*a);for(let t=0;t<s;t++){let n=t*o,i=e.subarray(n,n+o),s=Array(i.length);i.forEach((e,t)=>s[t]={value:e,index:t}),a<s.length&&(function e(t,n,a=0,r=t.length-1){for(;r>a;){if(r-a>600){let i=r-a+1,s=n-a+1,o=Math.log(i),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(i-l)/i)*Math.sign(s-i/2),h=Math.max(a,Math.floor(n-s*l/i+u)),d=Math.min(r,Math.floor(n+(i-s)*l/i+u));e(t,n,h,d)}let i=t[n],s=a,o=r;for(p(t,a,n),mx(t[r],i)>0&&p(t,a,r);s<o;){for(p(t,s,o),s++,o--;0>mx(t[s],i);)s+=1;for(;mx(t[o],i)>0;)o-=1}0===mx(t[a],i)?p(t,a,o):p(t,o+=1,r),o<=n&&(a=o+1),n<=o&&(r=o-1)}}(s,a),s=s.slice(0,a)),r&&s.sort(mx);let h=t*a,d=l.subarray(h,h+a),c=u.subarray(h,h+a);for(let e=0;e<a;e++)d[e]=s[e].value,c[e]=s[e].index}let h=t.slice();return h[h.length-1]=a,[rh(h,n,l),rh(h,"int32",u)]}function mv(e,t,n,a){let r=w(t,n)[0],i=[1,n[0],1];for(let e=0;e<r;e++)i[0]*=n[e];i[1]=n[r];for(let e=r+1;e<n.length;e++)i[2]*=n[e];let s=new Map,o=new Int32Array(n[r]),l=new ac(i,a,e),u=[],h=1===i[0]&&1===i[2];for(let t=0;t<n[r];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)e.push(l.get(n,t,a));n=e.join(",")}let a=s.get(n);if(null!=a)o[t]=a;else{let e=s.size;s.set(n,e),o[t]=e,u.push(t)}}let d=i.slice();d[1]=s.size;let c=new ac(d,a);u.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)c.set(l.get(n,e,a),n,t,a)});let p=n.slice();return p[r]=d[1],{outputValues:c.values,outputShape:p,indices:o}}let mI=Object.freeze(Object.defineProperty({__proto__:null,addImpl:fn,bincountImpl:fr,bincountReduceImpl:fi,bitwiseAndImpl:fs,castImpl:p8,ceilImpl:fd,concatImpl:fp,equalImpl:ff,expImpl:fg,expm1Impl:fy,floorDivImpl:fI,floorImpl:fk,gatherNdImpl:fS,gatherV2Impl:fC,greaterEqualImpl:fR,greaterImpl:fT,lessEqualImpl:fM,lessImpl:fW,linSpaceImpl:fz,logImpl:fV,maxImpl:f$,maximumImpl:fF,minimumImpl:fK,multiplyImpl:fO,negImpl:fP,notEqualImpl:fB,prodImpl:fY,raggedGatherImpl:fJ,raggedRangeImpl:fj,raggedTensorToTensorImpl:f3,rangeImpl:f9,rsqrtImpl:f5,scatterImpl:f7,sigmoidImpl:f8,simpleAbsImpl:p2,sliceImpl:me,sparseFillEmptyRowsImpl:mn,sparseReshapeImpl:ma,sparseSegmentReductionImpl:mr,sqrtImpl:mi,squaredDifferenceImpl:mo,staticRegexReplaceImpl:mu,stridedSliceImpl:md,stringNGramsImpl:mp,stringSplitImpl:mf,stringToHashBucketFastImpl:mm,subImpl:mg,tileImpl:my,topKImpl:mk,transposeImpl:fU,uniqueImpl:mv},Symbol.toStringTag,{value:"Module"}));aU("cpu",()=>new p1,1);let mw=fu("Elu",e=>e>=0?e:Math.exp(e)-1);function mS(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a;p0([r],"leakyRelu");let s=b(r.shape),o=n.data.get(r.dataId).values,l=C("float32",s);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}let mC=p3((e,t)=>e<0?t*e:e);function mT(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;p0([a,r],"prelu");let i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,[o,l]=mC(a.shape,r.shape,i,s,"float32");return n.makeTensorInfo(l,"float32",o)}let mN=fu(tL,e=>Math.max(0,e)),mR=fu(t$,e=>Math.min(Math.max(0,e),6));function mG(e,t,n,a,r){if("linear"===n)return p4({inputs:{x:t},backend:e});if("relu"===n)return mN({inputs:{x:t},backend:e});if("elu"===n)return mw({inputs:{x:t},backend:e});if("relu6"===n)return mR({inputs:{x:t},backend:e});if("prelu"===n)return mT({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return mS({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return f6({inputs:{x:t},backend:e});throw Error(`Activation ${n} has not been implemented for the CPU backend.`)}function mW(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=b(r.shape),o=I(i,s),l=b(o);f(s===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}function mL(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;p0([r,i],"matMul");let l=r.shape.length,u=i.shape.length,h=s?r.shape[l-2]:r.shape[l-1],d=o?i.shape[u-1]:i.shape[u-2],c=s?r.shape[l-1]:r.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],m=r.shape.slice(0,-2),g=i.shape.slice(0,-2),y=b(m),x=b(g),k=iv(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([c,p]);f(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`);let v=mW({inputs:{x:r},backend:n,attrs:{shape:s?[y,h,c]:[y,c,h]}}),I=mW({inputs:{x:i},backend:n,attrs:{shape:o?[x,p,d]:[x,d,p]}}),w=s?v.shape[1]:v.shape[2],S=s?v.shape[2]:v.shape[1],C=o?I.shape[1]:I.shape[2],T=Math.max(y,x),N=n.data.get(v.dataId).values,R=n.data.get(I.dataId).values,G=E(v.shape),W=E(I.shape),[L,M,z]=s?[G[0],1,G[1]]:[G[0],G[1],1],[V,X,$]=o?[1,W[1],W[0]]:[W[1],1,W[0]],F=S*C,Z=rh([T,S,C],v.dtype),K=Z.values,D=n.blockSize;for(let e=0;e<T;e++){let t=e%y,n=e%x;for(let a=0;a<S;a+=D){let r=Math.min(a+D,S);for(let i=0;i<C;i+=D){let s=Math.min(i+D,C);for(let o=0;o<w;o+=D){let l=Math.min(o+D,w);for(let u=a;u<r;u++)for(let a=i;a<s;a++){let r=0;for(let e=o;e<l;e++)r+=N[t*L+u*M+e*z]*R[e*V+a*X+n*$];K[e*F+(u*C+a)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(k,Z.dtype,Z.values)}let mM=fu(_,e=>Math.acos(e)),mE=fu(Y,e=>Math.acosh(e)),mz=fu(q,e=>Math.asin(e)),mV=fu(ee,e=>Math.asinh(e)),mX=fu(et,e=>Math.atan(e)),m$=fe(ea,p3((e,t)=>Math.atan2(e,t))),mF=fu(en,e=>Math.atanh(e));function mZ(e,t,n,a,r,i){let s=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=rh(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){let n=t*b,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){let k=b*s-c,v=Math.max(0,k),I=Math.min(r.inHeight,h+k),w=n+b*y;for(let n=0;n<r.outWidth;++n){let s=n*o-p,h=Math.max(0,s),c=Math.min(r.inWidth,d+s),b=f,y=0,k=0;for(let n=v;n<I;n+=l){let r=m+n*a[1];for(let n=h;n<c;n+=u){let s=e[r+n*a[2]+t];"max"===i&&s>b?b=s:"avg"===i&&(y+=s,k++)}if(isNaN(b))break}g[w+n*x+t]="avg"===i?y/k:b}}}return m}function mK(e,t,n,a,r=!1,i=!1){let s=rh(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterHeight,c=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=rh(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){let g=n*o-p,b=g;for(;b<0;)b+=u;let y=Math.min(a.inHeight,d+g);for(let o=0;o<a.outWidth;++o){let d=o*l-f,p=d;for(;p<0;)p+=h;let x=Math.min(a.inWidth,c+d),k=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=u){let s=n-g;for(let o=p;o<x;o+=h){let l=o-d,u=m.get(e,n,o,t);u>k&&(k=u,v=r?i?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:s*c+l)}}s.set(v,e,n,o,t)}}return s}function mD(e,t,n,a,r,i){let s=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,h=r.dilationHeight,d=r.dilationWidth,c=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=rh(r.outShape,n),k=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){let n=t*v,x=t*a[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){let C=v*s-m,T=C;for(;T<0;)T+=u;let N=Math.min(r.inDepth,c+C),R=n+v*I;for(let n=0;n<r.outHeight;++n){let s=n*o-g,c=s;for(;c<0;)c+=h;let m=Math.min(r.inHeight,p+s),v=R+n*w;for(let n=0;n<r.outWidth;++n){let s=n*l-b,o=s;for(;o<0;)o+=d;let p=Math.min(r.inWidth,f+s),g=v+n*S,I=y,w=0,C=0;for(let n=T;n<N;n+=u){let r=x+n*a[1];for(let n=c;n<m;n+=h){let s=r+n*a[2];for(let n=o;n<p;n+=d){let r=e[s+n*a[3]+t];if("max"===i&&r>I?I=r:"avg"===i&&(w+=r,C++),isNaN(I))break}if(isNaN(I))break}if(isNaN(I))break}k[g+t]="avg"===i?w/Math.max(C,1):I}}}}return x}let mO=fu(em,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e);function mA(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}function mP(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=w(r,t[0].shape)[0];lG(t.map(e=>e.shape),i);let s=lW(t.map(e=>e.shape),i);if(0===b(s))return n.makeTensorInfo(s,t[0].dtype,[]);let o=t.filter(e=>b(e.shape)>0);if(1===o.length)return p4({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){let e=o.map(e=>p7({inputs:{input:e},backend:n})),t=o.map(e=>mA({inputs:{input:e},backend:n})),a=mP({inputs:e,backend:n,attrs:{axis:i}}),r=mP({inputs:t,backend:n,attrs:{axis:i}}),s=p9({inputs:{real:a,imag:r},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}let l=o.map(e=>{let t=[-1,b(e.shape.slice(i))];return mW({inputs:{x:e},backend:n,attrs:{shape:t}})}),u=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));s=lW(l.map(e=>e.shape),1);let h=1===l[0].shape[0],d=fp(u,s,t[0].dtype,h),c=lW(o.map(e=>e.shape),i),p=n.makeTensorInfo(c,t[0].dtype,d);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}function mB(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=a;p0([r,i],"conv2d");let d=rO(l),c=rM(r.shape,i.shape,s,u,o,h,!1,d),p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,y=c.padInfo.top,x="channelsLast"===c.dataFormat,k=new ac(c.outShape,r.dtype),v=E(r.shape),I=E(i.shape),w=v[0],S=x?v[1]:v[2],C=x?v[2]:1,T=x?1:v[1],N=k.strides[0],R=x?k.strides[1]:k.strides[2],G=x?k.strides[2]:1,W=x?1:k.strides[1],L=n.data.get(r.dataId).values,M=n.data.get(i.dataId).values,z=k.values;for(let e=0;e<c.batchSize;++e){let t=e*w,n=e*N;for(let e=0;e<c.outHeight;++e){let a=n+e*R,r=e*c.strideHeight-y;for(let e=0;e<p;++e){let n=r+e*m;if(n<0||n>=c.inHeight)continue;let i=e*I[0],s=t+n*S;for(let e=0;e<c.outWidth;++e){let t=a+e*G,n=e*c.strideWidth-b;for(let e=0;e<f;++e){let a=n+e*g;if(a<0||a>=c.inWidth)continue;let r=i+e*I[1],o=s+a*C,l=r;for(let e=0;e<c.inChannels;++e){let n=L[o+e*T];for(let e=0;e<c.outChannels;++e)z[t+e*W]+=n*M[l+e];l+=c.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,z)}let mH=fu("Cos",e=>Math.cos(e)),mU=fu(eC,e=>Math.cosh(e));function m_(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=a;p0([r,i],"depthwiseConv2DNative");let h=E(r.shape),d=E(i.shape),c=l;null==c&&(c=[1,1]),f(rK(s,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);let p=rM(r.shape,i.shape,s,c,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=p,k=x.left,v=x.top,I=p.outChannels/p.inChannels,w=new ac(p.outShape,r.dtype),S=n.data.get(r.dataId).values,C=n.data.get(i.dataId).values,T=w.values;for(let e=0;e<p.batchSize;++e){let t=e*h[0],n=e*w.strides[0];for(let e=0;e<p.outHeight;++e){let a=n+e*w.strides[1],r=e*p.strideHeight-v;for(let e=0;e<m;++e){let n=r+e*b;if(n<0||n>=p.inHeight)continue;let i=e*d[0],s=t+n*h[1];for(let e=0;e<p.outWidth;++e){let t=a+e*w.strides[2],n=e*p.strideWidth-k;for(let e=0;e<g;++e){let a=n+e*y;if(a<0||a>=p.inWidth)continue;let r=i+e*d[1],o=s+a*p.inChannels,l=t,u=r;for(let e=0;e<p.inChannels;++e){let t=S[o+e];for(let e=0;e<I;++e)T[l+e]+=t*C[u+e];l+=I,u+=I}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}function mY(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r;p0(i,"sum");let l=(t="bool"===i.dtype?p6({inputs:{x:i},backend:a,attrs:{dtype:"int32"}}):p4({inputs:{x:i},backend:a})).shape.length,u=w(s,t.shape),h=iV(u,l),d=u,c=t;null!=h&&(c=f_({inputs:{x:t},backend:a,attrs:{perm:h}}),d=i$(d.length,l)),iz("sum",d,c.shape.length);let[p,f]=iM(c.shape,d),m=p5(a,p,ax(c.dtype,"int32")),g=b(f),y=a.data.get(m.dataId).values,x=a.data.get(c.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=x[t+e];y[e]=n}if(o){let e=iE(m.shape,u),t=m;m=mW({inputs:{x:m},backend:a,attrs:{shape:e}}),a.disposeIntermediateTensorInfo(t)}return a.disposeIntermediateTensorInfo(t),null!=h&&a.disposeIntermediateTensorInfo(c),m}let mQ=fu("Erf",e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+.3275911*n);return t*(1-((((1.061405429*a+-1.453152027)*a+1.421413741)*a+-.284496736)*a+.254829592)*a*Math.exp(-n*n))});function mJ(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:i}=a,s=r.shape.length,o=r.shape.slice(),l=i;return i<0&&(f(-(s+1)<=i,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+i+1),o.splice(l,0,1),mW({inputs:{x:r},backend:n,attrs:{shape:o}})}let mj=fe(eF,p3((e,t)=>e/t)),mq={kernelName:eF,backendName:"cpu",kernelFunc:mj};function m0(e,t,n){let a=e.shape,r=a[0],i=a[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,l=s.complexTensorInfos.imag,u=[r,i],h=b(u),d=C("float32",h),c=C("float32",h);for(let e=0;e<r;e++){let a=mt({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),r=mt({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=p9({inputs:{real:a,imag:r},backend:n}),{real:u,imag:h}=function(e,t,n){let a=b(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,s=n.data.get(r.complexTensorInfos.imag.dataId).values;if((a&a-1)!=0)return lA(function(e,t,n){let a=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,s=0;for(let a=0;a<t;a++){let o=lY(r*a,t,n),l=lH(e,a);i+=l.real*o.real-l.imag*o.imag,s+=l.real*o.imag+l.imag*o.real}n&&(i/=t,s/=t),lU(a,i,s,r)}return a}(lO(i,s),a,t));{let r=function e(t,n,a,r,i){if(1===a)return{real:t,imag:n};let s=lO(t,n),o=a/2,l=lP(s),u=l.real,h=l.imag,d=[u.length],c=i.makeTensorInfo(d,"float32",u),p=i.makeTensorInfo(d,"float32",h),f=p9({inputs:{real:c,imag:p},backend:i}),m=lB(s),g=m.real,b=m.imag,y=[g.length],x=i.makeTensorInfo(y,"float32",g),k=i.makeTensorInfo(y,"float32",b),v=p9({inputs:{real:x,imag:k},backend:i}),I=e(u,h,o,r,i),w=I.real,S=I.imag,C=[w.length],T=i.makeTensorInfo(C,"float32",w),N=i.makeTensorInfo(C,"float32",S),R=p9({inputs:{real:T,imag:N},backend:i}),G=e(g,b,o,r,i),W=G.real,L=G.imag,M=[W.length],E=i.makeTensorInfo(M,"float32",W),z=i.makeTensorInfo(M,"float32",L),V=p9({inputs:{real:E,imag:z},backend:i}),X=l_(a,r),$=[X.real.length],F=i.makeTensorInfo($,"float32",X.real),Z=i.makeTensorInfo($,"float32",X.imag),K=p9({inputs:{real:F,imag:Z},backend:i}),D=fA({inputs:{a:K,b:V},backend:i}),O=fa({inputs:{a:R,b:D},backend:i}),A=mb({inputs:{a:R,b:D},backend:i}),P=p7({inputs:{input:O},backend:i}),B=p7({inputs:{input:A},backend:i}),H=mA({inputs:{input:O},backend:i}),U=mA({inputs:{input:A},backend:i}),_=mP({inputs:[P,B],backend:i,attrs:{axis:0}}),Y=mP({inputs:[H,U],backend:i,attrs:{axis:0}}),Q=i.data.get(_.dataId).values,J=i.data.get(Y.dataId).values;return i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(k),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(Z),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(_),i.disposeIntermediateTensorInfo(Y),{real:Q,imag:J}}(i,s,a,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",ae(a,"float32")),s=p4({inputs:{x:i},backend:n}),l=mq.kernelFunc({inputs:{a:e,b:i},backend:n}),u=mq.kernelFunc({inputs:{a:t,b:s},backend:n}),h=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:d}}return r}}(s,t,n),p=lO(u,h);for(let t=0;t<i;t++){let n=lH(p,t);d[e*i+t]=n.real,c[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}let p=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",c),m=p9({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function m1(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:i}=n,s=i||W(r),o=C(s,b(a));return function(e,t,n){e.fill(t)}(o,r,0),t.makeTensorInfo(a,s,o)}let m2=fu(e2,e=>Number.isFinite(e)?1:0,"bool"),m3=fu(e3,e=>Math.abs(e)===1/0?1:0,"bool"),m9=fu(e9,e=>Number.isNaN(e)?1:0,"bool"),m5=fu(e6,e=>Math.log1p(e)),m4=fe(te,p3((e,t)=>e&&t),null,"bool"),m7=fu(tt,e=>e?0:1,"bool"),m8=fe(tn,p3((e,t)=>e||t),null,"bool");function m6(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a,o=r.shape,l=o.length,u=w(i,o),h=u,d=iV(h,l),c=n.data.get(r.dataId).values;if(null!=d){let e=Array(l);for(let t=0;t<e.length;t++)e[t]=o[d[t]];c=fU(c,o,r.dtype,d,e),h=i$(h.length,l),o=e}p0(r,"max"),iz("max",h,l);let[p,f]=iM(o,h),m=f$(c,b(f),p,r.dtype),g=n.write(m,p,r.dtype),y=p;return s&&(y=iE(p,u)),{dataId:g,shape:y,dtype:r.dtype}}let ge=fe("Mod",p3((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}));function gt(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=r.shape.length,o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);let l=w([o],r.shape),u=m6({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=iE(u.shape,l),d=mW({inputs:{x:u},backend:n,attrs:{shape:h}}),c=mb({inputs:{a:r,b:d},backend:n}),p=fb({inputs:{x:c},backend:n}),f=mY({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=mW({inputs:{x:f},backend:n,attrs:{shape:h}}),g=mj({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function gn(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==a.dtype)return m1({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}});{let e=p7({inputs:{input:a},backend:n}),t=gn({inputs:{x:e},backend:n}),r=mA({inputs:{input:a},backend:n}),i=gn({inputs:{x:r},backend:n}),s=p9({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}}function ga(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return mJ({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{m(i,e.shape,"All tensors passed to stack must have matching shapes"),f(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=mP({inputs:t.map(e=>{let t=mJ({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}let gr={kernelName:tI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;p0(r,"pad");let o=i.map((e,t)=>e[0]+r.shape[t]+e[1]),l=i.map(e=>e[0]),u=n.data.get(r.dataId).values,h=b(r.shape),d=r.shape.length,c=E(r.shape),p=b(o),f=o.length,m=E(o),g=C(r.dtype,p);0!==s&&g.fill(s);for(let e=0;e<h;e++)g[Z(K(e,d,c).map((e,t)=>e+l[t]),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},gi=fe("Pow",p3((e,t)=>Math.pow(e,t))),gs=fu(tW,e=>1/e),go=fu(tZ,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),gl=fu(tB,e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1)),gu=fu(t_,e=>e<0?-1:e>0?1:0),gh=fu("Sin",e=>Math.sin(e)),gd=fu(tU,e=>Math.sinh(e)),gc=Math.log(11920928955078125e-23)+2,gp=fu(tQ,e=>{let t=Math.exp(e);return e<gc?t:e>-gc?e:Math.log(1+t)}),gf=fu(nc,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),gm=fu("Tan",e=>Math.tan(e)),gg=fu(na,e=>Math.tanh(e));function gb(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0){if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}}else if(n>t-1){if(t<=1)n=0;else{let e=2*t;(n-=e*Math.trunc(n/e))>=t&&(n=e-n-1)}}return d(0,n,t-1)}(e,t);case"wrap":let a;return(a=e)<0?t<=1?a=0:a+=t*(Math.trunc(-a/(t-1))+1):a>t-1&&(t<=1?a=0:a-=t*Math.trunc(a/(t-1))),d(0,a,t-1);case"nearest":return d(0,e,t-1);default:return e}}function gy(e,t,n,a,r,i,s,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[s*a+o*r+l*i+u]:h}for(let e of[{kernelName:nm,backendName:"cpu",kernelFunc:function(e){let t,n,a;let{inputs:r,backend:i,attrs:s}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=r,{transposeA:d,transposeB:c,activation:p,leakyreluAlpha:f}=s,m=[];for(let e of(t=mL({inputs:{a:o,b:l},attrs:{transposeA:d,transposeB:c},backend:i}),u&&(n=fa({inputs:{a:t,b:u},backend:i}),m.push(t),t=n),p&&(a=mG(i,t,p,h,f),m.push(t),t=a),m))i.disposeIntermediateTensorInfo(e);return t}},{kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;p0(t,"abs");let a=new Float32Array(b(t.shape));return a=p2(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},{kernelName:_,backendName:"cpu",kernelFunc:mM},{kernelName:Y,backendName:"cpu",kernelFunc:mE},{kernelName:"Add",backendName:"cpu",kernelFunc:fa},{kernelName:Q,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e;p0(t,"addN");let a=t.map(e=>n.data.get(e.dataId).values),r=rh(t[0].shape,t[0].dtype),i=r.values;for(let e=0;e<t.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}},{kernelName:"All",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;p0(r,"all");let o=w(i,r.shape),l=o,u=iV(l,r.shape.length),h=r;null!=u&&(h=f_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i$(l.length,r.shape.length)),iz("all",l,h.shape.length);let[d,c]=iM(h.shape,l),p=b(c),f=X(b(d),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*p,n=m[t];for(let e=0;e<p;++e){let a=m[t+e];n=n&&a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(d,h.dtype,f);if(s){let e=mW({inputs:{x:g},backend:n,attrs:{shape:iE(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:"Any",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;p0(r,"any");let o=w(i,r.shape),l=o,u=iV(l,r.shape.length),h=r;null!=u&&(h=f_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i$(l.length,r.shape.length)),iz("any",l,h.shape.length);let[d,c]=iM(h.shape,l),p=b(c),f=X(b(d),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*p,n=m[t];for(let e=0;e<p;++e){let a=m[t+e];n=n||a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(d,h.dtype,f);if(s){let e=mW({inputs:{x:g},backend:n,attrs:{shape:iE(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:J,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;p0(r,"argMax");let s=w(i,r.shape),o=iV(s,r.shape.length),l=r,u=[];null!=o&&(u.push(l=f_({inputs:{x:r},backend:n,attrs:{perm:o}})),s=i$(s.length,l.shape.length)),iz("argMax",s=[s[0]],l.shape.length);let[h,d]=iM(l.shape,s),c=X(b(h),"int32"),p=b(d),f=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*p,n=f[t],a=0;for(let e=0;e<p;++e){let r=f[t+e];r>n&&(n=r,a=e)}c[e]=a}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}},{kernelName:j,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;p0(r,"argMin");let s=w(i,r.shape),o=iV(s,r.shape.length),l=r,u=[];null!=o&&(u.push(l=f_({inputs:{x:r},backend:n,attrs:{perm:o}})),s=i$(s.length,l.shape.length)),iz("argMin",s=[s[0]],l.shape.length);let[h,d]=iM(l.shape,s),c=X(b(h),"int32"),p=b(d),f=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*p,n=f[t],a=0;for(let e=0;e<p;++e){let r=f[t+e];r<n&&(n=r,a=e)}c[e]=a}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}},{kernelName:q,backendName:"cpu",kernelFunc:mz},{kernelName:ee,backendName:"cpu",kernelFunc:mV},{kernelName:et,backendName:"cpu",kernelFunc:mX},{kernelName:ea,backendName:"cpu",kernelFunc:m$},{kernelName:en,backendName:"cpu",kernelFunc:mF},{kernelName:er,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n;p0(i,"avgPool");let{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=r;f(rK(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=rW(i.shape,s,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&y(h.inShape,h.outShape))t=p4({inputs:{x:i},backend:a});else{let e=a.data.get(i.dataId).values,n=E(i.shape),r=mZ(e,i.shape,i.dtype,n,h,"avg");t=a.makeTensorInfo(h.outShape,i.dtype,r.values)}return t}},{kernelName:es,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;p0(r,"avgPool3d");let h=rL(r.shape,i,s,1,o,l,u),d=mD(n.data.get(r.dataId).values,r.shape,r.dtype,E(r.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},{kernelName:eo,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;p0([r,i],"avgPool3DGrad");let h=rL(i.shape,s,o,1,l,u),d=h.strideDepth,c=h.strideHeight,p=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,b=h.dilationDepth,y=h.dilationHeight,x=h.dilationWidth,k=h.effectiveFilterDepth,v=h.effectiveFilterHeight,I=h.effectiveFilterWidth,w=k-1-h.padInfo.front,S=I-1-h.padInfo.left,C=v-1-h.padInfo.top,T=rh(i.shape,"float32"),N=1/(f*m*g),R=n.bufferSync(r);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let a=0;a<h.inHeight;++a)for(let r=0;r<h.inWidth;++r){let i=n-w,s=a-C,o=r-S,l=0;for(let n=0;n<k;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outDepth||Math.floor(a)!==a))for(let n=0;n<v;n+=y){let r=(s+n)/c;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<I;n+=x){let i=(o+n)/p;i<0||i>=h.outWidth||Math.floor(i)!==i||(l+=R.get(e,a,r,i,t))}}}T.set(l*N,e,n,a,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},{kernelName:ei,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t;p0([r,i],"avgPoolGrad");let{filterSize:s,strides:o,pad:l}=a,u=rW(i.shape,s,o,1,l),h=u.strideHeight,d=u.strideWidth,c=u.filterHeight,p=u.filterWidth,f=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterHeight,b=u.effectiveFilterWidth,y=b-1-u.padInfo.left,x=g-1-u.padInfo.top,k=rh(i.shape,"float32"),v=1/(c*p),I=n.data.get(r.dataId).values,w=rh(r.shape,"float32",I);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){let r=n-x,i=a-y,s=0;for(let n=0;n<g;n+=f){let a=(r+n)/h;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let n=0;n<b;n+=m){let r=(i+n)/d;r<0||r>=u.outWidth||Math.floor(r)!==r||(s+=w.get(e,a,r,t))}}k.set(s*v,e,n,a,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},{kernelName:el,backendName:"cpu",kernelFunc:mL},{kernelName:e_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:i,offset:s,mean:o,variance:l}=t;f(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),p0([r,o,l,i,s],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);let h=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,c=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),m=s?n.data.get(s.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,y=p.length,x=c.length,k=d.length,v=0,I=0,w=0,S=0;for(let e=0;e<h.length;++e)g[e]=m[v++]+(h[e]-d[I++])*p[w++]/Math.sqrt(c[S++]+u),v>=b&&(v=0),I>=k&&(I=0),w>=y&&(w=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}},{kernelName:eu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;p0([r],"batchToSpaceND");let o=i.reduce((e,t)=>e*t),l=l$(r.shape,i,o),u=lF(l.length,i.length),h=lZ(r.shape,i,o),d=lK(s,i.length),c=lD(h,s,i.length),p=mW({inputs:{x:r},backend:n,attrs:{shape:l}}),f=f_({inputs:{x:p},backend:n,attrs:{perm:u}}),m=mW({inputs:{x:f},backend:n,attrs:{shape:h}}),g=mt({inputs:{x:m},backend:n,attrs:{begin:d,size:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},{kernelName:eh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=fr(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}},{kernelName:ed,backendName:"cpu",kernelFunc:fo},{kernelName:ec,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=iv(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:ep,backendName:"cpu",kernelFunc:p6},{kernelName:ef,backendName:"cpu",kernelFunc:fc},{kernelName:em,backendName:"cpu",kernelFunc:mO},{kernelName:eg,backendName:"cpu",kernelFunc:p9},{kernelName:eb,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(b(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}},{kernelName:ey,backendName:"cpu",kernelFunc:mP},{kernelName:ex,backendName:"cpu",kernelFunc:mB},{kernelName:ek,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=a;p0([r,i],"conv2dBackpropFilter");let d=rO(l),c=rM(r.shape,h,s,1,o,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=c,b="channelsLast"===c.dataFormat,y=new ac(c.filterShape,"float32"),x=c.padInfo.left,k=c.padInfo.top,v=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,w=new ac(r.shape,r.dtype,v),S=new ac(i.shape,i.dtype,I);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(c.outHeight,(c.inHeight+k-e)/p);for(let a=0;a<g;++a){let r=Math.max(0,Math.ceil((x-a)/f)),i=Math.min(c.outWidth,(c.inWidth+x-a)/f);for(let s=0;s<c.inChannels;++s)for(let o=0;o<c.outChannels;++o){let l=0;for(let u=0;u<c.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*p-k;for(let e=r;e<i;++e){let n=a+e*f-x;b?l+=w.get(u,t,n,s)*S.get(u,h,e,o):l+=w.get(u,s,t,n)*S.get(u,o,h,e)}}y.set(l,e,a,s,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},{kernelName:ev,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=a;p0([r,i],"conv2dBackpropInput");let d=E(i.shape),c=E(r.shape),p=rO(u),f=rM(s,i.shape,o,1,l,h,!1,p),m=new ac(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(i.dataId).values,[x,k,v]=d,{batchSize:I,filterHeight:w,filterWidth:S,inChannels:C,inHeight:T,inWidth:N,outChannels:R,outHeight:G,outWidth:W,strideHeight:L,strideWidth:M}=f;p=f.dataFormat;let z=w-1-f.padInfo.top,V=S-1-f.padInfo.left,X="channelsLast"===p,$=m.strides[0],F=X?m.strides[1]:m.strides[2],Z=X?m.strides[2]:1,K=X?1:m.strides[1],D=c[0],O=X?c[1]:c[2],A=X?c[2]:1,P=X?1:c[1];for(let e=0;e<I;++e)for(let t=0;t<C;++t)for(let n=0;n<T;++n){let a=n-z,r=Math.max(0,Math.ceil(a/L)),i=Math.min(G,(w+a)/L);for(let s=0;s<N;++s){let o=s-V,l=Math.max(0,Math.ceil(o/M)),u=Math.min(W,(S+o)/M),h=0;for(let n=r;n<i;++n){let r=n*L-a;for(let a=l;a<u;++a){let i=a*M-o,s=D*e+O*n+A*a,l=x*(w-1-r)+k*(S-1-i)+v*t;for(let e=0;e<R;++e)h+=b[s+P*e]*y[l+e]}}g[$*e+F*n+Z*s+K*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},{kernelName:eI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;p0([r,i],"conv3d");let u=rE(r.shape,i.shape,s,l,o),{filterDepth:h,filterHeight:d,filterWidth:c,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,k=new ac(u.outShape,r.dtype),v=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,w=k.values,S=E(r.shape),C=E(i.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*k.strides[0];for(let e=0;e<u.outDepth;++e){let a=n+e*k.strides[1],r=e*u.strideDepth-b;for(let e=0;e<h;++e){let n=r+e*p;if(n<0||n>=u.inDepth)continue;let i=e*C[0],s=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=a+e*k.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){let a=n+e*f;if(a<0||a>=u.inHeight)continue;let r=i+e*C[1],o=s+a*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,a=e*u.strideWidth-y;for(let e=0;e<c;++e){let t=a+e*m;if(t<0||t>=u.inWidth)continue;let i=r+e*C[2],s=o+t*u.inChannels,l=i;for(let e=0;e<u.inChannels;++e){let t=v[s+e];for(let e=0;e<u.outChannels;++e)w[n+e]+=t*I[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},{kernelName:ew,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a;p0([r,i],"conv3dBackpropFilterV2");let u=E(r.shape),h=E(i.shape),d=rE(r.shape,l,s,1,o),c=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=new ac(d.filterShape,"float32"),x=y.values,[k,v,I,w]=y.strides,S=n.data.get(i.dataId).values,[C,T,N,R]=h,G=n.data.get(r.dataId).values,[W,L,M,z]=u,V=d.padInfo.front,X=d.padInfo.left,$=d.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((V-e)/c)),n=Math.min(d.outDepth,(d.inDepth+V-e)/c),a=e*k;for(let r=0;r<g;++r){let i=Math.max(0,Math.ceil(($-r)/p)),s=Math.min(d.outHeight,(d.inHeight+$-r)/p),o=r*v+a;for(let a=0;a<b;++a){let l=Math.max(0,Math.ceil((X-a)/f)),u=Math.min(d.outWidth,(d.inWidth+X-a)/f),h=a*I+o;for(let o=0;o<d.inChannels;++o){let m=o*w+h;for(let h=0;h<d.outChannels;++h){let g=0;for(let m=0;m<d.batchSize;++m){let d=m*W,b=m*C;for(let m=t;m<n;++m){let t=(e+m*c-V)*L+d,n=m*T+b;for(let e=i;e<s;++e){let i=(r+e*p-$)*M+t,s=e*N+n;for(let e=l;e<u;++e){let t=(a+e*f-X)*z+i,n=e*R+s;g+=G[t+o]*S[n+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},{kernelName:eS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a;p0([r],"conv3dBackpropInputV2");let u=E(r.shape),h=E(i.shape),d=rE(l,i.shape,o,1,s),c=new ac(d.inShape,"float32"),p=c.values,[f,m,g,b]=c.strides,y=n.data.get(r.dataId).values,[x,k,v,I]=u,w=n.data.get(i.dataId).values,[S,C,T,N]=h,{batchSize:R,filterDepth:G,filterHeight:W,filterWidth:L,inChannels:M,inDepth:z,inHeight:V,inWidth:X,outChannels:$,outDepth:F,outHeight:Z,outWidth:K,strideDepth:D,strideHeight:O,strideWidth:A}=d,P=G-1-d.padInfo.front,B=W-1-d.padInfo.top,H=L-1-d.padInfo.left;for(let e=0;e<R;++e)for(let t=0;t<M;++t)for(let n=0;n<z;++n){let a=n-P,r=Math.max(0,Math.ceil(a/D)),i=Math.min(F,(G+a)/D);for(let s=0;s<V;++s){let o=s-B,l=Math.max(0,Math.ceil(o/O)),u=Math.min(Z,(W+o)/O);for(let h=0;h<X;++h){let d=h-H,c=Math.max(0,Math.ceil(d/A)),R=Math.min(K,(L+d)/A),M=0;for(let n=r;n<i;++n){let r=n*D-a;for(let a=l;a<u;++a){let i=a*O-o;for(let s=c;s<R;++s){let o=s*A-d,l=x*e+k*n+v*a+I*s,u=S*(G-1-r)+C*(W-1-i)+T*(L-1-o)+N*t;for(let e=0;e<$;++e)M+=y[l+e]*w[u+e]}}}p[f*e+m*n+g*s+b*h+t]=M}}}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},{kernelName:"Cos",backendName:"cpu",kernelFunc:mH},{kernelName:eC,backendName:"cpu",kernelFunc:mU},{kernelName:eR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[h,d,c,p]=r.shape,f=i.shape[0],[m,g]=o,b=rh([f,m,g,p],"float32"),y=n.data.get(i.dataId).values,x=n.data.get(s.dataId).values,k=n.data.get(r.dataId).values,v=E(r.shape),I=E(b.shape);for(let e=0;e<f;e++){let t=4*e,n=y[t],a=y[t+1],r=y[t+2],i=y[t+3],s=x[e];if(s>=h)continue;let o=m>1?(r-n)*(d-1)/(m-1):0,f=g>1?(i-a)*(c-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(d-1)+t*o:.5*(n+r)*(d-1);if(h<0||h>d-1){for(let n=0;n<g;n++)for(let a=0;a<p;a++){let r=a+n*I[2]+t*I[1]+e*I[0];b.values[r]=u}continue}if("bilinear"===l){let n=Math.floor(h),r=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?a*(c-1)+l*f:.5*(a+i)*(c-1);if(h<0||h>c-1){for(let n=0;n<p;n++){let a=n+l*I[2]+t*I[1]+e*I[0];b.values[a]=u}continue}let d=Math.floor(h),m=Math.ceil(h),y=h-d;for(let a=0;a<p;a++){let i=a+d*v[2]+n*v[1]+s*v[0],u=k[i],h=k[i=a+m*v[2]+n*v[1]+s*v[0]],c=k[i=a+d*v[2]+r*v[1]+s*v[0]],p=k[i=a+m*v[2]+r*v[1]+s*v[0]],f=u+(h-u)*y,g=c+(p-c)*y;i=a+l*I[2]+t*I[1]+e*I[0],b.values[i]=f+(g-f)*o}}}else for(let n=0;n<g;++n){let r=g>1?a*(c-1)+n*f:.5*(a+i)*(c-1);if(r<0||r>c-1){for(let a=0;a<p;a++){let r=a+n*I[2]+t*I[1]+e*I[0];b.values[r]=u}continue}let o=Math.round(r),l=Math.round(h);for(let a=0;a<p;a++){let r=a+o*v[2]+l*v[1]+s*v[0],i=a+n*I[2]+t*I[1]+e*I[0];b.values[i]=k[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:eT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;p0(r,"cumprod");let l=iV([i],r.shape.length),u=r;null!=l&&(u=f_({inputs:{x:r},backend:n,attrs:{perm:l}}));let h=i$(1,r.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let d=ax(u.dtype,"int32"),c=V(b(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)c[n]=s?1:p[n];else{let a=m(e,t-1);c[n]=s?p[a]*c[a]:p[n]*c[a]}}let g=n.makeTensorInfo(u.shape,d,c);if(null!=l){let e=f_({inputs:{x:g},backend:n,attrs:{perm:iX(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:eN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;p0(r,"cumsum");let l=iV([i],r.shape.length),u=r;null!=l&&(u=f_({inputs:{x:r},backend:n,attrs:{perm:l}}));let h=i$(1,r.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let d=ax(u.dtype,"int32"),c=X(b(u.shape),d),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)c[n]=s?0:p[n];else{let a=m(e,t-1);c[n]=s?p[a]+c[a]:p[n]+c[a]}}let g=n.makeTensorInfo(u.shape,d,c);if(null!=l){let e=f_({inputs:{x:g},backend:n,attrs:{perm:iX(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:eG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=fr(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=fi(n.bufferSync(r),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},{kernelName:eW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a;f("NHWC"===s,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`);let o=r.shape[0],l=r.shape[1],u=r.shape[2],h=r.shape[3],d=l*i,c=u*i,p=h/(i*i),m=n.data.get(r.dataId).values,g=new Float32Array(o*d*c*p),b=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){let n=Math.floor(t/i),a=t%i;for(let t=0;t<c;++t){let r=Math.floor(t/i),s=t%i,o=(a*i+s)*p;for(let t=0;t<p;++t){let a=t+o+h*(r+u*(n+l*e));g[b++]=m[a]}}}return n.makeTensorInfo([o,d,c,p],r.dtype,g)}},{kernelName:eL,backendName:"cpu",kernelFunc:m_},{kernelName:eM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=a;p0([r,i],"depthwiseConv2dNativeBackpropFilter");let d=rM(r.shape,h,s,o,l,u,!0),{strideHeight:c,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new ac(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,x=d.outChannels/d.inChannels,k=n.data.get(r.dataId).values,v=new ac(r.shape,r.dtype,k),I=n.data.get(i.dataId).values,w=new ac(i.shape,i.dtype,I);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((y-e)/c)),n=Math.min(d.outHeight,(d.inHeight+y-e)/c);for(let a=0;a<m;++a){let r=Math.max(0,Math.ceil((b-a)/p)),i=Math.min(d.outWidth,(d.inWidth+b-a)/p);for(let s=0;s<d.outChannels;++s){let o=Math.trunc(s/x),l=s%x,u=0;for(let l=0;l<d.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*c-y;for(let e=r;e<i;++e){let n=a+e*p-b;u+=v.get(l,t,n,o)*w.get(l,h,e,s)}}g.set(u,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},{kernelName:eE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=a;p0([r,i],"depthwiseConv2DNativeBackpropInput");let d=E(r.shape),c=E(i.shape),p=rM(h,i.shape,s,o,l,u,!0),f=new ac(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(r.dataId).values,[k,v,I]=d,w=n.data.get(i.dataId).values,[S,C,T]=c,{batchSize:N,filterHeight:R,filterWidth:G,inChannels:W,inHeight:L,inWidth:M,outChannels:z,outHeight:V,outWidth:X,strideHeight:$,strideWidth:F}=p,Z=R-1-p.padInfo.top,K=G-1-p.padInfo.left,D=z/W;for(let e=0;e<N;++e)for(let t=0;t<W;++t)for(let n=0;n<L;++n){let a=n-Z,r=Math.max(0,Math.ceil(a/$)),i=Math.min(V,(R+a)/$);for(let s=0;s<M;++s){let o=s-K,l=Math.max(0,Math.ceil(o/F)),u=Math.min(X,(G+o)/F),h=0;for(let n=r;n<i;++n){let r=n*$-a;for(let a=l;a<u;++a){let i=a*F-o,s=k*e+v*n+I*a,l=S*(R-1-r)+C*(G-1-i)+T*t;for(let e=0;e<D;++e)h+=x[s+(t*D+e)]*w[l+e]}}m[g*e+b*n+y*s+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},{kernelName:ez,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=b(a.shape),i=n.data.get(a.dataId).values,s=rh([r,r],a.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*r+e]=i[e];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,s.dtype,s.values)}},{kernelName:eV,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:i,pad:s,dilations:o}=n,l=t.data.get(a.dataId).values,u=a.shape.length,h=t.data.get(r.dataId).values,d=r.shape.length,{batchSize:c,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:k,strideWidth:v,filterHeight:I,filterWidth:w,dilationHeight:S,dilationWidth:T,outShape:N}=rG(a.shape,r.shape,i,s,"NHWC",o),R=b(N),G=N.length,W=C(a.dtype,R);for(let e=0;e<c;++e)for(let t=0;t<g;++t){let n=t*k-x.top;for(let i=0;i<y;++i){let s=i*v-x.left;for(let o=0;o<m;++o){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){let i=n+t*S;if(i>=0&&i<p)for(let n=0;n<w;++n){let p=s+n*T;if(p>=0&&p<f){let s=Z([e,i,p,o],u,E(a.shape)),f=Z([t,n,o],d,E(r.shape)),m=l[s]+h[f];m>c&&(c=m)}}}W[Z([e,t,i,o],G,E(N))]=c}}}return{dataId:t.write(at(W,a.dtype),N,a.dtype),shape:N,dtype:a.dtype}}},{kernelName:e$,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:i}=e,{strides:s,pad:o,dilations:l}=n,u=z(a.shape,t.data.get(a.dataId).values),h=z(r.shape,t.data.get(r.dataId).values),{batchSize:d,inHeight:c,inWidth:p,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:I,dilationHeight:w,dilationWidth:S,outShape:C}=rG(a.shape,r.shape,s,o,"NHWC",l);f(i.rank===C.length,()=>`Error in ${e$}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);let T=z(C,t.data.get(i.dataId).values),N=$(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-y.top;for(let a=0;a<b;++a){let r=a*k-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){let a=n+t*w;if(a>=0&&a<c)for(let n=0;n<I;++n){let d=r+n*S;if(d>=0&&d<p){let r=u[e][a][d][i]+h[t][n][i];r>s&&(s=r,o=t,l=n)}}}N[o][l][i]+=T[e][t][a][i]}}}return{dataId:t.write(at(N,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:eX,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:i}=e,{strides:s,pad:o,dilations:l}=n,u=z(a.shape,t.data.get(a.dataId).values),h=z(r.shape,t.data.get(r.dataId).values),{batchSize:d,inHeight:c,inWidth:p,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:I,dilationHeight:w,dilationWidth:S,outShape:C}=rG(a.shape,r.shape,s,o,"NHWC",l);f(i.rank===C.length,()=>`Error in ${eX}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);let T=z(C,t.data.get(i.dataId).values),N=$(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-y.top;for(let a=0;a<b;++a){let r=a*k-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){let a=n+t*w;if(a>=0&&a<c)for(let n=0;n<I;++n){let d=r+n*S;if(d>=0&&d<p){let r=u[e][a][d][i]+h[t][n][i];r>s&&(s=r,o=a,l=d)}}}N[e][o][l][i]+=T[e][t][a][i]}}}return{dataId:t.write(at(N,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:i,options:s}=a,{contextOptions:o,imageOptions:l}=s||{},u=(null==l?void 0:l.alpha)||1,h=(null==o?void 0:o.contextType)||"2d";if("2d"!==h)throw Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=i.getContext(h,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw Error(`Could not get the context with ${h} type.`);let[c,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,b=new Uint8ClampedArray(p*c*4);for(let e=0;e<c*p;++e){let t=[0,0,0,255*u];for(let n=0;n<f;n++){let a=m[e*f+n];if("float32"===r.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===f?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[n]=a*g}let n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}i.width=p,i.height=c;let y=new ImageData(b,p,c);return d.putImageData(y,0,0),r}},{kernelName:eZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,{allDims:i,summedDims:s,idDims:o}=lJ(r,t.length);lq(i.length,o,t);let{path:l,steps:u}=l0(s,o),h=u.length,d=null,c=i.length,p=[];for(let e=0;e<h;++e){for(let a of u[e]){let e;let{permutationIndices:r,expandDims:i}=lj(c,o[a]);l1(r)?e=t[a]:(e=f_({inputs:{x:t[a]},backend:n,attrs:{perm:r}}),p.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);y(e.shape,s)||(e=mW({inputs:{x:e},backend:n,attrs:{shape:s}}),p.push(e)),null===d?d=e:(d=fA({inputs:{a:e,b:d},backend:n}),p.push(d))}e<h-1&&(l[e]>=0&&(d=mY({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-c),keepDims:!1}}),p.push(d)),c--)}for(let e of p)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},{kernelName:"Elu",backendName:"cpu",kernelFunc:mw},{kernelName:eK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;p0([a,r],"eluGrad");let i=new Float32Array(b(r.shape)),s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<s.length;++e){let t=s[e];t>=0?i[e]=o[e]:i[e]=o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",i)}},{kernelName:eD,backendName:"cpu",kernelFunc:fm},{kernelName:"Erf",backendName:"cpu",kernelFunc:mQ},{kernelName:"Exp",backendName:"cpu",kernelFunc:fb},{kernelName:eO,backendName:"cpu",kernelFunc:mJ},{kernelName:eA,backendName:"cpu",kernelFunc:fx},{kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=b(a.shape),i=a.shape[a.shape.length-1],s=mW({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=m0(s,!1,n),l=mW({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}},{kernelName:eP,backendName:"cpu",kernelFunc:m1},{kernelName:eB,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=C(a.dtype,b(a.shape)),[i,s,o,l]=a.shape,u=n.data.get(a.dataId).values;for(let e=0;e<i;e++){let t=e*o*s*l;for(let e=0;e<s;e++){let n=o*l*e;for(let e=0;e<o;e++){let a=e*l;for(let i=0;i<l;i++){let s=Math.round(o-e-1),h=t+n+a+i,d=u[h];s>=0&&s<o&&(d=u[t+n+s*l+i]),r[h]=d}}}}return{dataId:n.write(r,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:eH,backendName:"cpu",kernelFunc:fv},{kernelName:eU,backendName:"cpu",kernelFunc:fw},{kernelName:ng,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:f}=a,m=mB({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:c}});if(s){let e=m;if("NCHW"===h&&1===s.shape.length&&1!==s.shape[0]){let e=mW({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=fa({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=fa({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){let e=m;if("NCHW"===h&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){let e=mW({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=mG(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=mG(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},{kernelName:nb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:f}=a,m=m_({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:c}});if(s){let e=m;m=fa({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){let e=m;m=mG(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},{kernelName:eQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=b(a.shape),s=r.shape,o=s[s.length-1],[l,u,h,d]=lh(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);let c=fS(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,h,d,a.shape,i);return n.makeTensorInfo(l,a.dtype,c.values)}},{kernelName:eY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a;p0([r,i],"gatherV2");let l=w(s,r.shape)[0],u=n.data.get(i.dataId).values,h=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];f(t<=h-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`)}let d=o;null==o&&(d=0);let c=b(i.shape),p=uo(r,i,l,d),m=mW({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=mW({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),y=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],x=n.bufferSync(g),k=fC(n.bufferSync(m),x,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,k.dtype,k.values)}},{kernelName:eJ,backendName:"cpu",kernelFunc:fN},{kernelName:ej,backendName:"cpu",kernelFunc:fG},{kernelName:eq,backendName:"cpu",kernelFunc:p4},{kernelName:e0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=b(a.shape),i=a.shape[a.shape.length-1],s=mW({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=m0(s,!0,n),l=mW({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}},{kernelName:e1,backendName:"cpu",kernelFunc:mA},{kernelName:e2,backendName:"cpu",kernelFunc:m2},{kernelName:e3,backendName:"cpu",kernelFunc:m3},{kernelName:e9,backendName:"cpu",kernelFunc:m9},{kernelName:e5,backendName:"cpu",kernelFunc:mS},{kernelName:e4,backendName:"cpu",kernelFunc:fL},{kernelName:e7,backendName:"cpu",kernelFunc:fE},{kernelName:e8,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=fz(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},{kernelName:"Log",backendName:"cpu",kernelFunc:fX},{kernelName:e6,backendName:"cpu",kernelFunc:m5},{kernelName:te,backendName:"cpu",kernelFunc:m4},{kernelName:tt,backendName:"cpu",kernelFunc:m7},{kernelName:tn,backendName:"cpu",kernelFunc:m8},{kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a;p0(r,"LRN");let u=r.shape[3],h=u-1,d=n.data.get(r.dataId).values,c=b(r.shape),p=new Float32Array(c);for(let e=0;e<c;e++){let t=function(e){let t=e%u,n=e-t+Math.max(0,t-i),a=e-t+Math.min(t+i,h),r=0;for(;n<=a;n++){let e=d[n];r+=e*e}return r}(e),n=d[e]*Math.pow(s+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},{kernelName:ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=a;p0(s,"LRNGrad");let d=b(s.shape),c=s.shape[3],p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(d);for(let e=0;e<d;e++){let t=e%c,n=e-t+Math.max(0,t-o),a=e-t+Math.min(c,t+o+1),r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<a;t++){let n=-2*u*h*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-h)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(s.shape,r.dtype,g)}},{kernelName:"Max",backendName:"cpu",kernelFunc:m6},{kernelName:tr,backendName:"cpu",kernelFunc:fZ},{kernelName:ti,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n;p0(i,"maxPool");let{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=r;f(rK(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=rW(i.shape,s,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&y(h.inShape,h.outShape))t=p4({inputs:{x:i},backend:a});else{let e=a.data.get(i.dataId).values,n=E(i.shape),r=mZ(e,i.shape,i.dtype,n,h,"max");t=a.makeTensorInfo(h.outShape,i.dtype,r.values)}return t}},{kernelName:to,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;p0(r,"maxPool3d");let h=rL(r.shape,i,s,1,o,l,u),d=mD(n.data.get(r.dataId).values,r.shape,r.dtype,E(r.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},{kernelName:tl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;p0([r,i],"maxPool3DGrad");let h=rL(i.shape,s,o,1,l,u),d=function(e,t){let n=rh(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,c=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*a-c,x=y;for(;x<0;)x+=s;let k=Math.min(t.inDepth,u+y);for(let a=0;a<t.outHeight;++a){let u=a*r-p,c=u;for(;c<0;)c+=o;let v=Math.min(t.inHeight,h+u);for(let r=0;r<t.outWidth;++r){let p=r*i-f,I=p;for(;I<0;)I+=l;let w=Math.min(t.inWidth,d+p),S=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<k;t+=s){let n=t-y;for(let a=c;a<v;a+=o){let r=a-u;for(let i=I;i<w;i+=l){let s=i-p,o=e.get(m,t,a,i,g);o>=S&&(S=o,C=n*h*d+r*h+s)}}}n.set(C,m,b,a,r,g)}}}return n}(n.bufferSync(i),h),c=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,b=h.dilationWidth,y=h.effectiveFilterDepth,x=h.effectiveFilterHeight,k=h.effectiveFilterWidth,v=y-1-h.padInfo.front,I=k-1-h.padInfo.left,w=x-1-h.padInfo.top,S=rh(i.shape,"float32"),C=n.bufferSync(r);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let a=0;a<h.inHeight;++a)for(let r=0;r<h.inWidth;++r){let i=n-v,s=a-w,o=r-I,l=0;for(let n=0;n<y;n+=m){let a=(i+n)/c;if(!(a<0||a>=h.outDepth||Math.floor(a)!==a))for(let r=0;r<x;r+=g){let i=(s+r)/p;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let s=0;s<k;s+=b){let u=(o+s)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let c=y*x*k-1-d.get(e,a,i,u,t)===n*x*k+r*k+s?1:0;0!==c&&(l+=C.get(e,a,i,u,t)*c)}}}S.set(l,e,n,a,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},{kernelName:ts,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t;p0([i,s],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=a,d=rW(i.shape,o,l,1,u,h),c=n.data.get(i.dataId).values,p=rh(d.outShape,i.dtype,mK(c,i.shape,i.dtype,d).values),f=d.strideHeight,m=d.strideWidth,g=d.dilationHeight,b=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,k=x-1-d.padInfo.left,v=y-1-d.padInfo.top,I=rh(i.shape,"float32"),w=n.data.get(r.dataId).values,S=rh(r.shape,"float32",w);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=n-v,i=a-k,s=0;for(let n=0;n<y;n+=g){let a=(r+n)/f;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let r=0;r<x;r+=b){let o=(i+r)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=y*x-1-p.get(e,a,o,t)===n*x+r?1:0;0!==l&&(s+=S.get(e,a,o,t)*l)}}I.set(s,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},{kernelName:tu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=t;p0(a,"MaxPoolWithArgmax");let l=n.data.get(a.dataId).values,u=rW(a.shape,r,i,[1,1],s),[h,d]=function(e,t,n,a,r){let i=E(t),s=mZ(e,t,n,i,r,"max"),o=mK(e,t,n,r,!0,a);return[s.values,o.values]}(l,a.shape,a.dtype,o,u),c=n.write(h,u.outShape,a.dtype),p=n.write(d,u.outShape,a.dtype);return[{dataId:c,shape:u.outShape,dtype:a.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}},{kernelName:th,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=w(i,r.shape),l=b(iM(r.shape,o)[1]),u=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(h);let d=p6({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(d);let c=mj({inputs:{a:d,b:h},backend:n});u.push(c);let p=mY({inputs:{x:c},backend:n,attrs:{axis:i,keepDims:s}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:"Min",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;p0(r,"min");let o=w(i,r.shape),l=o,u=iV(l,r.shape.length),h=r;null!=u&&(h=f_({inputs:{x:r},backend:n,attrs:{perm:u}}),l=i$(l.length,r.shape.length)),iz("min",l,h.shape.length);let[d,c]=iM(h.shape,l),p=b(c),f=X(b(d),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*p,n=m[t];for(let e=0;e<p;++e){let a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(d,h.dtype,f);if(s){let e=mW({inputs:{x:g},backend:n,attrs:{shape:iE(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:td,backendName:"cpu",kernelFunc:fD},{kernelName:tc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,mode:s}=a;p0(r,"mirrorPad");let o=i.map((e,t)=>e[0]+r.shape[t]+e[1]),l=i.map(e=>e[0]),u=i.map((e,t)=>e[0]+r.shape[t]),h="reflect"===s?0:1,d=n.data.get(r.dataId).values,c=r.shape.length,p=E(r.shape),f=b(o),m=o.length,g=E(o),y=C(r.dtype,f);for(let e=0;e<f;e++){let t=K(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=(u[e]-1)*2-t[e]+h);let n=Z(t=t.map((e,t)=>e-l[t]),c,p);y[e]=d[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},{kernelName:"Mod",backendName:"cpu",kernelFunc:ge},{kernelName:tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a;p0(r,"multinomial");let l=o?r:gt({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],d=n.data.get(l.dataId).values,c=[u,i],p=X(b(c),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];let a=sB.alea(s.toString()),r=e*i;for(let e=0;e<i;++e){let t=a();p[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){p[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(c,"int32",p)}},{kernelName:tf,backendName:"cpu",kernelFunc:fA},{kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;p0(a,"neg");let[r,i]=fP(n.data.get(a.dataId).values,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,r)}},{kernelName:tg,backendName:"cpu",kernelFunc:function(e){var t;let{inputs:n,backend:a,attrs:r}=e,{boxes:i,scores:s}=n,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r;p0(i,"NonMaxSuppression");let{selectedIndices:h}=(t=a.data.get(i.dataId).values,oB(t,a.data.get(s.dataId).values,o,l,u,0));return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}},{kernelName:tb,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;p0(r,"NonMaxSuppressionPadded");let{selectedIndices:h,validOutputs:d}=oP(n.data.get(r.dataId).values,n.data.get(i.dataId).values,s,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},{kernelName:ty,backendName:"cpu",kernelFunc:function(e){var t;let{inputs:n,backend:a,attrs:r}=e,{boxes:i,scores:s}=n,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=r;p0(i,"NonMaxSuppressionWithScore");let{selectedIndices:d,selectedScores:c}=(t=a.data.get(i.dataId).values,oB(t,a.data.get(s.dataId).values,o,l,u,h,!0));return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([c.length],"float32",new Float32Array(c))]}},{kernelName:tm,backendName:"cpu",kernelFunc:fH},{kernelName:tk,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a;p0(r,"oneHot");let u=b(r.shape),h=new Float32Array(u*s);h.fill(l);let d=n.data.get(r.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<s&&(h[e*s+d[e]]=o);return n.makeTensorInfo([...r.shape,s],i,h)}},{kernelName:tx,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==r.dtype)return m1({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}});{let t=p7({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=mA({inputs:{input:r},backend:a}),s=gn({inputs:{x:i},backend:a}),o=p9({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}}},{kernelName:tv,backendName:"cpu",kernelFunc:ga},gr,{kernelName:"Pow",backendName:"cpu",kernelFunc:gi},{kernelName:tw,backendName:"cpu",kernelFunc:mT},{kernelName:tS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;p0(r,"prod");let o=r.shape.length,l=w(i,r.shape),u=iV(l,o),h=l,d=r,c=[];null!=u&&(c.push(d=f_({inputs:{x:r},backend:n,attrs:{perm:u}})),h=i$(h.length,o));let p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=fY(d.shape,d.dtype,p,h),b=m;return s&&(b=iE(m,l)),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(b,g,f)}},{kernelName:tC,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,o=r.map(e=>n.data.get(e.dataId).values),l=r.map(e=>e.shape),u=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,[d,c,p]=fJ(o,l,u,i.shape,i.dtype,h,s.shape),f=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),m=n.makeTensorInfo(p,i.dtype,c);return f.concat([m])}},{kernelName:tT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,h]=fj(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([h.length],a.dtype,h)]}},{kernelName:tN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(s.dataId).values,c=o.map(e=>n.data.get(e.dataId).values),p=o.map(e=>e.shape),[f,m]=f3(u,r.shape,h,i.shape,i.dtype,d,s.shape,c,p,l);return n.makeTensorInfo(f,i.dtype,m)}},{kernelName:tR,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:i,step:s}=n,o=f9(a,r,s,i);return t.makeTensorInfo([o.length],i,o)}},{kernelName:tG,backendName:"cpu",kernelFunc:p7},mq,{kernelName:tW,backendName:"cpu",kernelFunc:gs},{kernelName:tL,backendName:"cpu",kernelFunc:mN},{kernelName:t$,backendName:"cpu",kernelFunc:mR},{kernelName:tM,backendName:"cpu",kernelFunc:mW},{kernelName:tV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;p0(r,"resizeBilinear");let l=E(r.shape),[u,h]=o,[d,c,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(b([d,u,h,f])),y=[i&&u>1?c-1:c,i&&h>1?p-1:p],x=[i&&u>1?u-1:u,i&&h>1?h-1:h],k=0,v=y[0]/x[0],I=y[1]/x[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;let a=Math.max(0,Math.floor(n=s?v*(t+.5)-.5:v*t)),r=n-a,i=Math.min(c-1,Math.ceil(n)),o=e*l[0]+a*l[1],u=e*l[0]+i*l[1];for(let e=0;e<h;e++){let t;let n=Math.max(0,Math.floor(t=s?I*(e+.5)-.5:I*e)),a=t-n,i=Math.min(p-1,Math.ceil(t)),h=o+n*l[2],d=u+n*l[2],c=o+i*l[2],b=u+i*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[d+e],i=m[c+e],s=m[b+e],o=t+(i-t)*a,l=o+(n+(s-n)*a-o)*r;g[k++]=l}}}return n.makeTensorInfo([d,u,h,f],"float32",g)}},{kernelName:tX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;p0([i,r],"resizeBilinearGrad");let o=E(r.shape),[l,u,h,d]=r.shape,[,c,p]=i.shape,f=new Float32Array(l*u*h*d),m=[s&&c>1?u-1:u,s&&p>1?h-1:h],g=[s&&c>1?c-1:c,s&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(i.dataId).values,k=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<c;e++){let n=e*b,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=t+a*o[1],s=t+r*o[1],l=n-a,c=1-l;for(let e=0;e<p;e++){let t=e*y,n=Math.floor(t),a=Math.min(Math.ceil(t),h-1),r=t-n,u=1-r,p=i+n*o[2],m=i+a*o[2],g=s+n*o[2],b=s+a*o[2],v=c*u,I=c*r,w=l*u,S=l*r;for(let e=0;e<d;e++){let t=x[k++];f[p+e]+=t*v,f[m+e]+=t*I,f[g+e]+=t*w,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,d],"float32",f)}},{kernelName:tE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;p0(r,"resizeNearestNeighbor");let l=E(r.shape),[u,h]=o,[d,c,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*u*h*f),b=[i&&u>1?c-1:c,i&&h>1?p-1:p],y=[i&&u>1?u-1:u,i&&h>1?h-1:h],x=b[0]/y[0],k=b[1]/y[1],v=0;for(let e=0;e<d;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=s?x*(e+.5):x*e,a=Math.min(c-1,i?Math.round(n):Math.floor(n));s&&(a=Math.max(0,a));let r=t+a*l[1];for(let e=0;e<h;e++){let t=s?k*(e+.5):k*e,n=Math.min(p-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));let a=r+n*l[2];for(let e=0;e<f;e++){let t=m[a+e];g[v++]=t}}}}return n.makeTensorInfo([d,u,h,f],r.dtype,g)}},{kernelName:tz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;p0([i,r],"resizeNearestNeighborGrad");let o=E(r.shape),l=E(i.shape),[u,h,d,c]=r.shape,[,p,f]=i.shape,m=new Float32Array(u*h*d*c),g=n.data.get(i.dataId).values,b=[s&&p>1?h-1:h,s&&f>1?d-1:d],y=[s&&p>1?p-1:p,s&&f>1?f-1:f],x=b[0]/y[0],k=b[1]/y[1],v=1/x,I=1/k,w=2*Math.ceil(v)+2,S=2*Math.ceil(I)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],a=Math.floor(Math.floor(e*v)-w/2);for(let r=0;r<d;r++){let i=n+r*o[2],u=Math.floor(Math.floor(r*I)-S/2);for(let n=0;n<c;n++){let o=0;for(let i=0;i<w;i++){let c=i+a;if(c<0||c>=p)continue;let m=t+c*l[1],b=c*x;if(e===Math.min(h-1,s?Math.round(b):Math.floor(b)))for(let e=0;e<S;e++){let t=e+u;if(t<0||t>=f)continue;let a=m+t*l[2],i=t*k;r===Math.min(d-1,s?Math.round(i):Math.floor(i))&&(o+=g[a+n])}}m[i+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},{kernelName:tF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a;p0(r,"reverse");let s=r.shape.length,o=w(i,r.shape);if(0===s)return p4({inputs:{x:r},backend:n});let l=new ac(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=r.shape[e]-1-n[e]),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},{kernelName:nf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:i,center:s}=t,o=C(a.dtype,b(a.shape)),[l,u,h,d]=a.shape,[c,p]=lX(s,u,h),f=Math.sin(r),m=Math.cos(r),g=n.data.get(a.dataId).values;for(let e=0;e<l;e++){let t=e*h*u*d;for(let e=0;e<u;e++){let n=h*d*e;for(let a=0;a<h;a++){let r=a*d;for(let s=0;s<d;s++){let b=[l,e,a,s],y=b[2],x=b[1],k=(y-c)*m-(x-p)*f,v=(y-c)*f+(x-p)*m;k=Math.round(k+c),v=Math.round(v+p);let I=i;"number"!=typeof i&&(I=3===s?255:i[s]),k>=0&&k<h&&v>=0&&v<u&&(I=g[t+h*d*v+k*d+s]),o[t+n+r+s]=I}}}}return{dataId:n.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:tZ,backendName:"cpu",kernelFunc:go},{kernelName:tK,backendName:"cpu",kernelFunc:f4},{kernelName:tD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=oy(i,r,s),c=f7(n.bufferSync(r),n.bufferSync(i),s,d,u,l,o,h,0,!0);return n.makeTensorInfo(s,c.dtype,c.values)}},{kernelName:tA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=function(e,t,n,a,r,i){let s=C("int32",n*r);for(let o=0;o<n;++o){let n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)s[l+e]="left"===i?function(e,t){let n=0,a=e.length,r=0;for(;n<a;)e[r=Math.floor((n+a)/2)]<t?n=r+1:a=r;return a}(n,t[e+l]):function(e,t){let n=0,a=e.length,r=0;for(;n<a;)e[r=Math.floor((n+a)/2)]<=t?n=r+1:a=r;return a}(n,t[e+l])}return s}(n.data.get(r.dataId).values,n.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}},{kernelName:tP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t;p0([a,r,i],"select");let s=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,h=ax(r.dtype,i.dtype),d=X(b(r.shape),h),c=0,p=0===s||s>1||1===r.shape.length?1:b(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[c++]=l[e]:d[c++]=u[e];return n.makeTensorInfo(r.shape,h,d)}},{kernelName:tB,backendName:"cpu",kernelFunc:gl},{kernelName:tY,backendName:"cpu",kernelFunc:f6},{kernelName:t_,backendName:"cpu",kernelFunc:gu},{kernelName:"Sin",backendName:"cpu",kernelFunc:gh},{kernelName:tU,backendName:"cpu",kernelFunc:gd},{kernelName:tH,backendName:"cpu",kernelFunc:mt},{kernelName:t0,backendName:"cpu",kernelFunc:gt},{kernelName:tQ,backendName:"cpu",kernelFunc:gp},{kernelName:tj,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;p0([r],"spaceToBatchND");let o=b(i),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=gr.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=l$(u.shape,i,o,!1),d=lF(h.length,i.length,!1),c=lZ(u.shape,i,o,!1),p=mW({inputs:{x:u},backend:n,attrs:{shape:h}}),f=f_({inputs:{x:p},backend:n,attrs:{perm:d}}),m=mW({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},{kernelName:t1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(2!==a.shape.length)throw Error(`Indices must be a matrix, saw:
        ${a.shape}`);if(1!==r.shape.length)throw Error(`Values must be a vector, saw:
        ${r.shape}`);if(0!==s.shape.length)throw Error(`Default value must be a scalar, saw:
        ${s.shape}`);let o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values[0],[d,c,p,f,m]=mn(o,a.shape,a.dtype,l,r.dtype,u,h);return[n.makeTensorInfo(c,a.dtype,d),n.makeTensorInfo([c[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},{kernelName:t2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${a.shape}`);if(1!==r.shape.length)throw Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(1!==i.shape.length)throw Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,h,d]=ma(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(h,a.dtype,u),n.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}},{kernelName:t3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
          ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,h]=mr(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(h,a.dtype,u)}},{kernelName:t9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
         ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,h]=mr(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(h,a.dtype,u)}},{kernelName:t5,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:o}=n,{outputShape:l}=r,{sliceRank:u,numUpdates:h,sliceSize:d,strides:c,outputSize:p}=oy(s,i,l),f=a.bufferSync(i);switch(s.dtype){case"bool":t=f7(f,a.bufferSync(s),l,p,d,h,u,c,!!a.data.get(o.dataId).values[0],!1);break;case"float32":case"int32":t=f7(f,a.bufferSync(s),l,p,d,h,u,c,a.data.get(o.dataId).values[0],!1);break;case"string":t=f7(f,a.bufferSync(s),l,p,d,h,u,c,ar(a.data.get(o.dataId).values[0]),!1);break;default:throw Error(`Unsupported type ${s.dtype}`)}return a.makeTensorInfo(l,t.dtype,t.values)}},{kernelName:tq,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=w(s,r.shape)[0],l=l2(r,i,o),u=Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let a=mt({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a})}},{kernelName:tJ,backendName:"cpu",kernelFunc:ms},{kernelName:t7,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e;p0(n,"square");let a=t.data.get(n.dataId).values,r=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];r[e]=t*t}return{dataId:t.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:t4,backendName:"cpu",kernelFunc:ml},{kernelName:t8,backendName:"cpu",kernelFunc:mh},{kernelName:nc,backendName:"cpu",kernelFunc:gf},{kernelName:t6,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=r;p0(i,"stridedSlice");let{finalShapeSparse:m,finalShape:g,isIdentity:b,sliceDim0:y,isSimpleSlice:x,begin:k,end:v,strides:I}=lw(i.shape,s,o,l,u,h,d,c,p);if(b)t=mW({inputs:{x:i},backend:a,attrs:{shape:g}});else if(y||x){f(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=lc(k,v,I),n=mt({inputs:{x:i},backend:a,attrs:{begin:k,size:e}});t=mW({inputs:{x:n},backend:a,attrs:{shape:g}}),a.disposeIntermediateTensorInfo(n)}else{let e=md(m,a.bufferSync(i),I,k);t=a.makeTensorInfo(g,e.dtype,e.values)}return t}},{kernelName:ne,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:h,dataSplits:d}=t,[c,p]=mp(n.data.get(h.dataId).values,n.data.get(d.dataId).values,r,i,s,o,l,u);return[n.makeTensorInfo([c.length],"string",c),n.makeTensorInfo(d.shape,"int32",p)]}},{kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(1!==i.shape.length)throw Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let[o,l,u]=mf(n.data.get(i.dataId).values,n.data.get(s.dataId).values[0],r),h=l.length;return[n.makeTensorInfo([h,2],"int32",o),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(r<=0)throw Error("Number of buckets must be at least 1");let s=mm(n.data.get(i.dataId).values,r);return n.makeTensorInfo(i.shape,"int32",s)}},{kernelName:"Sub",backendName:"cpu",kernelFunc:mb},{kernelName:"Sum",backendName:"cpu",kernelFunc:mY},{kernelName:"Tan",backendName:"cpu",kernelFunc:gm},{kernelName:na,backendName:"cpu",kernelFunc:gg},{kernelName:tO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:l,strides:u,outputSize:h}=oy(i,r,a.shape),d=n.bufferSync(r),c=n.bufferSync(i),p=n.bufferSync(a),f=f7(d,c,a.shape,h,l,o,s,u,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}},{kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;p0(r,"tile");let s=my(n.bufferSync(r),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}},{kernelName:ni,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a;p0(r,"topk");let[o,l]=mk(n.data.get(r.dataId).values,r.shape,r.dtype,i,s);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:ns,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=n,[h,d,c,p]=r.shape,[f,m]=u??[d,c],g=[h,f,m,p],y=E(r.shape),x=y[0],k=y[1],v=y[2],I=E(g),w=I[0],S=I[1],T=I[2],N=C(r.dtype,b(g));N.fill(l);let R=a.data.get(r.dataId).values,G=a.data.get(i.dataId).values;for(let e=0;e<h;++e){let t=1===i.shape[0]?G:G.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<p;++r){let i;let u=t[6]*a+t[7]*n+1;if(0===u)continue;let h=(t[0]*a+t[1]*n+t[2])/u,p=(t[3]*a+t[4]*n+t[5])/u,f=gb(h,c,o),m=gb(p,d,o);switch(s){case"nearest":i=gy(R,d,c,x,k,v,e,Math.round(m),Math.round(f),r,l);break;case"bilinear":i=function(e,t,n,a,r,i,s,o,l,u,h){let d=Math.floor(o),c=Math.floor(l),p=d+1,f=c+1,m=(f-l)*gy(e,t,n,a,r,i,s,d,c,u,h)+(l-c)*gy(e,t,n,a,r,i,s,d,f,u,h),g=(f-l)*gy(e,t,n,a,r,i,s,p,c,u,h)+(l-c)*gy(e,t,n,a,r,i,s,p,f,u,h);return(p-o)*m+(o-d)*g}(R,d,c,x,k,v,e,m,f,r,l);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}N[e*w+n*S+a*T+r]=i}return a.makeTensorInfo(g,r.dtype,N)}return{dataId:a.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:no,backendName:"cpu",kernelFunc:f_},{kernelName:nl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;p0(i,"unique");let{outputValues:s,outputShape:o,indices:l}=mv(a.data.get(i.dataId).values,r,i.shape,i.dtype);return[a.makeTensorInfo(o,i.dtype,s),a.makeTensorInfo([l.length],"int32",l)]}},{kernelName:nu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape.length,o=r.shape[i],l=Array(s-1),u=0;for(let e=0;e<s;e++)e!==i&&(l[u++]=r.shape[e]);let h=Array(s).fill(0),d=r.shape.slice();d[i]=1;let c=Array(o);for(let e=0;e<c.length;e++){h[i]=e;let t=mt({inputs:{x:r},backend:n,attrs:{begin:h,size:d}});c[e]=mW({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return c}},{kernelName:nh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a;p0(r,"unsortedSegmentSum");let o=r.shape.length,l=i.shape.length,u=[],h=[],d=o-l,c=i;for(let e=0;e<d;++e){let t=mJ({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,h.push(t)}for(let e=0;e<s;++e){let t=ae(e,"int32"),a=n.makeTensorInfo([],"int32",t),i=fm({inputs:{a:a,b:c},backend:n}),s=p6({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),o=fA({inputs:{a:s,b:r},backend:n}),l=mY({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});u.push(l),h.push(a),h.push(i),h.push(s),h.push(o),h.push(l)}let p=ga({inputs:u,backend:n,attrs:{axis:0}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:nd,backendName:"cpu",kernelFunc:gn}])nw(e);let gx={},gk={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gv(e,t){if(!(e in gx)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??function(e){if(!B.getBool("IS_SAFARI")&&"u">typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("u">typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e);return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete gx[e]},!1),B.getBool("SOFTWARE_WEBGL_ENABLED")&&(gk.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",gk)||n.getContext("experimental-webgl",gk):n.getContext("webgl2",gk)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;gx[e]=n}let n=gx[e];return null==n||n.isContextLost()?(delete gx[e],gv(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),gx[e])}function gI(e){return x(Math.ceil(b(e)/4))}function gw(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gS(e,t){let n,a,r,i,s,o,l,u,h,d;return 2===B.getNumber("WEBGL_VERSION")?(n=e.R32F,a=e.R16F,r=e.RGBA16F,i=e.RGBA32F,s=e.RED,l=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,o=e.RGBA8):(n=e.RGBA,a=e.RGBA,r=e.RGBA,i=e.RGBA,s=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function gC(e,t){let n=t();return B.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function gT(e,t){return gz(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}(Is=Ik||(Ik={}))[Is.DENSE=0]="DENSE",Is[Is.SHARED_BATCH=1]="SHARED_BATCH",(Io=Iv||(Iv={}))[Io.RENDER=0]="RENDER",Io[Io.UPLOAD=1]="UPLOAD",Io[Io.PIXELS=2]="PIXELS",Io[Io.DOWNLOAD=3]="DOWNLOAD",(Il=II||(II={}))[Il.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",Il[Il.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",Il[Il.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",Il[Il.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",Il[Il.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";let gN=/ERROR: [0-9]+:([0-9]+):/g;function gR(e,t){let n=gN.exec(t);if(null==n){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let a=+n[1],r=e.split(`
`),i=r.length.toString().length+2,s=r.map((e,t)=>k((t+1).toString(),i)+e),o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);let l=s.slice(0,a-1),u=s.slice(a-1,a),h=s.slice(a);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${k(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function gG(e,t){if(gC(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function gW(e,t,n,a,r,i,s){let o=e.getAttribLocation(t,n);return -1!==o&&(gC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),gC(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,s)),gC(e,()=>e.enableVertexAttribArray(o)),!0)}function gL(e,t,n){gC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),gC(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function gM(e,t){gC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),gC(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function gE(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function gz(e,t,n){let a=gC(e,()=>t());if(null==a)throw Error(n);return a}function gV(e,t=2){return b(e.slice(0,e.length-t))}function gX(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function g$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[gV(e),...gX(e)]),t}function gF(e,t){if(y(e=e.slice(-2),t=t.slice(-2))||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],a=t[t.length-1];if(n===a||n%2==0&&a%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function gZ(e,t){return null!=e.getExtension(t)}function gK(e){try{if(null!=gv(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function gD(e){let t=gS(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function gO(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&f("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let gA=B;function gP(){let e,t,n,a,r,i,s,o,l,u;return 2===B.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",i="outputColor",s="out vec4 outputColor;",o=B.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",a="varying",r="texture2D",i="gl_FragColor",s="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function gB(e,t,n="index"){let a=E(t);return a.map((t,r)=>{let i=`int ${e[r]} = ${n} / ${t}`,s=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`;return`${i}; ${s};`}).join("")}function gH(e,t,n="index"){let a=E(t);return a.map((t,r)=>{let i=`int ${e[r]} = ${n} / outShapeStrides[${r}]`,s=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`;return`${i}; ${s};`}).join("")}function gU(e){let t=E(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function g_(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}gA.registerFlag("HAS_WEBGL",()=>gA.getNumber("WEBGL_VERSION")>0),gA.registerFlag("WEBGL_VERSION",()=>gK(2)?2:gK(1)?1:0),gA.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),gA.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===gA.get("WEBGL_VERSION")),gA.registerFlag("WEBGL_CPU_FORWARD",()=>!0),gA.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),gA.registerFlag("WEBGL_PACK",()=>gA.getBool("HAS_WEBGL")),gA.registerFlag("WEBGL_PACK_NORMALIZATION",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_CLIP",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_REDUCE",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_LAZILY_UNPACK",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_CONV_IM2COL",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>gA.getBool("WEBGL_PACK")),gA.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(function(e){if(null==s){let t=gv(e);s=t.getParameter(t.MAX_TEXTURE_SIZE)}return s})(gA.getNumber("WEBGL_VERSION"))),gA.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(function(e){if(null==o){let t=gv(e);o=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,o)})(gA.getNumber("WEBGL_VERSION"))),gA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=gA.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t=gv(e);return gZ(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:gZ(t,"EXT_disjoint_timer_query")?1:0}(e)}),gA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>gA.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!aL()),gA.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(function(e){if(0===e)return!1;let t=gv(e);if(1===e){if(!gZ(t,"OES_texture_float"))return!1}else if(!gZ(t,"EXT_color_buffer_float"))return!1;return gD(t)})(gA.getNumber("WEBGL_VERSION"))),gA.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!gA.getBool("WEBGL_FORCE_F16_TEXTURES")&&gA.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),gA.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(function(e){if(0===e)return!1;let t=gv(e);if(1===e){if(!gZ(t,"OES_texture_float")||!gZ(t,"WEBGL_color_buffer_float"))return!1}else{if(gZ(t,"EXT_color_buffer_float"))return gD(t);let e="EXT_color_buffer_half_float";if(gZ(t,e)){let n=t.getExtension(e);return function(e,t){let n=gS(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),i}(t,n)}return!1}return gD(t)})(gA.getNumber("WEBGL_VERSION"))),gA.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{var e;return 2===(e=gA.getNumber("WEBGL_VERSION"))&&null!=gv(e).fenceSync}),gA.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>gA.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),gA.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),gA.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>aL()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),gA.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),gA.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),gA.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),gA.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),gA.registerFlag("WEBGL_EXP_CONV",()=>!1),gA.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>gA.getBool("IS_TEST")),gA.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),gA.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),gA.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),gA.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);let gY=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:gQ}=uh,gJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gj=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gq=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,g0=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function g1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function g2(e){return`offset${e}`}function g3(e){let t=e.name,n=b(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function g9(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function g5(e,t,n){let{newShape:a,keptDims:r}=S(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):a,l=!e&&i>1&&!y(t,n)&&a.length<i||s;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function g4(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function g7(e,t){return t.map(t=>e[t]).join(", ")}function g8(e,t,n){let a=[],r=[],i,s,o,l=null,u=null;for(let r of(u=e.getUniformLocation(n,"NAN",!1),1===B.getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1)),t.variableNames)){let i={name:r,uniform:e.getUniformLocation(n,r,!1),offset:e.getUniformLocation(n,`offset${r}`,!1)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${r}Shape`,!1),i.texShape=e.getUniformLocation(n,`${r}TexShape`,!1)),a.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",!1),o=e.getUniformLocation(n,"outShapeStrides",!1),s=e.getUniformLocation(n,"outTexShape",!1)),t.customUniforms)for(let a of t.customUniforms)r.push(e.getUniformLocation(n,a.name,!1));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:s}}function g6(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let a=e.logicalShape,r=t[n],i=r.shape;if(!y(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;let s=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!y(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)})}function be(e){return B.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class bt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ik.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=gP();this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?gH(["r","c","d"],e):gB(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}class bn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ik.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=gP();this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?gH(["r","c","d"],e):gB(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}class ba{constructor(e){this.variableNames=["A"],this.outTexUsage=Iv.DOWNLOAD;let t=gP();this.outputShape=e,this.userCode=`
      ${gY}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}class br{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Iv.DOWNLOAD;let t=gP();this.outputShape=e,this.userCode=`
      ${gY}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}let bi={R:0,G:1,B:2,A:3};class bs{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=gP();this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){let t=n[e];i+=`
          if(offset == ${e}) {
            result = values[${bi[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?g_():gU(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}class bo{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=gP();this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){let i=2*t+r;a+=`
          localCoords = coords;
          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${r};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?g_():gU(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${n.output} = ${r};
        }
    `}}function bl(e,t,n,a,r,i){!function(e,t){let n=B.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);let s=gz(e,()=>e.createTexture(),"Unable to create WebGLTexture."),o=e.TEXTURE_2D;return gC(e,()=>e.bindTexture(o,s)),gC(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),gC(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),gC(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),gC(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===B.getNumber("WEBGL_VERSION")?gC(e,()=>e.texImage2D(o,0,a,t,n,0,r,i,null)):gC(e,()=>e.texStorage2D(o,1,a,t,n)),gC(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:s,texShape:[n,t]}}function bu(e){return e.internalFormatFloat}function bh(e){return e.internalFormatHalfFloat}function bd(e){return e.downloadTextureFormat}function bc(e){return e.internalFormatPackedFloat}function bp(e){return e.internalFormatPackedHalfFloat}class bf{constructor(e){var t,n;this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let a=B.getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,t=e,gx[a]=t):this.gl=gv(a),e=this.gl,2===B.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>gC(t,()=>t.createVertexArray()),this.bindVertexArray=e=>gC(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>gC(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>gC(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>gC(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>gC(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>gC(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>gC(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===B.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=gT(this.gl,"OES_texture_float"),gZ(this.gl,e))this.textureHalfFloatExtension=gT(this.gl,e);else if(B.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),gZ(this.gl,i))this.colorBufferHalfFloatExtension=gT(this.gl,i);else if(B.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",gZ(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(gZ(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=function(e,t){let n=gz(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return gC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),gC(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(this.gl,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])),this.indexBuffer=function(e,t){let n=gz(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return gC(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),gC(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(this.gl,new Uint16Array([0,1,2,2,1,3])),this.framebuffer=gz(n=this.gl,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer."),this.textureConfig=gS(this.gl,this.textureHalfFloatExtension)}get debug(){return B.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;gC(e,()=>e.finish()),gC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),gC(e,()=>e.deleteFramebuffer(this.framebuffer)),gC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),gC(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),gC(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){let[r,i]=[n,t];return bl(e,r,i,bu(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){let[r,i]=[n,t];return bl(e,r,i,bh(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){let[r,i]=[n,t];return bl(e,r,i,bd(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){var n;this.throwIfDisposed(),gC(n=this.gl,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?2===B.getNumber("WEBGL_VERSION")?gC(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):gC(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):2===B.getNumber("WEBGL_VERSION")?gC(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):gC(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),gC(n,()=>n.bindTexture(n.TEXTURE_2D,null))}uploadDenseMatrixToTexture(e,t,n,a){var r,i;let s,o,l;this.throwIfDisposed(),r=this.gl,i=this.textureConfig,gC(r,()=>r.bindTexture(r.TEXTURE_2D,e)),a instanceof Uint8Array?(s=new Uint8Array(t*n*4),o=r.UNSIGNED_BYTE,l=r.RGBA):(s=new Float32Array(t*n*4),o=r.FLOAT,l=i.internalFormatPackedFloat),s.set(a),2===B.getNumber("WEBGL_VERSION")?gC(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,n,r.RGBA,o,s)):gC(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,n,0,r.RGBA,o,s)),gC(r,()=>r.bindTexture(r.TEXTURE_2D,null))}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){let[r,i]=gw(t,n);return bl(e,r,i,bp(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){let[r,i]=gw(t,n);return bl(e,r,i,bc(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gM(this.gl,this.framebuffer),this.outputTexture=null),gC(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>(function(e,t,n,a){let[r,i]=[n,t],s=new Uint8Array(t*n*4);return gC(e,()=>e.readPixels(0,0,r,i,a.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)})(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,i){return function(e,t,n,a,r,i,s,o){let l=new Float32Array(function(e,t){let[n,a]=gw(e,t);return n*a*4}(i,s));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,l),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){let a=new Float32Array(n);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,a),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=function(e,t,n,a){let r=e.createBuffer();gC(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=16*t*n;return gC(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),gC(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),gC(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(B.getBool("WEBGL_FENCE_API_ENABLED")){let a=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let t=e.clientWaitSync(a,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=a}else B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>(function(e,t,n){let a=new Float32Array(t*n*4);return gC(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a})(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){let t=gP();return function(e,t){let n=gz(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(gC(e,()=>e.shaderSource(n,t)),gC(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),Error("Failed to compile vertex shader.");return n}(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}(t));let n=gz(t,()=>t.createProgram(),"Unable to create WebGLProgram.");gC(t,()=>t.attachShader(n,this.vertexShader)),gC(t,()=>t.attachShader(n,e)),function(e,t){if(gC(e,()=>e.linkProgram(t)),!B.get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}(t,n);let a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gG(t,a),a}buildVao(e){var t;this.setProgram(e),this.bindVertexArray(e.vao);let n=this.gl;gC(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),t=this.vertexBuffer,gC(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),gW(n,e,"clipSpacePos",t,3,20,0)&&gW(n,e,"uv",t,2,20,12)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(gC(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gG(this.gl,this.program),gC(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){var a,r;return this.throwIfDisposed(),n?gz(a=this.gl,()=>a.getUniformLocation(e,r),'uniform "'+(r=t)+'" not present in program.'):this.gl.getUniformLocation(e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),gC(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){var a;this.throwIfDisposed(),this.throwIfNoProgram(),gC(a=this.gl,()=>{(function(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw Error(`textureUnit must be in ${e}.`)}})(a,n),gC(a,()=>a.activeTexture(a.TEXTURE0+n)),gC(a,()=>a.bindTexture(a.TEXTURE_2D,e))}),gC(a,()=>a.uniform1i(t,n))}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=gw(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gG(this.gl,this.program),gE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),gC(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),gC(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=gT(this.gl,2===B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v(()=>this.disposed||this.isQueryAvailable(e,B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let n;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in B.platform&&(n=B.platform.setTimeoutCustom.bind(B.platform)),v(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),gL(this.gl,e,this.framebuffer),this.debug&&gE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(gL(this.gl,this.outputTexture,this.framebuffer),this.debug&&gE(this.gl)):gM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;gL(a,e,this.framebuffer),this.debug&&gE(a),this.outputTexture=e,gC(a,()=>a.viewport(0,0,t,n)),gC(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),gC(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}let{addImpl:bm,bincountImpl:bg,bincountReduceImpl:bb,bitwiseAndImpl:by,castImpl:bx,ceilImpl:bk,concatImpl:bv,equalImpl:bI,expImpl:bw,expm1Impl:bS,floorImpl:bC,gatherNdImpl:bT,gatherV2Impl:bN,greaterImpl:bR,greaterEqualImpl:bG,lessImpl:bW,lessEqualImpl:bL,linSpaceImpl:bM,logImpl:bE,maxImpl:bz,maximumImpl:bV,minimumImpl:bX,multiplyImpl:b$,negImpl:bF,notEqualImpl:bZ,prodImpl:bK,raggedGatherImpl:bD,raggedRangeImpl:bO,raggedTensorToTensorImpl:bA,rangeImpl:bP,rsqrtImpl:bB,scatterImpl:bH,sigmoidImpl:bU,simpleAbsImpl:b_,sliceImpl:bY,sparseFillEmptyRowsImpl:bQ,sparseReshapeImpl:bJ,sparseSegmentReductionImpl:bj,sqrtImpl:bq,staticRegexReplaceImpl:b0,stridedSliceImpl:b1,stringNGramsImpl:b2,stringSplitImpl:b3,stringToHashBucketFastImpl:b9,subImpl:b5,tileImpl:b4,topKImpl:b7,transposeImpl:b8,uniqueImpl:b6}=mI;function ye(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function yt(e,t){return 1===t?[e]:ye(e,t)}class yn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=be(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=yt("rc",this.rank),t=g9(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${r}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}class ya{constructor(e,t){var n;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length);let a="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),a+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${n=this.enableShapeUniforms,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${n?function(e,t,n="index"){let a=function(e,t){let n=e.length,a=e.map(e=>`${t}[${e}]`),r=Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}(e.map((e,t)=>t),t);return a.map((t,r)=>{let i=`int ${e[r]} = ${n} / ${a[r]}`,s=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`;return`${i}; ${s};`}).join("")}(["r","c","d"],"inputShape"):gB(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}
      ${this.enableShapeUniforms?g_():gU(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}}class yr{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let a;let r=ys(t,n),i=yo(e,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=yi(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let e=this.freeTextures[i].pop();return this.usedTextures[i].push(e),e}return r===II.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===II.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===II.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===II.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===II.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;let r=ys(n,a),i=yo(t,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);let s=yi(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=B.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;let l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yi(e,t,n,a,r){let i;let s=function(e,t){switch(e){case II.PACKED_2X2_FLOAT32:return bc(t);case II.PACKED_2X2_FLOAT16:return bp(t);case II.UNPACKED_FLOAT32:return bu(t);case II.UNPACKED_FLOAT16:return bh(t);case II.PACKED_4X1_UNSIGNED_BYTE:return bd(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,a);if(r){let[t,n]=gw(e[0],e[1]);i=t*n}else{var o;let[t,n]=(o=e[0],[e[1],o]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(n,s)}function ys(e,t){if(e===Iv.UPLOAD)return II.PACKED_2X2_FLOAT32;if(e===Iv.RENDER||null==e)return B.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?II.PACKED_2X2_FLOAT32:II.UNPACKED_FLOAT32:t?II.PACKED_2X2_FLOAT16:II.UNPACKED_FLOAT16;if(e===Iv.DOWNLOAD||e===Iv.PIXELS)return II.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function yo(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class yl{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let yu="if (isnan(x)) return x;",yh="return abs(x);",yd=yu+`
  return (x < 0.0) ? 0.0 : x;
`,yc=yu+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,yp="return x;",yf=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ym=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yg=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class yb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class yy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length);let t=e.length,n=yt("rc",t),a=g9(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${s}));
      }
    `}}let yx={},yk=B.getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class yv extends u{nextDataId(){return yv.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!B.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");if(null!=e)t=e instanceof bf?e:new bf(gv(B.getNumber("WEBGL_VERSION"),e)),this.binaryCache={},this.gpgpuCreatedLocally=!1;else{var n;t=new bf(gv(B.getNumber("WEBGL_VERSION"))),this.binaryCache=((n=B.getNumber("WEBGL_VERSION"))in yx||(yx[n]={}),yx[n]),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yr(this.gpgpu),this.numMBBeforeWarning=null==B.global.screen?1024:B.global.screen.height*B.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new l(this,aG)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,i){let s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];let l=new bs(g$(t),!1,i),u=this.runWebGLProgram(l,[s],n,[[a,r]]);return u.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),u.dataId}write(e,t,n){if((B.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:Iv.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,a,r){if(B.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:Iv.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,n;let{values:a,dtype:r,complexTensorInfos:i,slice:s,shape:o,isPacked:l}=this.texData.get(e);if(null!=s){let t;t=l?new yb(o,yp):new yl(o,yp);let n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=a)return this.convertAndCacheOnCPU(e);if("string"===r)return a;let u=null!=this.activeTimers;return u&&(t=an()),n="complex64"===r?lO(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=an()-t),this.convertAndCacheOnCPU(e,n)}async read(e){let t;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:n,shape:a,slice:r,dtype:i,complexTensorInfos:s,isPacked:o}=this.texData.get(e);if(null!=r){let t;t=o?new yb(a,yp):new yl(a,yp);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(B.getBool("DEBUG")&&!B.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===B.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if("complex64"!==i&&B.get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...gI(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){let e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);t=lO(e[0],e[1])}else if(null==l)t=this.getValuesFromTexture(e);else{let e=b(a);t=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){let e=this.gpgpu.gl;gC(e,()=>e.deleteBuffer(l))}let h=this.convertAndCacheOnCPU(e,t),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&aG.removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let{values:n,shape:a,slice:r,dtype:i,isPacked:s,texture:o}=this.texData.get(e);if("complex64"===i)throw Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=s?new yb(a,yp):new yl(a,yp);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),o=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),o}if(null==o)throw null!=n?Error("Data is not on GPU but on CPU."):Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape);return Object.assign({tensorRef:aG.makeTensorFromTensorInfo(l)},this.texData.get(l.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>ar(e));return rh(e.shape,e.dtype,n)}catch{throw Error("Failed to decode encoded string bytes into utf-8")}return rh(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!(B.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||596e-10<Math.abs(n)&&65504>Math.abs(n)))throw B.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=b(t);if(B.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),a=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...gI(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}let i=B.getBool("WEBGL_PACK")&&!0===a,s=i?g$(t):t,o=i?new br(s):new ba(s),l=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=as(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=as(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);s.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),s.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:an(),endMs:null}}endTimer(e){return B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=an(),e}async getQueryTime(e){return B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,i)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=yk){return B.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&b(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ny("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return oS(e.shape,t)}packedUnaryOp(e,t,n){let a=new yb(e.shape,t),r=this.compileAndRun(a,[e],n);return aG.makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=b_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(B.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,yh,e.dtype);let t=new yl(e.shape,yh),n=this.compileAndRun(t,[e]);return aG.makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&R(n[0])){let r=n.map(e=>aa(e));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return aG.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new yy(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new yn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[gV(e.shape),...gX(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=new ya([gV(t),...gX(t)],n),i=this.runWebGLProgram(r,[a],e.dtype,[n],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){let n;let{isPacked:a,shape:r,dtype:i}=this.texData.get(e);null!=t&&f(b(r)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");let s=g$(r);n=a?new bn(s):new bt(s);let o=[t??gI(s)],l=this.runWebGLProgram(n,[{shape:s,dtype:i,dataId:e}],i,o,!0,t);return{dtype:i,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,n,a,r=!1,i){let s;let o=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Ik.DENSE){let t=i??gI(e.outputShape);l.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===b(o.shape))return l.values=C(o.dtype,0),o;let u=[],h=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&b(t.shape)<=B.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!gF(n.shape,t.shape)){let e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),u.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);let d={shape:o.shape,texData:l,isUniform:!1},c=function(e,t,n){let a="";t.concat(n).forEach(t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:l}=g5(e.packedInputs,t.shape,i),u="",h="",d="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=E(o);d=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let c=t.shape.length,p=2===o.length&&y(t.shape,i),f=1===b(t.shape),m=ix(t.shape,n.shape),g=!e.packedInputs&&c===n.shape.length&&y(i,n.texData.texShape),x=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${c}_${g}_${s?l:""}_${o.length}_${f}_${m}_${p}_${u}_${h}_${d}_${x}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}});let r=e.userCode;return e.constructor.name+("_"+a+"_")+r+`${B.getNumber("WEBGL_VERSION")}`}(e,h,d),p=this.getAndSaveBinary(c,()=>(function(e,t,n,a){let r=n.map((e,n)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}}),i=r.map(e=>e.shapeInfo),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=function(e,t,n){let a=[];if(e.forEach(e=>{let t=b(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=g5(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let r=a.join(`
`),i=e.map(e=>(function(e,t,n=!1,a){let r="";n?r+=function e(t,n){switch(t.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=gP();return`
    vec4 ${n}() {
      return ${a.texture2D}(${t}, halfCR);
    }
  `}(t);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=gP();if(t)return`
    vec4 ${a}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${n}, uv);
    }
  `;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${a}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${n}, uv);
    }
  `}(t,n);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],l=gP();if(null!=i&&y(n,i))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);

        return ${l.texture2D}(${a}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);

        return ${l.texture2D}(${a}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],h=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `}(t,n);case 3:return function(t,n){let a=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===a[0]){let r=g4(t,a.slice(1));return`
        ${e(r,n)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${g7(["b","row","col"],[1,2])});
        }
      `}let l=gP();if(n)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=o[0],h=o[1],d=Math.ceil(a[2]/2),c=d*Math.ceil(a[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${c}, ${d}, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}(t,n);default:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=gP();if(t)return`
    vec4 ${a}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],d=Math.ceil(i[s-1]/2),c=d*Math.ceil(i[s-2]/2),p="int b, int row, int col",f=`b * ${c} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<s-1;e++)p=`int b${e}, `+p,c*=i[s-e-1],f=`b${e} * ${c} + `+f;return`
    vec4 ${a}(${p}) {
      int index = ${f};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}(t,n)}}(e,a):r+=function e(t,n=!1){let a=t.shapeInfo.logicalShape;switch(a.length){case 0:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;let[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`
      float ${a}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let s=g2(n);if(t)return`
    float ${a}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${a}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${s});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${a}(int index) {
        ${g3(e)}
      }
    `;let r=e.shapeInfo.texShape,i=r[0],s=r[1];if(1===s&&1===i)return`
      float ${a}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=g2(n);return 1===s?t?`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${n}, uv);
      }
    `:1===i?t?`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 2:return function(t,n){let a=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape;if(null!=s&&y(a,s)){if(n)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let e=s[0],t=s[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:o,keptDims:l}=S(a);if(o.length<a.length){let a=g4(t,o);return`
      ${e(a,n)}
      float ${i}(int row, int col) {
        return ${i}(${g7(["row","col"],l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${g3(t)}
      }
    `;let u=s[0],h=s[1],d=g2(r);return 1===h?n?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:1===u?n?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:n?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${h}, index);
    return sampleTexture(${r}, uv);
  }
`}(t,n);case 3:return function(t,n){let a=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[1]*a[2],o=a[2],{newShape:l,keptDims:u}=S(a);if(l.length<a.length){let a=g4(t,l);return`
        ${e(a,n)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${g7(["row","col","depth"],u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${o}, 1)));
        ${g3(t)}
      }
    `;let h=t.shapeInfo.texShape,d=h[0],c=h[1],p=t.shapeInfo.flatOffset;if(c===s&&null==p)return n?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(c===o&&null==p)return n?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=g2(r);return n?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${c}, index);
        return sampleTexture(${r}, uv);
      }
  `}(t,n);case 4:return function(t,n){let a=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[3],o=a[2]*s,l=a[1]*o,{newShape:u,keptDims:h}=S(a);if(u.length<a.length){let a=g4(t,u);return`
      ${e(a,n)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${g7(["row","col","depth","depth2"],h)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${o}, ${s}, 1)));
        ${g3(t)}
      }
    `;let d=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,p=c[0],f=c[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&null==d)return n?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===s&&null==d)return n?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=g2(r);return n?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${b}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${p}, ${f}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}(t,n);case 5:return function(t){let n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[4],s=n[3]*i,o=n[2]*s,l=n[1]*o,{newShape:u,keptDims:h}=S(n);if(u.length<n.length){let n=g4(t,u);return`
      ${e(n)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${g7(["row","col","depth","depth2","depth3"],h)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${o}, ${s}, ${i})) +
          depth3;
        ${g3(t)}
      }
    `;let d=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,p=c[0],f=c[1];if(f===l&&null==d)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&null==d)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]},
               ${n[2]*n[3]}, ${n[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;let m=g2(a);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} + depth * ${s} +
          depth2 * ${i} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${a}, uv);
    }
  `}(t);case 6:return function(t){let n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:i,keptDims:s}=S(n);if(i.length<n.length){let n=g4(t,i);return`
      ${e(n)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${g7(["row","col","depth","depth2","depth3","depth4"],s)});
      }
    `}let o=n[5],l=n[4]*o,u=n[3]*l,h=n[2]*u,d=n[1]*h;if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${g3(t)}
      }
    `;let c=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==c)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(m===o&&null==c)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]*n[4]},
               ${n[2]*n[3]*n[4]},
               ${n[3]*n[4]},
               ${n[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${a}, uv);
      }
    `;let g=g2(a);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${a}, uv);
    }
  `}(t);default:throw Error(`${a.length}-D input sampling is not yet supported`)}}(e,a);let i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(n?r+=function(e,t){let n;let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=gQ(e.shapeInfo.logicalShape,t.logicalShape),l=g9(s),u=s-i,h=["x","y","z","w","u","v"];n=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+u]} = 0;`).join(`
`);let d="";d=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+u]}`).join(", ");let c="return outputValue;",p=1===b(e.shapeInfo.logicalShape),f=1===b(t.logicalShape);if(1!==i||p||f){if(p&&!f)c=1===s?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(o.length){let e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?c="return vec4(outputValue.x);":o.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+r+"AtOutCoords"}() {
      ${l} coords = getOutputCoords();
      ${n}
      vec4 outputValue = get${r}(${d});
      ${c}
    }
  `}(e,t):r+=function(e,t){let n;let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),i="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&y(o,s))return`
      float ${i}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let h=g9(u),d=gQ(e.shapeInfo.logicalShape,t.logicalShape),c=u-l,p=["x","y","z","w","u","v"];n=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${p[e+c]} = 0;`).join(`
`);let f="";return f=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+c]}`).join(", "),`
    float ${i}() {
      ${h} coords = getOutputCoords();
      ${n}
      return get${r}(${f});
    }
  `}(e,t)),r})(e,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),s=t.texShape,o=gP(),l=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${o.texture2D}(textureSampler, uv).r;
    }
  `,u,h,d=`${o.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${o.varyingFs} vec2 resultUV;
    ${o.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${o.defineSpecialNaN}
    ${o.defineSpecialInf}
    ${o.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${gJ}
    ${gj}
    ${gq}
  `;return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return g1();case 1:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${a[1]}.0);
      }
    `:1===a[1]?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${a[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);
    }
  `}(0,t,n);case 2:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));

      int index = resTexRC.x * ${a[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}(e,t,n);case 3:return function(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,n);default:return function(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2),s=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`
      int b${t} = index / ${s};
      index -= b${t} * ${s};
    `+o,l=`b${t}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),h=`
    void setOutput(vec4 val) {
      ${o.output} = val;
    }
  `):(u=function(e,t,n){switch(e.length){case 0:return g1();case 1:return 1===t[0]?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `;case 2:return y(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `;case 3:return function(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${gH(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let a=gB(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${a}
      return ivec3(r, c, d);
    }
  `}(e,t,n);case 4:return function(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${gH(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let a=gB(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${a}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,n);case 5:return function(e,t){let n=gB(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(e,t);case 6:return function(e,t){let n=gB(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(e,t);default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),h=`
    void setOutput(float val) {
      ${o.output} = vec4(val, 0, 0, 0);
    }
  `),n.packedInputs&&(d+=g0),[d,l,h,r,u,i,n.userCode].join(`
`)}(r,s,t),l=function(e,t){let n=gz(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(gC(e,()=>e.shaderSource(n,t)),gC(e,()=>e.compileShader(n)),B.get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw gR(t,e.getShaderInfoLog(n)),Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return B.get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},g8(e,t,u)))})(this.gpgpu,e,h,d)),f=null!=this.activeTimers;f&&(s=this.startTimer()),B.get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(g6(t.inShapeInfos,n),g6([t.outShapeInfo],[a]));let i=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===B.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){let r=n[a],{uniform:i,offset:s,shape:o,texShape:l}=t.variablesLocations[a];if(o){let{uniformShape:n}=g5(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=i){if(r.isUniform){if(2>b(r.shape))e.gl.uniform1f(i,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}continue}null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,i,a)}}let o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let n=E(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){let a=t.program.customUniforms[n],i=t.customUniformLocations[n],s=r[n];if("float"===a.type)e.gl.uniform1fv(i,s);else if("vec2"===a.type)e.gl.uniform2fv(i,s);else if("vec3"===a.type)e.gl.uniform3fv(i,s);else if("vec4"===a.type)e.gl.uniform4fv(i,s);else if("int"===a.type)e.gl.uniform1iv(i,s);else if("ivec2"===a.type)e.gl.uniform2iv(i,s);else if("ivec3"===a.type)e.gl.uniform3iv(i,s);else if("ivec4"===a.type)e.gl.uniform4iv(i,s);else throw Error(`uniform type ${a.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,p,h,d,a),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(s=this.endTimer(s),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(s)}));let m=B.getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=an();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!B.getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===r){let e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"u">typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=aP(()=>{if(!B.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B.getBool("DEBUG");B.set("DEBUG",!1);let t=this.abs(iD(1e-8)).dataSync()[0];if(B.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t;let n=this.texData.get(e),{shape:a,dtype:r,values:i,texture:s,usage:o,isPacked:l}=n;if(null!=s)return;let u=null!=this.activeTimers;u&&(t=an());let h=n.texShape;if(null==h&&(h=function(e,t=!1){let n=B.getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=B.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&B.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map((t,n)=>n>=e.length-2?c(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length&&(e=S(e).newShape);let r=b(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);let s=null!=i&&Math.max(...i)>a&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s){if(t){let t=gV(e),n=2,a=2;e.length&&([n,a]=gX(e)),i=x(r=n/2*t*(a/2)).map(e=>2*e)}else i=x(r)}return i}(a,l),n.texShape=h),null!=i){let e=g$(a),s,o=h[1],d=h[0],c=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!c)&&([o,d]=gw(h[0],h[1])),s=l?new bo(e,c):new bs(e,c);let p=c?[d,o]:h,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);c?m.usage=Iv.PIXELS:m.usage=Iv.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,i);let g=[[d,o]],b=this.runWebGLProgram(s,[f],r,g,!0),y=this.texData.get(b.dataId);n.texShape=y.texShape,n.isPacked=y.isPacked,n.usage=y.usage,B.get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(n.texture=y.texture,n.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=an()-t)}else{let e=this.acquireTexture(h,o,r,l);n.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*N(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await lR(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(gR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.")):Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=g8(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:a,height:r,width:i,channels:s}=e,o=aG.backend;if(!o.gpgpu.gl.isTexture(a))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(a,t,n,r,i,s);return aG.makeTensorFromDataId(l,t,n,o)}}yv.nextDataId=0,aM()&&aU("webgl",()=>new yv,2);let yI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class yw{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=iv(t,n),this.enableShapeUniforms=be(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}let yS=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class yC{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=iv(t,n);let r=this.outputShape.length;this.enableShapeUniforms=be(r);let i="";if(a){if(0===r||1===b(this.outputShape))i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${g9(r)} coords = getOutputCoords();
        `,1===r)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=yt("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${e[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${e[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}function yT(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function yN(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(i.dataId),o=yT({inputs:{x:a},backend:n}),l=yT({inputs:{x:r},backend:n});return s.complexTensorInfos={real:o,imag:l},i}let yR="return (a < 0.) ? b * a : a;",yG=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,yW="return (a < 0.) ? b * a : a;",yL=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,yM="if (isnan(x)) return x;";function yE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:i})=>{let s;let{x:o}=r,l=a||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){let e=n(i.texData.get(o.dataId).values,l);return i.makeTensorInfo(o.shape,l,e)}return s=B.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new yb(o.shape,t):new yl(o.shape,e),i.runWebGLProgram(s,[o],l)}}function yz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:i}){return({inputs:s,backend:o})=>{let l;let{a:u,b:h}=s;if(a&&"complex64"===u.dtype){let t=o.texData.get(u.dataId),n=o.texData.get(h.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:a.dataId,dtype:a.dtype,shape:h.shape},s=new yw(e,u.shape,h.shape);return o.runWebGLProgram(s,[r,i],ax(n.dtype,a.dtype))}),i=yN({inputs:{real:a,imag:r},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(r),i}let d=i||ax(u.dtype,h.dtype);if(("string"===u.dtype||"string"===h.dtype||o.shouldExecuteOnCPU([u,h]))&&null!=r){let e=o.texData.get(u.dataId).values,t=o.texData.get(h.dataId).values,n="string"===u.dtype?ul(e):e,a="string"===u.dtype?ul(t):t,[i,s]=r(u.shape,h.shape,n,a,d),l=o.makeTensorInfo(s,d);return o.texData.get(l.dataId).values=i,l}return l=B.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new yC(t,u.shape,h.shape,n):new yw(e,u.shape,h.shape),o.runWebGLProgram(l,[u,h],d)}}function yV(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?ym:yd;if("elu"===e)return t?yf:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?yg:yc;if("prelu"===e)return t?yL:yW;if("leakyrelu"===e)return t?yG:yR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class yX{constructor(e,t,n,a=!1,r=!1,i=!1,s=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=be(this.outputShape.length);let u=Math.ceil((a?e[1]:e[2])/2),h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],c="",p="";s&&(c=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:`vec4 activation(vec4 x) {
          ${s}
        }`,p="result = activation(result);"),i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let f="rc.x",m="rc.x";e[0]<t[0]?f=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(m=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${c}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${f};
        int batchB = ${m};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${a?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${r?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${d[0]});
          result += (${h[1]} * ${d[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${i?"result += getBiasAtOutCoords();":""}

        ${p}

        setOutput(result);
      }
    `}}let y$={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class yF{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=iv(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let yZ="return a * b;";function yK(e){let t;let{inputs:n,backend:a}=e,{a:r,b:i}=n,s=ax(r.dtype,i.dtype);if("complex64"===r.dtype){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),n=new yF(y$.REAL,r.shape,i.shape),s=new yF(y$.IMAG,r.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],l=a.runWebGLProgram(n,o,"float32"),u=a.runWebGLProgram(s,o,"float32"),h=yN({inputs:{real:l,imag:u},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),h}if(a.shouldExecuteOnCPU([r,i])){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),[n,o]=b$(r.shape,i.shape,e.values,t.values,s),l=a.makeTensorInfo(o,s);return a.texData.get(l.dataId).values=n,l}return t=B.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yC(yZ,r.shape,i.shape):new yw(yZ,r.shape,i.shape),a.runWebGLProgram(t,[r,i],s)}function yD(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=b(r.shape),o=I(i,s),l=b(o);f(s===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`);let u=n.texData.get(r.dataId);return!u.isPacked||gF(r.shape,o)||null!==u.texture&&gF(u.shape,o)?(n.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}):function(e,t,n){let a=[gV(e.shape),...gX(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},i=new ya([gV(t),...gX(t)],a),s=n.runWebGLProgram(i,[r],e.dtype,[a],!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}(r,o,n)}class yO{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${e%1==0?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${s}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${s};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}class yA{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,d=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,c="vec4";"all"===t?(s="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,c="bvec4"):"any"===t&&(s="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,c="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${s};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${s});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${1===h}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${2===h}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${3===h}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}function yP(e,t,n,a){let r=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],a=lV(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape),i=e;for(let s=0;s<r.length;s++){let o,l;let{inSize:u,windowSize:h,outSize:d}=r[s];o="mean"===n?0===s?new yO({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:d},u):new yO({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:d}):new yA({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:d},n),l=i,i=a.runWebGLProgram(o,[i],t),l.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(l)}return i}class yB{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let a=g9(this.rank),r=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}class yH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=g9(this.rank),r=ye("rc",this.rank),i=Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=r[e];let s=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}function yU(e,t,n){let a=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yH(e.shape,t):new yB(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function y_(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return function(e,t,n,a){let r=e.shape.length,i=w(t,e.shape),s=i,o=iV(s,r),l=null!=o,u=e;l&&(u=yU(e,o,a),s=i$(s.length,r)),iz("sum",s,r);let[h,d]=iM(u.shape,s),c=h;n&&(c=iE(h,i));let p=b(d),f=yD({inputs:{x:u},attrs:{shape:[b(e.shape)/p,p]},backend:a}),m=yP(f,ak(e.dtype),"sum",a),g=yD({inputs:{x:m},attrs:{shape:c},backend:a});return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),l&&a.disposeIntermediateTensorInfo(u),g}(r,i,s,n)}function yY(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{perm:s}=r,o=Array(i.shape.length);for(let e=0;e<o.length;e++)o[e]=i.shape[s[e]];if(a.shouldExecuteOnCPU([i])){let e=b8(a.texData.get(i.dataId).values,i.shape,i.dtype,s,o);t=a.makeTensorInfo(o,i.dtype),a.texData.get(t.dataId).values=e}else t=yU(i,s,a);return t}function yQ({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}){let u;let h=e.shape.length,d=t.shape.length,c=n?e.shape[h-2]:e.shape[h-1],p=a?t.shape[d-1]:t.shape[d-2],m=n?e.shape[h-1]:e.shape[h-2],g=a?t.shape[d-2]:t.shape[d-1],y=e.shape.slice(0,-2),x=t.shape.slice(0,-2),k=b(y),v=b(x),I=iv(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,g]);f(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);let w=n?[k,c,m]:[k,m,c],S=a?[v,g,p]:[v,p,g],C=yD({inputs:{x:e},backend:r,attrs:{shape:w}}),T=yD({inputs:{x:t},backend:r,attrs:{shape:S}}),N=[C,T],R=Math.max(k,v),G=n?C.shape[1]:C.shape[2],W=null!=i,L=null!=s,M="leakyrelu"===l,E=null!=l?yV(l,!0):null,z=W||L||M||null!=E;if((1===m||1===g)&&G>1e3&&!1===z){let e=C,t=T;n&&(e=yY({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=yY({inputs:{x:T},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));let i=1!==g,s=1===g,o=e;i&&(o=yD({inputs:{x:e},backend:r,attrs:{shape:[R,G,1]}}),N.push(o));let l=1===g?2:1,h=t;s&&(h=yD({inputs:{x:t},backend:r,attrs:{shape:[R,1,G]}}),N.push(h));let d=yK({inputs:{a:o,b:h},backend:r});u=y_({inputs:{x:d},backend:r,attrs:{axis:l,keepDims:!0}}),N.push(d)}else{let l=ax(e.dtype,t.dtype),h=new yX(w,S,[R,m,g],n,a,W,E,L,M),d=[C,T];if(null!=i&&d.push(i),L&&d.push(s),M){let e=r.makeTensorInfo([],"float32",ae(o,"float32"));d.push(e),N.push(e)}u=r.runWebGLProgram(h,d,l)}let V=yD({inputs:{x:u},backend:r,attrs:{shape:I}});for(let e of(N.push(u),N))r.disposeIntermediateTensorInfo(e);return V}let yJ="return abs(x);",yj=yE({opSnippet:yu+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),yq=yE({opSnippet:yu+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),y0="return a + b;",y1=yz({opSnippet:y0,packedOpSnippet:y0,supportsComplex:!0,cpuKernelImpl:bm});class y2{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}class y3{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}class y9{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class y5{constructor(e,t,n,a){let r,i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let o=this.outputShape,l=o.length,u=g9(l),h=yt("coords",l);if(1===s){let e=g9(i=l+1);r=`
        ${e} sourceLocR = ${e}(${h.join()}, 0);
        ++${h[l-1]};
        ${e} sourceLocG = ${e}(${h.join()}, 0);
        ++${h[l-2]};
        ${e} sourceLocA = ${e}(${h.join()}, 0);
        --${h[l-1]};
        ${e} sourceLocB = ${e}(${h.join()}, 0);
        --${h[l-2]};`}else i=l,r=`
        ${u} sourceLocR = coords;
        ++${h[l-1]};
        ${u} sourceLocG = coords;
        ++${h[l-2]};
        ${u} sourceLocA = coords;
        --${h[l-1]};
        ${u} sourceLocB = coords;
        --${h[l-2]};`;let d=["x","y","z","w","u","v"].slice(0,i),c="."+d[i-1],p=d.map(e=>"int "+e),m=yt("sourceLocR",i-1).concat("inIdx.r"),g=yt("sourceLocG",i-1).concat("inIdx.g"),b=yt("sourceLocB",i-1).concat("inIdx.b"),y=yt("sourceLocA",i-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",k=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=a?"":`
      float getBestIndicesAChannel(${p.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${p.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${h[l-2]} < ${o[l-2]-1};
        ${r}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function y4(e,t,n,a){let r=[n];if(iz("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!B.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],i=e.texData.get(t.dataId),s=null!==i&&i.isPacked,o=t;s&&n.push(o=e.unpackTensor(t));let[l,u]=iM(o.shape,r),h=yD({inputs:{x:o},backend:e,attrs:{shape:[-1,b(u)]}});n.push(h);let d=function e(t,n,a,r=null){let i=n.shape[0],s=n.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);let o=lV(s),l=new y9({windowSize:o,inSize:s,batchSize:i,outSize:Math.ceil(s/o)},a,null==r),u=[n];null!=r&&u.push(r);let h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let d=e(t,n,a,h);return t.disposeIntermediateTensorInfo(h),d}(e,h,a);n.push(d);let c=yD({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return function e(t,n,a,r=null){let i=null!=r?r.shape:n.shape,s=lV(i[i.length-1]),o=new y5(i,s,a,null==r),l=null==r?[n]:[n,r],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===n.shape.length){let r=e(t,n,a,u);return t.disposeIntermediateTensorInfo(u),r}return u}(e,t,a)}let y7=yE({opSnippet:yu+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),y8=yE({opSnippet:yu+"return log(x + sqrt(x * x + 1.0));"}),y6=yE({opSnippet:yu+`
  return atan(x);
`}),xe=yz({opSnippet:yI+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+yS+`
  return result;
`}),xt=yE({opSnippet:yu+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`});class xn{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){this.userCode=`
        const ivec2 strides = ivec2(${s}, ${o});
        const ivec2 pads = ivec2(${c}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");let x=4*Math.floor(i/4),k=i%4,v=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${o});
      const ivec2 pads = ivec2(${c}, ${p});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${v}
          }

          int xC = xCCorner + ${x};
          if (${1===k}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${2===k}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${3===k}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${v}
          }
        }
        setOutput(${y});
      }
    `}}class xa{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y="avg"===t,x="0.0";if(y||(x="-1.0 / 1e-20"),n){this.userCode=`
        const ivec3 strides =
            ivec3(${s}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${c};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / max(count, 1.0)");let v=4*Math.floor(i/4),I=i%4,w=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${s}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${w}
            }

            int xC = xCCorner + ${v};
            if (${1===I}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${w}
            } else if (${2===I}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${w}
            } else if (${3===I}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${w}
            }
          }
        }
        setOutput(${k});
      }
    `}}class xr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${1/(t*n)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${s}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class xi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=h-1-e.padInfo.front,f=d-1-e.padInfo.top,m=c-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*n*a)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xs{constructor(e,t,n,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],iv(e,t),iv(e,n);let s="0.0";null!=a&&(iv(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=r&&(iv(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${s};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class xo{constructor(e,t,n,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],iv(e,t),iv(e,n);let s="vec4(0.0)";null!=a&&(iv(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(iv(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${s};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}class xl{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let n=g9(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=function(e){if(1===e)return"sourceLoc";if(e<=6)return xu.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),r=e.map((e,t)=>`sourceLoc.${xu[t]} = start[${t}] + coords.${xu[t]};`);t=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${a}));
      }
    `}}let xu=["x","y","z","w","u","v"];class xh{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=g9(this.rank),n=yt("coords",this.rank),a=yt("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,s=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${s}
        ${o}
        setOutput(result);
      }
    `}}function xd(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a,[o,l]=lI(r,i,s);if(ld(r,o,l),0===b(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=bY(n.texData.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}let{isPacked:u}=n.texData.get(r.dataId),h=lk(r.shape,o,l);if(u||!h){let e=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xh(l):new xl(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){let r=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),s=a.texData.get(i.dataId);Object.assign(s,r),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=lv(t,E(e.shape));r.slice&&(o+=r.slice.flatOffset),s.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,l+1),i}(r,o,l,n)}let xc=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,xp=`
  return float(int(a.r) & int(b.r));
`,xf=yz({opSnippet:"return float(a != b);",cpuKernelImpl:bZ,dtype:"bool"});function xm(e){let{inputs:t,backend:n}=e,{input:a}=t;return yT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}let xg="return ceil(x);",xb=yE({opSnippet:xg,packedOpSnippet:xg,cpuKernelImpl:bk});class xy{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class xx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}class xk{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function xv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}class xI{constructor(e){this.outputShape=[],this.outputShape=lW(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}class xw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=lW(e,t);let n=this.outputShape,a=n.length,r=g9(a),i=yt("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=s[t],u=s.slice(-2),h=s.join(),d=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];d+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${xS(s,l,t)}),
            vec2(${xS(u,l,t)}));
        }`}let c=o.length,p=o[o.length-1];d+=`
        return getChannel(
          getT${c}(${xS(s,l,p)}),
          vec2(${xS(u,l,p)}));`,this.userCode=`
      float getValue(${s.map(e=>"int "+e)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${n[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${n[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${n[a-2]} &&
            ${i[a-1]} < ${n[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function xS(e,t,n){let a=e.indexOf(t);return e.map((e,t)=>t===a?`${e} - ${n}`:e).join()}function xC(e){let{inputs:t,backend:n}=e,{input:a}=t;return yT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}function xT(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=w(r,t[0].shape)[0];lG(t.map(e=>e.shape),i);let s=lW(t.map(e=>e.shape),i);if(0===b(s))return n.makeTensorInfo(s,t[0].dtype,[]);let o=t.filter(e=>b(e.shape)>0);return 1===o.length?yT({inputs:{x:o[0]},backend:n}):function e(t,n,a){let r=t[0].dtype;if("complex64"===r){let r=t.map(e=>xm({inputs:{input:e},backend:a})),i=t.map(e=>xC({inputs:{input:e},backend:a})),s=e(r,n,a),o=e(i,n,a),l=yN({inputs:{real:s,imag:o},backend:a});return r.forEach(e=>a.disposeIntermediateTensorInfo(e)),i.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),l}let i=a.shouldExecuteOnCPU(t);if("string"===r&&(i=!0),i){let e=t.map(e=>{let t=[-1,b(e.shape.slice(n))];return yD({inputs:{x:e},backend:a,attrs:{shape:t}})}),i=bv(e.map(e=>({vals:a.readSync(e.dataId),shape:e.shape})),lW(e.map(e=>e.shape),1),r,1===e[0].shape[0]),s=lW(t.map(e=>e.shape),n),o=a.makeTensorInfo(s,r,i);return e.forEach(e=>a.disposeIntermediateTensorInfo(e)),o}let s=t.filter(e=>b(e.shape)>0),o=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let e=o?new yl(t[0].shape,yp):new yb(t[0].shape,yp);return a.runWebGLProgram(e,t,r)}let l=B.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>l){let t=[];for(let r=0;r<s.length;r+=l){let i=s.slice(r,r+l);t.push(e(i,n,a))}let r=e(t,n,a);for(let e of t)a.disposeIntermediateTensorInfo(e);return r}if(o){let e=new xw(s.map(e=>e.shape),n);return a.runWebGLProgram(e,s,r)}let{tensors2D:u,outShape:h}=function(e,t,n){let a=lW(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>yD({inputs:{x:e},attrs:{shape:[-1,b(e.shape.slice(t))]},backend:n})),outShape:a}}(s,n,a),d=new xI(u.map(e=>e.shape)),c=a.runWebGLProgram(d,u,r);u.forEach(e=>a.disposeIntermediateTensorInfo(e));let p=yD({inputs:{x:c},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(c),p}(o,i,n)}class xN{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,c=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",b="";n&&(g=a?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${c}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${b}
        setOutput(result);
      }
    `}}class xR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,c=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${s});
      const ivec3 pads = ivec3(${t}, ${n}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xG{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=be(this.outputShape.length);let i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<u;e++)h+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<u;e++)h+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(u+1)/2;t++){let n=2*t;if(h+=`
           xC = xCCorner + ${n*o};
           `,1===s){if(n<u&&(i%2==1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }
               `,1===o&&n>0?h+=`
                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);
                   } else {
                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xC${n} = xTexelC${n};
                 `,n+1<u)){let e=i%2==0?c(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${n+1}.zw = vec2(0.0);
                     }
                     xTexelC${n+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);
                     } else {
                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);
                     }
                     `:h+=`
                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);
                     `):1===e?h+=`
                     xC${n+1} = xTexelC${n};
                     `:h+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${n+1}.zw = vec2(0.0);
                       }
                       xTexelC${n+1}Ready = 1;
                     }

                     xC${n+1} = xTexelC${n+1};
                     `}}else n<u&&(i%2==1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.0);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
               `,n+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(
                   xTexelC${n}.xy, xTexelC${n+1}.xy);
               `,n+1<u&&(h+=`
                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
                 `)));n<u&&(h+=`
             wTexel = getW(r, ${n}, d1, d2);
             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,n+1<u&&(h+=`
               wTexel = getW(r, ${n+1}, d1, d2);
               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   
     }
   
     }
   `;let d="",p="";n&&(d=a?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${p}
         setOutput(result);
       }
     `}}class xW{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=be(this.outputShape.length);let{dataFormat:n}=t,a=gP(),r="channelsLast"===n,i=r?1:2,s=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${s}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${a.output} = result;
      }
    `}}function xL(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function xM({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let l;let u=e.shape,h=a.texData.get(e.dataId),d=n.inChannels,c=u[0]*u[1]*u[2],p=n.outChannels,m="channelsLast"===n.dataFormat,g=[];if(null!=i){let e=xL(i.shape,m);null!=e&&(i=yD({inputs:{x:i},backend:a,attrs:{shape:e}}),g.push(i))}if(null!=r){let e=xL(r.shape,m);null!=e&&(r=yD({inputs:{x:r},backend:a,attrs:{shape:e}}),g.push(r))}if(!((1===c||1===p)&&d>1e3)&&h.isPacked&&m&&null!=h.texture&&u[2]%2!=0&&y(h.shape.slice(-3),u.slice(-3))){let d=u[0]*u[1]*(u[2]+1),c={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},p=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,f(gF(h.shape,c.shape),()=>`packed reshape ${h.shape} to ${c.shape} isn't free`);let m=yD({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(m);let b=yQ({a:c,b:m,backend:a,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),y=a.texData.get(b.dataId);f(y.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=p,y.shape=n.outShape,(l=yT({inputs:{x:b},backend:a})).shape=n.outShape,g.push(b)}else{let u=n.outHeight*n.outWidth,h=yD({inputs:{x:e},backend:a,attrs:{shape:m?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),d=yD({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),c=yQ({a:m?h:d,b:m?d:h,transposeA:!m,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:s});l=yD({inputs:{x:c},backend:a,attrs:{shape:n.outShape}}),g.push(h),g.push(d),g.push(c)}for(let e of g)a.disposeIntermediateTensorInfo(e);return l}function xE({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:c,dataFormat:p}=n,f="channelsLast"===p,m=l*u*h,g=c*d,y=[n.batchSize,m,g],x=[];if(null!=i){let e=xL(i.shape,f);null!=e&&(i=yD({inputs:{x:i},backend:a,attrs:{shape:e}}),x.push(i))}if(null!=r){let e=xL(r.shape,f);null!=e&&(r=yD({inputs:{x:r},backend:a,attrs:{shape:e}}),x.push(r))}let k=yD({inputs:{x:t},backend:a,attrs:{shape:[1,m,b(t.shape)/m]}});x.push(k);let v=new xW(y,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],w=a.runWebGLProgram(v,[e],"float32",I),S=yD({inputs:{x:w},backend:a,attrs:{shape:y}});x.push(w),x.push(S);let C=null!=r,T=null!=i,N="leakyrelu"===o,R=o?yV(o,!0):null,G=new yX(f?S.shape:k.shape,f?k.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,R,T,N),W=f?[S,k]:[k,S];if(r&&W.push(r),T&&W.push(i),N){let e=a.makeTensorInfo([],"float32",ae(s,"float32"));W.push(e),x.push(e)}let L=a.runWebGLProgram(G,W,"float32"),M=yD({inputs:{x:L},backend:a,attrs:{shape:n.outShape}});for(let e of(x.push(L),x))a.disposeIntermediateTensorInfo(e);return M}class xz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${i?3:1}];

        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xX{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${s};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class x${constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xF{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=be(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}let xZ=yE({opSnippet:yM+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${yS}
  return result;
`}),xK=yE({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`});class xD{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,s,o,l]=e,[u]=t,[h,d]=n;this.outputShape=[u,h,d,l];let[c,p]=[`${s-1}.0`,`${o-1}.0`],[f,m,g]=h>1?[`${(s-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,y,x]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${p} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${p}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${y};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${p} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===a?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}(Iu=Iw||(Iw={})).Prod="*",Iu.Sum="+";class xO{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,i=this.op===Iw.Prod?"1.0":"0.0",s=n?i:`getX(${xA(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=a?`end != ${o-1}`:"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${g9(r)} coords = getOutputCoords();
        int end = ${xP(r,"coords",this.op)};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${xP(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${xA(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function xA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function xP(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function xB(e,t,n,a,r,i){let s=t.shape.length,o=iV([a],s),l=t;null!=o&&(l=yY({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=i$(1,s)[0];if(u!==s-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let h=l.shape[u],d=yT({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(h))-1;t++){let a=new xO(e,l.shape,!1,i),r=[[t]],s=d;d=n.runWebGLProgram(a,[d],d.dtype,r),n.disposeIntermediateTensorInfo(s)}if(r){let t=new xO(e,l.shape,r,i),a=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){let e=yY({inputs:{x:d},backend:n,attrs:{perm:iX(o)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}class xH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class xU{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=be(this.outputShape.length);let i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=a?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${s}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${u}
        setOutput(result);
      }
    `}}class x_{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=be(this.outputShape.length);let i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<h;e++)d+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<h;e++)d+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(h+1)/2;e++){let t=2*e;if(d+=`
          xC = xCCorner + ${t*l};
          `,1===o){if(t<h&&(s%2==1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===l&&t>0?d+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<h)){let e=s%2==0?c(l):l;l%2==0&&s%2==1||l%2!=0&&s%2!=1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:d+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?d+=`
                    xC${t+1} = xTexelC${t};
                    `:d+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<h&&(s%2==1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<h&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<h&&(d+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<h&&(d+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<h&&(d+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  
      }
    `;let p="",f="";n&&(p=a?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${f}
        setOutput(result);
      }
    `}}class xY{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xQ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xJ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}class xj{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:d}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${s}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let xq=yE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),x0=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,x1=yz({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:bI}),x2=yE({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = 0.3275911;
  float a1 = 0.254829592;
  float a2 = -0.284496736;
  float a3 = 1.421413741;
  float a4 = -1.453152027;
  float a5 = 1.061405429;

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),x3=yE({opSnippet:yM+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:bw,dtype:"float32"});function x9(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice(),l=r;return r<0&&(f(-(s+1)<=r,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+r+1),o.splice(l,0,1),yD({inputs:{x:i},backend:a,attrs:{shape:o}})}let x5="return exp(x) - 1.0;",x4=yE({opSnippet:x5,packedOpSnippet:x5,cpuKernelImpl:bS});class x7{constructor(e,t,n){let a;this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else if("imag"===e)a="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function x8(e,t,n){let a=n.texData.get(e.dataId),r=b(e.shape),i=e.shape[e.shape.length-1],s=yD({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}}),o=s.shape,l=new x7("real",o,t),u=new x7("imag",o,t),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,h,"float32"),c=n.runWebGLProgram(u,h,"float32"),p=yN({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let f=yD({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),f}class x6{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function ke(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:i}=n;if("string"===(i=i||W(r))){let e=C(i,b(a));return e.fill(r),t.makeTensorInfo(a,i,e)}{let e=new x6(a,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}class kt{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let kn="return floor(x);",ka=yE({opSnippet:kn,packedOpSnippet:kn,cpuKernelImpl:bC}),kr=yz({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"});class ki{constructor(e){this.variableNames=["A"];let t=gP(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class ks{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=gP(),[n,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}let ko,kl=B.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class ku{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;let r=g9(n.length),i=`
    int index;`;for(let e=0;e<this.sliceDim;e++)i+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}class kh{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=g9(this.rank),a=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function kd(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a,l=w(s,r.shape)[0];if(B.get("DEBUG")){let e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){let a=e[n];f(a<=t-1&&a>=0,()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`)}}let u=uo(r,i,l,o),h=b(i.shape),d=[],c=yD({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=yD({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(c),d.push(p);let m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){let e=n.bufferSync(p),t=bN(n.bufferSync(c),e,m);return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,t.dtype,t.values)}let g=new kh(c.shape,m),y=n.runWebGLProgram(g,[c,p],c.dtype);d.push(y);let x=yD({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}let kc=yz({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:bR,dtype:"bool"}),kp=yz({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:bG}),kf=yE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),km=yE({opSnippet:"return float(isinf(x));",dtype:"bool"}),kg=yE({opSnippet:"return float(isnan(x));",dtype:"bool"}),kb=yz({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:bW,dtype:"bool"}),ky=yz({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:bL,dtype:"bool"}),kx=yE({opSnippet:yM+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:bE}),kk=yE({opSnippet:yM+`
  return log(1.0 + x);
`}),kv=yz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),kI=yE({opSnippet:"return float(!(x >= 1.0));"}),kw=yz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"});class kS{constructor(e,t,n,a,r){let i;this.variableNames=["x"],this.outputShape=[];let s=e[3]-1;this.outputShape=e;let o=`float(${n}) + float(${a}) * sum`;i=.5===r?`inversesqrt(${o})`:1===r?`1.0/(${o})`:`exp(log(${o}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${s}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}}class kC{constructor(e,t,n,a,r){let i;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e[3]-1;this.outputShape=e;let o=`float(${n}) + float(${a}) * sum`;i=.5===r?`inversesqrt(${o})`:1===r?`1.0/(${o})`:`exp(log(${o}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}}class kT{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}function kN(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{reductionIndices:s,keepDims:o}=r,l=i.shape.length,u=w(s,i.shape),h=u,d=iV(h,l),c=null!=d,p=a.shouldExecuteOnCPU([i]),f=i;if(c){if(p){let e=a.texData.get(f.dataId).values,t=Array(l);for(let e=0;e<t.length;e++)t[e]=i.shape[d[e]];let n=b8(e,i.shape,i.dtype,d,t);f=a.makeTensorInfo(t,i.dtype),a.texData.get(f.dataId).values=n}else f=yU(i,d,a);h=i$(h.length,l)}iz("max",h,l);let[m,g]=iM(f.shape,h),y=m;if(o&&(y=iE(m,u)),p){let e=bz(a.texData.get(f.dataId).values,b(g),y,i.dtype);t=a.makeTensorInfo(y,i.dtype),a.texData.get(t.dataId).values=e}else t=function(e,t,n,a){let r=b(t),i=b(e.shape)/r,s=yD({inputs:{x:e},attrs:{shape:[i,r]},backend:a}),o=yP(s,e.dtype,"max",a),l=yD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),l}(f,g,y,a);return c&&a.disposeIntermediateTensorInfo(f),t}let kR=yz({opSnippet:yI+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+yS+`
  return result;
`,cpuKernelImpl:bV});class kG{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=r-1-e.padInfo.top,o=i-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${r*i-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class kW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,d=l-1-e.padInfo.top,c=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${s}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let kL=yz({opSnippet:yI+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+yS+`
  return result;
`,cpuKernelImpl:bX});class kM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=g9(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;if(1===a){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${s});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}}class kE{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=g9(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=yt("rc",a),l=yt("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,h=1===a?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1,c="";if(1===a){let e=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;c=`
        ${r} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[a-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{let e=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;c=`
        ${r} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[a-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${o[a-2]} += 1;
        if(${o[a-2]} < ${this.outputShape[a-2]}) {
          ${e}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${o[a-1]} += 1;
          if(${u}) {
            ${e}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${s});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}}let kz=yz({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+yS+`
  return result;
`});class kV{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}let kX=yz({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),k$="return a - b;",kF=yz({opSnippet:k$,packedOpSnippet:k$,supportsComplex:!0,cpuKernelImpl:b5});function kZ(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=w([i],r.shape),o=kN({inputs:{x:r},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),l=iE(o.shape,s),u=yD({inputs:{x:o},backend:n,attrs:{shape:l}}),h=kF({inputs:{a:r,b:u},backend:n}),d=x3({inputs:{x:h},backend:n}),c=y_({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:!1}}),p=yD({inputs:{x:c},backend:n,attrs:{shape:l}}),f=kX({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),f}let kK=yu+`
  return -x;
`,kD=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class kO{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${n}),
                      float(index == coords.y)));
      }
    `}}function kA(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"!==a.dtype)return ke({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n});{let e=xm({inputs:{input:a},backend:n}),t=kA({inputs:{x:e},backend:n}),r=xC({inputs:{input:a},backend:n}),i=kA({inputs:{x:r},backend:n}),s=yN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}}class kP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=g9(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(1===a){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${s});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}}class kB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=g9(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=yt("rc",a),l=yt("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,h=1===a?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;
       if(${u}) {
      `,1===a?"":`}
       rc = outputLoc;
       ${o[a-2]} += 1;
       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;
         if(${u}) {`],c=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="";for(let e=0,t=1===a?2:4;e<t;e++)p+=`
        ${d[e]}
        if (${c}) {
          result[${e}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${h});
        }
      `;p+=1===a?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${s});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}let kH=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;if(0===b(r.shape))return ke({backend:n,attrs:{shape:i.map((e,t)=>e[0]+r.shape[t]+e[1]),value:s,dtype:r.dtype}});let o=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kB(r.shape,i,s):new kP(r.shape,i,s),l=[[s]];return n.runWebGLProgram(o,[r],r.dtype,l)},kU=yz({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+yS+`
  return result;
`}),k_=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=bP(a,r,i,s);return t.makeTensorInfo([o.length],s,o)},kY=yE({opSnippet:"return 1.0 / x;"}),kQ=yE({opSnippet:yu+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),kJ=yE({opSnippet:yu+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`});class kj{constructor(e,t,n,a,r){let i;this.variableNames=["A"],this.outputShape=[];let[s,o,l,u]=e;this.outputShape=[s,t,n,u];let h=[a&&t>1?o-1:o,a&&n>1?l-1:l],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];i=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${i};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class kq{constructor(e,t,n,a,r){let i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,l,u]=e;this.outputShape=[s,t,n,u];let h=[a&&t>1?o-1:o,a&&n>1?l-1:l],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];i=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${i};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}class k0{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],h=o[1]/l[1],d=1/u,c=1/h,p=2*Math.ceil(d)+2,f=2*Math.ceil(c)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${c});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class k1{constructor(e,t,n,a,r){let i;this.variableNames=["A"],this.outputShape=[];let[s,o,l,u]=e;this.outputShape=[s,t,n,u];let h=[a&&t>1?o-1:o,a&&n>1?l-1:l],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];i=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${i};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${a?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class k2{constructor(e,t,n,a,r){let i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,l,u]=e;this.outputShape=[s,t,n,u];let h=[a&&t>1?o-1:o,a&&n>1?l-1:l],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];i=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${i};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${a?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}class k3{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],h=o[1]/l[1],d=1/u,c=1/h,p=2*Math.ceil(d)+2,f=2*Math.ceil(c)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${c});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class k9{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let a=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,r=e.map((e,t)=>a(t)).join(","),i=g9(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}class k5{constructor(e,t){var n,a,r;this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let i=e.length;if(i>4)throw Error(`WebGL backend: Reverse of rank-${i} tensor is not yet supported`);this.outputShape=e;let s=yt("rc",i),o=`${s[i-1]} + 1 < ${this.outputShape[i-1]}`,l=`${s[i-2]} + 1 < ${this.outputShape[i-2]}`,u=g9(i);function h(n){let a=e.map((a,r)=>-1!==t.indexOf(r)&&1!==e[r]?`${e[r]} - ${n[r]} - 1`:`${n[r]}`),r=a.join(","),i=a.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${i}))`}1===i?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${u} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${h(s.slice())};
          if(${o}){
            result.g = ${(n=s.slice())[i-1]="("+n[i-1]+" + 1)",h(n)};
          }
          if(${l}) {
            result.b = ${(a=s.slice())[i-2]="("+a[i-2]+" + 1)",h(a)};
            if(${o}) {
              result.a = ${(r=s.slice())[i-1]="("+r[i-1]+" + 1)",r[i-2]="("+r[i-2]+" + 1)",h(r)};
            }
          }
          setOutput(result);
        }
    `}}class k4{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let k7=yE({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),k8=yE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:bB});class k6{constructor(e,t,n,a,r,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let l=g9(r.length),u=g9(i.length),h="";1===n?h="i":2===n&&(h="i, j");let d=`getIndices(${h})`,c="";1===a?c="i":2===a&&(c="i, coords[1]");let p=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}class ve{constructor(e,t,n,a,r,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let l=g9(r.length),u=g9(i.length),h="";1===n?h="i":2===n&&(h="i, j");let d=`getIndices(${h})`,c="";1===a?c="i":2===a&&(c="i, coords[1]");let p=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}class vt{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===B.getNumber("WEBGL_VERSION")?"while (left < right) {":r;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===a?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}class vn{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<t.length;a++)s.push(`${n[a]}`),a<e&&i.push(`${n[a]}`);a=i.join(),r=s.join()}let i=g9(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}let va=yE({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = 1.7580993408473768;
  float scale = 1.0507009873554805;
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),vr=yE({opSnippet:yM+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:bU}),vi=yE({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),vs=yE({opSnippet:yM+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${yS}
  return result;
`}),vo=yE({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),vl=yE({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),vu="return sqrt(x);",vh=yE({opSnippet:vu,packedOpSnippet:vu,cpuKernelImpl:bq}),vd=yE({opSnippet:"return x * x;"}),vc="return (a - b) * (a - b);",vp=yz({opSnippet:vc,packedOpSnippet:vc});class vf{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=g9(n.length),i=g9(n.length),s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}let vm=yE({opSnippet:"return tan(x);"}),vg=yE({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`});class vb{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let a=g9(this.rank),r=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function vy(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;if("string"===r.dtype||r.shape.length>5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map(e=>ar(e)):e,a=b4(rh(r.shape,r.dtype,t),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}let s=new vb(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}class vx{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class vk{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function vv(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function vI(e){let t=1;for(;t<e;)t*=2;return t}class vw{constructor(e,t,n,a,r,i){let s;switch(this.variableNames=["Image","Transforms"],this.outputShape=i,a){case"constant":default:s=1;break;case"reflect":s=2;break;case"wrap":s=3;break;case"nearest":s=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${s} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===n?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}class vS{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,s=i*Math.ceil(r/n);this.outputShape=[a,s];let o=4*Math.floor(n/4),l=n%4,u=`
        sumValue += dot(values, segFilter);
    `,h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}for(let e of[{kernelName:nm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:d}=a;return yQ({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:d,activation:h})}},{kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=b_(a.texData.get(r.dataId).values);return a.makeTensorInfo(r.shape,r.dtype,e)}return t=B.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yb(r.shape,yJ):new yl(r.shape,yJ),a.runWebGLProgram(t,[r],r.dtype)}},{kernelName:_,backendName:"webgl",kernelFunc:yj},{kernelName:Y,backendName:"webgl",kernelFunc:yq},{kernelName:"Add",backendName:"webgl",kernelFunc:y1},{kernelName:Q,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t;if(1===n.length)return yT({inputs:{x:n[0]},backend:a});if(n.length>B.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(n.length/2),r=e({inputs:n.slice(0,t),backend:a}),i=e({inputs:n.slice(t),backend:a});return e({inputs:[r,i],backend:a})}let r=n.map(e=>e.dtype).reduce((e,t)=>ax(e,t)),i=n.map(e=>e.shape),s=B.getBool("WEBGL_PACK")?new y3(n[0].shape,i):new y2(n[0].shape,i);return a.runWebGLProgram(s,n,r)}},{kernelName:"All",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=w(s,i.shape),h=u,d=iV(h,l),c=i;null!=d&&(c=yY({inputs:{x:i},backend:a,attrs:{perm:d}}),h=i$(h.length,l)),iz("all",h,l);let[p,f]=iM(c.shape,h),m=yD({inputs:{x:c},backend:a,attrs:{shape:[-1,b(f)]}}),g=yP(m,m.dtype,"all",a);return t=o?yD({inputs:{x:g},backend:a,attrs:{shape:iE(p,u)}}):yD({inputs:{x:g},backend:a,attrs:{shape:p}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(c),t}},{kernelName:"Any",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=w(s,i.shape),h=u,d=iV(h,l),c=i;null!=d&&(c=yY({inputs:{x:i},backend:a,attrs:{perm:d}}),h=i$(h.length,l)),iz("any",h,l);let[p,f]=iM(c.shape,h),m=yD({inputs:{x:c},backend:a,attrs:{shape:[-1,b(f)]}}),g=yP(m,m.dtype,"any",a);return t=o?yD({inputs:{x:g},backend:a,attrs:{shape:iE(p,u)}}):yD({inputs:{x:g},backend:a,attrs:{shape:p}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(c),t}},{kernelName:J,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=w(i,r.shape),o=iV(s,r.shape.length),l=r,u=[];null!=o&&(u.push(l=yY({inputs:{x:r},backend:n,attrs:{perm:o}})),s=i$(s.length,l.shape.length)),iz("argMax",[s[0]],l.shape.length);let h=y4(n,l,s[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},{kernelName:j,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=w(i,r.shape),o=iV(s,r.shape.length),l=r,u=[];null!=o&&(u.push(l=yY({inputs:{x:r},backend:n,attrs:{perm:o}})),s=i$(s.length,l.shape.length)),iz("argMin",[s[0]],l.shape.length);let h=y4(n,l,s[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},{kernelName:q,backendName:"webgl",kernelFunc:y7},{kernelName:ee,backendName:"webgl",kernelFunc:y8},{kernelName:et,backendName:"webgl",kernelFunc:y6},{kernelName:ea,backendName:"webgl",kernelFunc:xe},{kernelName:en,backendName:"webgl",kernelFunc:xt},{kernelName:er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;gO(r,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;f(rK(s,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u=rW(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return yT({inputs:{x:r},backend:n});let h=new xn(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}},{kernelName:es,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,h=new xa(rL(r.shape,i,s,[1,1,1],o,l,u),"avg",!1);return n.runWebGLProgram(h,[r],"float32")}},{kernelName:eo,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,h=new xi(rL(i.shape,s,o,[1,1,1],l,u));return n.runWebGLProgram(h,[r],i.dtype)}},{kernelName:ei,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t;gO([r,i],"avgPoolGrad");let{filterSize:s,strides:o,pad:l}=a,u=new xr(rW(i.shape,s,o,1,l));return n.runWebGLProgram(u,[r],i.dtype)}},{kernelName:el,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;return yQ({a:r,b:i,transposeA:s,transposeB:o,backend:n})}},{kernelName:e_,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:i,offset:s,scale:o}=e;f(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f(null==s||r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f(null==o||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[a,r,i],h=null;null!=s&&(h=s.shape,u.push(s));let d=null;null!=o&&(d=o.shape,u.push(o));let c=B.getBool("WEBGL_PACK_NORMALIZATION")?new xo(a.shape,r.shape,i.shape,h,d,l):new xs(a.shape,r.shape,i.shape,h,d,l);return t.runWebGLProgram(c,u,u[0].dtype)}},{kernelName:eu,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;f(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=l$(r.shape,i,o),u=lF(l.length,i.length),h=lZ(r.shape,i,o),d=lK(s,i.length),c=lD(h,s,i.length),p=[],m=yD({inputs:{x:r},backend:n,attrs:{shape:l}}),g=yY({inputs:{x:m},backend:n,attrs:{perm:u}}),b=yD({inputs:{x:g},backend:n,attrs:{shape:h}}),y=xd({inputs:{x:b},backend:n,attrs:{begin:d,size:c}});return p.push(m),p.push(g),p.push(b),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},{kernelName:eh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=bg(n.readSync(r.dataId),n.readSync(i.dataId),i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}},{kernelName:ed,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a}=e,{a:r,b:i}=n,s=B.getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=B.getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([r,i])||1===o){let e=a.texData.get(r.dataId).values,t=a.texData.get(i.dataId).values,[n,s]=by(r.shape,i.shape,e,t,r.dtype),o=a.makeTensorInfo(s,r.dtype);return a.texData.get(o.dataId).values=n,o}return t=s?new yC(xc,r.shape,i.shape,!1):new yw(xp,r.shape,i.shape),a.runWebGLProgram(t,[r,i],r.dtype)}},{kernelName:ec,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.readSync(a.dataId),s=n.readSync(r.dataId),o=iv(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:ep,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:i}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return yT({inputs:{x:i},backend:a});let t=sb(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=yN({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){let t=xm({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!T(i.dtype,s)){let e=yT({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([i])){let[e,t,n]=bx(a.texData.get(i.dataId).values,i.shape,i.dtype,s);return a.makeTensorInfo(e,t,n)}if("int32"===s)return function(e,t){let n=new yl(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===s){let e=a.makeTensorInfo([],"bool",C("bool",1)),t=xf({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},{kernelName:ef,backendName:"webgl",kernelFunc:xb},{kernelName:em,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{clipValueMin:s,clipValueMax:o}=r;return t=B.getBool("WEBGL_PACK_CLIP")?new xx(i.shape):new xy(i.shape),a.runWebGLProgram(t,[i],i.dtype,[[s],[o]])}},{kernelName:eg,backendName:"webgl",kernelFunc:yN},{kernelName:eb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),i=new xk(a.shape),s=[xv(a,r.complexTensorInfos.real),xv(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}},{kernelName:ey,backendName:"webgl",kernelFunc:xT},{kernelName:ex,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}=r,c=rO(u),p=rM(i.shape,s.shape,o,h,l,d,!1,c);if(1===p.filterHeight&&1===p.filterWidth&&1===p.dilationHeight&&1===p.dilationWidth&&1===p.strideHeight&&1===p.strideWidth&&("SAME"===p.padInfo.type||"VALID"===p.padInfo.type))t=xM({x:i,filter:s,convInfo:p,backend:a});else if(p.strideWidth<=2&&"channelsLast"===c&&B.getBool("WEBGL_EXP_CONV")){let e=new xG(p),n=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];t=a.runWebGLProgram(e,[i,s],"float32",n)}else if(B.getBool("WEBGL_CONV_IM2COL"))t=xE({x:i,filter:s,convInfo:p,backend:a});else{let e=new xN(p);t=a.runWebGLProgram(e,[i,s],"float32")}let f=yD({inputs:{x:t},backend:a,attrs:{shape:p.outShape}});return a.disposeIntermediateTensorInfo(t),f}},{kernelName:ek,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=a,d=rO(l),c=new xz(rM(r.shape,h,s,1,o,u,!1,d));return n.runWebGLProgram(c,[r,i],"float32")}},{kernelName:ev,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=a,d=rO(u),c=rM(s,i.shape,o,1,l,h,!1,d);if(B.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){let e=[[c.strideHeight,c.strideWidth]],t=new xF(c);return n.runWebGLProgram(t,[r,i],"float32",e)}{let e=new xV(c);return n.runWebGLProgram(e,[r,i],"float32")}}},{kernelName:eI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=new xR(rE(r.shape,i.shape,s,l,o));return n.runWebGLProgram(u,[r,i],"float32")}},{kernelName:ew,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a,u=new xX(rE(r.shape,l,s,1,o));return n.runWebGLProgram(u,[r,i],"float32")}},{kernelName:eS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a,u=new x$(rE(l,i.shape,o,1,s));return n.runWebGLProgram(u,[r,i],"float32")}},{kernelName:"Cos",backendName:"webgl",kernelFunc:xZ},{kernelName:eC,backendName:"webgl",kernelFunc:xK},{kernelName:eR,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,h=new xD(r.shape,i.shape,o,l,u);return n.runWebGLProgram(h,[r,i,s],"float32")}},{kernelName:eT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return xB(Iw.Prod,r,n,i,s,o)}},{kernelName:eN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return xB(Iw.Sum,r,n,i,s,o)}},{kernelName:eG,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=bg(n.readSync(r.dataId),n.readSync(i.dataId),i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=bb(n.bufferSync(r),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},{kernelName:eW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l="NHWC"===s?r.shape[1]:r.shape[2],u="NHWC"===s?r.shape[2]:r.shape[3],h="NHWC"===s?r.shape[3]:r.shape[1],d=l*i,c=u*i,p=h/(i*i),f=new xH("NHWC"===s?[o,d,c,p]:[o,p,d,c],i,s);return n.runWebGLProgram(f,[r],r.dtype)}},{kernelName:eL,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dilations:u,dimRoundingMode:h}=r,d=u;null==d&&(d=[1,1]),f(rK(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let c=rM(i.shape,s.shape,o,d,l,h,!0);t=B.getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?new x_(c):new xU(c);let p=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return a.runWebGLProgram(t,[i,s],"float32",p)}},{kernelName:eM,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=a,d=new xY(rM(r.shape,h,s,o,l,u,!0));return n.runWebGLProgram(d,[r,i],"float32")}},{kernelName:eE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=a,d=new xQ(rM(h,i.shape,s,o,l,u,!0));return n.runWebGLProgram(d,[r,i],"float32")}},{kernelName:ez,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],i=b(a.shape),s=yD({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new xJ(i),l=n.runWebGLProgram(o,[s],s.dtype),u=yD({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),u}},{kernelName:eV,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dilations:u}=r,h=rG(i.shape,s.shape,o,l,"NHWC",u),d=new xj(h),c=yD({inputs:{x:t=a.runWebGLProgram(d,[i,s],"float32")},backend:a,attrs:{shape:h.outShape}});return a.disposeIntermediateTensorInfo(t),c}},{kernelName:eZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,{allDims:i,summedDims:s,idDims:o}=lJ(r,t.length);lq(i.length,o,t);let{path:l,steps:u}=l0(s,o),h=u.length,d=null,c=i.length,p=[];for(let e=0;e<h;++e){for(let a of u[e]){let e;let{permutationIndices:r,expandDims:i}=lj(c,o[a]);l1(r)?e=t[a]:(e=yY({inputs:{x:t[a]},backend:n,attrs:{perm:r}}),p.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);y(e.shape,s)||(e=yD({inputs:{x:e},backend:n,attrs:{shape:s}}),p.push(e)),null===d?d=e:(d=yK({inputs:{a:e,b:d},backend:n}),p.push(d))}e<h-1&&(l[e]>=0&&(d=y_({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-c),keepDims:!1}}),p.push(d)),c--)}for(let e of p)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},{kernelName:"Elu",backendName:"webgl",kernelFunc:xq},{kernelName:eK,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=B.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yC(x0,a.shape,r.shape):new yw("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(i,[a,r],a.dtype)}},{kernelName:eD,backendName:"webgl",kernelFunc:x1},{kernelName:"Erf",backendName:"webgl",kernelFunc:x2},{kernelName:"Exp",backendName:"webgl",kernelFunc:x3},{kernelName:eO,backendName:"webgl",kernelFunc:x9},{kernelName:eA,backendName:"webgl",kernelFunc:x4},{kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return x8(a,!1,n)}},{kernelName:eP,backendName:"webgl",kernelFunc:ke},{kernelName:eB,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=new kt(n.shape);return t.runWebGLProgram(a,[n],n.dtype)}},{kernelName:eH,backendName:"webgl",kernelFunc:ka},{kernelName:eU,backendName:"webgl",kernelFunc:kr},{kernelName:np,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:i}=a,s="u">typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="u">typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[u,l],d=[u,l,i];if(o||s){let e=B.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==ko||e!==kl)&&(kl=e,ko=document.createElement("canvas").getContext("2d",{willReadFrequently:kl})),ko.canvas.width=l,ko.canvas.height=u,ko.drawImage(r,0,0,l,u),r=ko.canvas}let c=n.makeTensorInfo(h,"int32");n.texData.get(c.dataId).usage=Iv.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),r);let p=B.getBool("WEBGL_PACK")?new ks(d):new ki(d),f=n.runWebGLProgram(p,[c],"int32");return n.disposeData(c.dataId),f}},{kernelName:ng,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:d,dilations:c,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=rO(d),b=rM(i.shape,s.shape,u,c,h,p,!1,g),y=[],x=null!=o,k=null!=l,v="leakyrelu"===f,I=()=>{let e=[i,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=yD({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(o,d)),k&&e.push(t(l,d)),v){let t=a.makeTensorInfo([],"float32",ae(m,"float32"));e.push(t),y.push(t)}return e};if(1===b.filterHeight&&1===b.filterWidth&&1===b.dilationHeight&&1===b.dilationWidth&&1===b.strideHeight&&1===b.strideWidth&&("SAME"===b.padInfo.type||"VALID"===b.padInfo.type))t=xM({x:i,filter:s,convInfo:b,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(b.strideWidth<=2&&"channelsLast"===g&&B.getBool("WEBGL_EXP_CONV")){let e=new xG(b,x,f?yV(f,!0):null,k,v),n=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],r=I();t=a.runWebGLProgram(e,r,"float32",n)}else if(B.getBool("WEBGL_CONV_IM2COL"))t=xE({x:i,filter:s,convInfo:b,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=new xN(b,x,f?yV(f,!1):null,k,v),n=I();t=a.runWebGLProgram(e,n,"float32")}let w=yD({inputs:{x:t},backend:a,attrs:{shape:b.outShape}});return y.push(t),y.forEach(e=>a.disposeIntermediateTensorInfo(e)),w}},{kernelName:nb,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:m}=r,g=[],b=d;null==b&&(b=[1,1]),f(rK(u,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${b}'`);let y=rM(i.shape,s.shape,u,b,h,c,!0),x=B.getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,k=p?yV(p,x):null,v=[i,s],I=null!=o,w=null!=l,S="leakyrelu"===p;if(I&&v.push(o),w&&v.push(l),S){let e=a.makeTensorInfo([],"float32",ae(m,"float32"));v.push(e),g.push(e)}t=x?new x_(y,I,k,w,S):new xU(y,I,k,w,S);let C=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=a.runWebGLProgram(t,v,"float32",C);return g.forEach(e=>a.disposeIntermediateTensorInfo(e)),T}},{kernelName:eQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=r.shape,s=i[i.length-1],o=b(a.shape),[l,u,h,d]=lh(a,r),c=yD({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),p=yD({inputs:{x:a},backend:n,attrs:{shape:[b(a.shape)/h,h]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=bT(n.readSync(r.dataId),n.bufferSync(a),a.dtype,u,s,h,d,a.shape,o);return n.makeTensorInfo(l,a.dtype,e.values)}let f=new ku(s,d,[u,h],a.shape),m=n.runWebGLProgram(f,[p,c],p.dtype),g=yD({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}},{kernelName:eY,backendName:"webgl",kernelFunc:kd},{kernelName:eJ,backendName:"webgl",kernelFunc:kc},{kernelName:ej,backendName:"webgl",kernelFunc:kp},{kernelName:eq,backendName:"webgl",kernelFunc:yT},{kernelName:e0,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return x8(a,!0,n)}},{kernelName:e1,backendName:"webgl",kernelFunc:xC},{kernelName:e2,backendName:"webgl",kernelFunc:kf},{kernelName:e3,backendName:"webgl",kernelFunc:km},{kernelName:e9,backendName:"webgl",kernelFunc:kg},{kernelName:e5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a,s=n.makeTensorInfo([],"float32",ae(i,"float32")),o=B.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yC(yG,r.shape,s.shape):new yw(yR,r.shape,s.shape),l=n.runWebGLProgram(o,[r,s],"float32");return n.disposeIntermediateTensorInfo(s),l}},{kernelName:e4,backendName:"webgl",kernelFunc:kb},{kernelName:e7,backendName:"webgl",kernelFunc:ky},{kernelName:e8,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=bM(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},{kernelName:"Log",backendName:"webgl",kernelFunc:kx},{kernelName:e6,backendName:"webgl",kernelFunc:kk},{kernelName:te,backendName:"webgl",kernelFunc:kv},{kernelName:tt,backendName:"webgl",kernelFunc:kI},{kernelName:tn,backendName:"webgl",kernelFunc:kw},{kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a,u=B.getBool("WEBGL_PACK_NORMALIZATION")?new kC(r.shape,i,s,o,l):new kS(r.shape,i,s,o,l);return n.runWebGLProgram(u,[r],r.dtype)}},{kernelName:ta,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=a,d=new kT(r.shape,o,l,u,h);return n.runWebGLProgram(d,[r,i,s],r.dtype)}},{kernelName:"Max",backendName:"webgl",kernelFunc:kN},{kernelName:tr,backendName:"webgl",kernelFunc:kR},{kernelName:ti,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;gO(r,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;f(rK(s,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u=rW(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return yT({inputs:{x:r},backend:n});let h=new xn(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}},{kernelName:to,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,h=new xa(rL(r.shape,i,s,[1,1,1],o,u,l),"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}},{kernelName:tl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,h=rL(i.shape,s,o,[1,1,1],l,u),d=new xa(h,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),p=new kW(h),f=n.runWebGLProgram(p,[r,c],i.dtype);return n.disposeIntermediateTensorInfo(c),f}},{kernelName:ts,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t;gO([i,s],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=a,d=rW(i.shape,o,l,1,u,h),c=new xn(d,"max",!0),p=n.runWebGLProgram(c,[i],i.dtype),f=new kG(d),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},{kernelName:tu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=t;f(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let l=[1,1];f(rK(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let u=rW(a.shape,r,i,l,s),[h,d]=function(e,t,n,a){let r=new xn(n,"max",!1),i=a.runWebGLProgram(r,[e],"float32");return r=new xn(n,"max",!0,!0,t),[i,a.runWebGLProgram(r,[e],"float32")]}(a,o,u,n);return[h,d]}},{kernelName:th,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:i}=t,s=a.shape.length,o=w(i,a.shape),l=o,u=iV(l,s),h=null!=u,d=n.shouldExecuteOnCPU([a]),c=[],p=a;if(h){if(d){let e=n.texData.get(p.dataId).values,t=Array(s);for(let e=0;e<t.length;e++)t[e]=a.shape[u[e]];let r=b8(e,a.shape,a.dtype,u,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=yU(a,u,n);c.push(p),l=i$(l.length,s)}iz("sum",l,s);let[f,m]=iM(p.shape,l),g=f;r&&(g=iE(f,o));let y=function(e,t,n,a){let r=b(t),i=b(e.shape)/r,s=yD({inputs:{x:e},attrs:{shape:[i,r]},backend:a}),o=yP(s,"float32","mean",a),l=yD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),l}(p,m,g,n);for(let e of c)n.disposeIntermediateTensorInfo(e);return y}},{kernelName:"Min",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=w(s,i.shape),h=u,d=iV(h,l),c=i;null!=d&&(c=yY({inputs:{x:i},backend:a,attrs:{perm:d}}),h=i$(h.length,i.shape.length)),iz("min",h,l);let[p,f]=iM(c.shape,h),m=yD({inputs:{x:c},backend:a,attrs:{shape:[-1,b(f)]}}),g=yP(m,m.dtype,"min",a);return t=o?yD({inputs:{x:g},backend:a,attrs:{shape:iE(p,u)}}):yD({inputs:{x:g},backend:a,attrs:{shape:p}}),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),null!=d&&a.disposeIntermediateTensorInfo(c),t}},{kernelName:td,backendName:"webgl",kernelFunc:kL},{kernelName:tc,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:i}=n,s=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kE(a.shape,r,i):new kM(a.shape,r,i);return t.runWebGLProgram(s,[a],a.dtype)}},{kernelName:"Mod",backendName:"webgl",kernelFunc:kz},{kernelName:tp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a,l=o?r:kZ({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=new kV(l.shape[0],l.shape[1],i),h=n.runWebGLProgram(u,[l],"int32",[[s]]);return o||n.disposeIntermediateTensorInfo(l),h}},{kernelName:tf,backendName:"webgl",kernelFunc:yK},{kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])){let[e,t]=bF(a.texData.get(r.dataId).values,r.shape,r.dtype);return a.makeTensorInfo(t,r.dtype,e)}return t=B.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yb(r.shape,kD):new yl(r.shape,kK),a.runWebGLProgram(t,[r],r.dtype)}},{kernelName:tg,backendName:"webgl",kernelFunc:function(e){var t;ny("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:n,backend:a,attrs:r}=e,{boxes:i,scores:s}=n,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r,{selectedIndices:h}=(t=a.readSync(i.dataId),oB(t,a.readSync(s.dataId),o,l,u,0));return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}},{kernelName:tb,backendName:"webgl",kernelFunc:function(e){ny("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,{selectedIndices:h,validOutputs:d}=oP(n.readSync(r.dataId),n.readSync(i.dataId),s,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},{kernelName:ty,backendName:"webgl",kernelFunc:function(e){var t;ny("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:n,backend:a,attrs:r}=e,{boxes:i,scores:s}=n,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=r,{selectedIndices:d,selectedScores:c}=(t=a.readSync(i.dataId),oB(t,a.readSync(s.dataId),o,l,u,h,!0));return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([c.length],"float32",new Float32Array(c))]}},{kernelName:tm,backendName:"webgl",kernelFunc:xf},{kernelName:tk,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=b(r.shape),h=new kO(u,s,o,l),d=yD({inputs:{x:r},backend:n,attrs:{shape:[u]}}),c=n.runWebGLProgram(h,[d],i);n.disposeIntermediateTensorInfo(d);let p=yD({inputs:{x:c},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(c),p}},{kernelName:tx,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==r.dtype)return ke({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a});{let t=xm({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=xC({inputs:{input:r},backend:a}),s=kA({inputs:{x:i},backend:a}),o=yN({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}}},{kernelName:tv,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return x9({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{m(i,e.shape,"All tensors passed to stack must have matching shapes"),f(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=xT({inputs:t.map(e=>{let t=x9({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}},{kernelName:tI,backendName:"webgl",kernelFunc:kH},{kernelName:"Pow",backendName:"webgl",kernelFunc:kU},{kernelName:tw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=B.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yC(yL,a.shape,r.shape):new yw(yW,a.shape,r.shape);return n.runWebGLProgram(i,[a,r],"float32")}},{kernelName:tS,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=[],h=w(s,i.shape),d=h,c=iV(d,l),p=i;if(null!=c&&(p=yY({inputs:{x:i},backend:a,attrs:{perm:c}}),d=i$(d.length,l),u.push(p)),iz("prod",d,l),a.shouldExecuteOnCPU([p])){let e=a.texData.get(p.dataId).values,{outVals:n,outShape:r,outDtype:i}=bK(p.shape,p.dtype,e,d);t=a.makeTensorInfo(r,i,n)}else{let[e,n]=iM(p.shape,d),r=yD({inputs:{x:p},backend:a,attrs:{shape:[-1,b(n)]}}),s=yP(r,ak(i.dtype),"prod",a);t=yD({inputs:{x:s},backend:a,attrs:{shape:e}}),u.push(r),u.push(s)}if(o){u.push(t);let e=iE(t.shape,h);t=yD({inputs:{x:t},backend:a,attrs:{shape:e}})}return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),t}},{kernelName:tC,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=a,l=r.map(e=>n.readSync(e.dataId)),u=r.map(e=>e.shape),h=n.readSync(i.dataId),d=n.readSync(s.dataId),[c,p,f]=bD(l,u,h,i.shape,i.dtype,d,s.shape,o),m=c.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}},{kernelName:tT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,h]=bO(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([h.length],a.dtype,h)]}},{kernelName:tN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),h=n.readSync(i.dataId),d=n.readSync(s.dataId),c=o.map(e=>n.readSync(e.dataId)),p=o.map(e=>e.shape),[f,m]=bA(u,r.shape,h,i.shape,i.dtype,d,s.shape,c,p,l);return n.makeTensorInfo(f,i.dtype,m)}},{kernelName:tR,backendName:"webgl",kernelFunc:k_},{kernelName:tG,backendName:"webgl",kernelFunc:xm},{kernelName:eF,backendName:"webgl",kernelFunc:kX},{kernelName:tW,backendName:"webgl",kernelFunc:kY},{kernelName:tL,backendName:"webgl",kernelFunc:kQ},{kernelName:t$,backendName:"webgl",kernelFunc:kJ},{kernelName:tM,backendName:"webgl",kernelFunc:yD},{kernelName:tV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,h=B.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kq(r.shape,l,u,i,s):new kj(r.shape,l,u,i,s);return n.runWebGLProgram(h,[r],"float32")}},{kernelName:tX,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new k0(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},{kernelName:tE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,h=B.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new k2(r.shape,l,u,i,s):new k1(r.shape,l,u,i,s);return n.runWebGLProgram(h,[r],r.dtype)}},{kernelName:tz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new k3(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},{kernelName:tF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=r.shape.length,o=w(i,r.shape);if(0===s)return yT({inputs:{x:r},backend:n});let l=B.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new k5(r.shape,o):new k9(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}},{kernelName:nf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:i,center:s}=t,o=new k4(a.shape,i),[l,u]=lX(s,a.shape[1],a.shape[2]),h=[[l,u,Math.sin(r),Math.cos(r)]];return n.runWebGLProgram(o,[a],a.dtype,h)}},{kernelName:tZ,backendName:"webgl",kernelFunc:k7},{kernelName:tK,backendName:"webgl",kernelFunc:k8},{kernelName:tD,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{indices:i,updates:s}=n,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:c}=oy(s,i,o),p=[c/h,h];if(0===c)return a.makeTensorInfo(o,i.dtype);let f=yD({inputs:{x:i},backend:a,attrs:{shape:[u,l]}}),m=yD({inputs:{x:s},backend:a,attrs:{shape:[u,h]}}),g=a.makeTensorInfo([],"float32",new Float32Array([0]));t=B.getBool("WEBGL_PACK")?new ve(u,l,f.shape.length,m.shape.length,d,p):new k6(u,l,f.shape.length,m.shape.length,d,p);let b=a.runWebGLProgram(t,[m,f,g],m.dtype),y=yD({inputs:{x:b},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(g),y}},{kernelName:tA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=new vt(r.shape[0],r.shape[1],i.shape[1],s),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}},{kernelName:tP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=new vn(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[a,r,i],ax(r.dtype,i.dtype))}},{kernelName:tB,backendName:"webgl",kernelFunc:va},{kernelName:tY,backendName:"webgl",kernelFunc:vr},{kernelName:t_,backendName:"webgl",kernelFunc:vi},{kernelName:"Sin",backendName:"webgl",kernelFunc:vs},{kernelName:tU,backendName:"webgl",kernelFunc:vo},{kernelName:tH,backendName:"webgl",kernelFunc:xd},{kernelName:t0,backendName:"webgl",kernelFunc:kZ},{kernelName:tQ,backendName:"webgl",kernelFunc:vl},{kernelName:tj,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;f(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...s);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);let u=[],h=kH({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=l$(h.shape,i,o,!1),c=lF(d.length,i.length,!1),p=lZ(h.shape,i,o,!1),m=yD({inputs:{x:h},backend:n,attrs:{shape:d}}),g=yY({inputs:{x:m},backend:n,attrs:{perm:c}}),b=yD({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(h),u.push(m),u.push(g),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},{kernelName:t1,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(2!==a.shape.length)throw Error(`Indices must be a matrix, saw:
         ${a.shape}`);if(1!==r.shape.length)throw Error(`Values must be a vector, saw:
         ${r.shape}`);if(0!==s.shape.length)throw Error(`Default value must be a scalar, saw:
        ${s.shape}`);let o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),h=n.readSync(s.dataId)[0],[d,c,p,f,m]=bQ(o,a.shape,a.dtype,l,r.dtype,u,h);return[n.makeTensorInfo(c,a.dtype,d),n.makeTensorInfo([c[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},{kernelName:t2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(i.dataId)),[u,h,d]=bJ(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(h,a.dtype,u),n.makeTensorInfo([d.length],i.dtype,new Int32Array(d))]}},{kernelName:t3,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
              ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,h]=bj(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(h,a.dtype,u)}},{kernelName:t9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
             ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,h]=bj(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(h,a.dtype,u)}},{kernelName:t5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:c}=oy(i,r,o);if("string"===i.dtype){let e=bH(n.bufferSync(r),n.bufferSync(i),o,c,h,u,l,d,ar(n.readSync(s.dataId)[0]),!1);return n.makeTensorInfo(o,e.dtype,e.values)}let p=new k6(u,l,r.shape.length,i.shape.length,d,[c,1],!1),f=n.runWebGLProgram(p,[i,r,s],i.dtype),m=yD({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},{kernelName:tq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=w(s,r.shape)[0],l=l2(r,i,o),u=Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let a=xd({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a})}},{kernelName:tJ,backendName:"webgl",kernelFunc:vh},{kernelName:t7,backendName:"webgl",kernelFunc:vd},{kernelName:t4,backendName:"webgl",kernelFunc:vp},{kernelName:t8,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw Error("Input must be of datatype string");let i=b0(ul(n.readSync(r.dataId)),"string",a);return n.makeTensorInfo(r.shape,"string",i)}},{kernelName:nc,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=yu+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new yl(a.shape,r);return n.runWebGLProgram(i,[a],a.dtype)}},{kernelName:t6,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=r,{finalShapeSparse:m,finalShape:g,isIdentity:b,sliceDim0:y,isSimpleSlice:x,begin:k,end:v,strides:I}=lw(i.shape,s,o,l,u,h,d,c,p);if(b)t=yD({inputs:{x:i},backend:a,attrs:{shape:g}});else if(y||x){f(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=lc(k,v,I),n=xd({inputs:{x:i},backend:a,attrs:{begin:k,size:e}});t=yD({inputs:{x:n},backend:a,attrs:{shape:g}}),a.disposeIntermediateTensorInfo(n)}else if(a.shouldExecuteOnCPU([i])){let e=a.readSync(i.dataId),n=b1(m,rh(i.shape,i.dtype,e),I,k);t=a.makeTensorInfo(g,i.dtype,n.values)}else{let e=new vf(k,I,m);t=a.runWebGLProgram(e,[i],i.dtype)}let w=yD({inputs:{x:t},backend:a,attrs:{shape:g}});return a.disposeIntermediateTensorInfo(t),w}},{kernelName:ne,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:h,dataSplits:d}=t,[c,p]=b2(n.readSync(h.dataId),n.readSync(d.dataId),r,i,s,o,l,u);return[n.makeTensorInfo([c.length],"string",c),n.makeTensorInfo(d.shape,"int32",p)]}},{kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(1!==i.shape.length)throw Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let[o,l,u]=b3(n.readSync(i.dataId),n.readSync(s.dataId)[0],r),h=l.length;return[n.makeTensorInfo([h,2],"int32",o),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:nn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(r<=0)throw Error("Number of buckets must be at least 1");let s=b9(n.readSync(i.dataId),r);return n.makeTensorInfo(i.shape,"int32",s)}},{kernelName:"Sub",backendName:"webgl",kernelFunc:kF},{kernelName:"Sum",backendName:"webgl",kernelFunc:y_},{kernelName:"Tan",backendName:"webgl",kernelFunc:vm},{kernelName:na,backendName:"webgl",kernelFunc:vg},{kernelName:tO,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=oy(s,i,r.shape),c=[d/u,u];if(0===d)return n.makeTensorInfo(r.shape,i.dtype);let p=yD({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=yD({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=yD({inputs:{x:r},backend:n,attrs:{shape:c}}),g=new k6(l,o,p.shape.length,f.shape.length,h,c,!1,!0),b=n.runWebGLProgram(g,[f,p,m],m.dtype),y=yD({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),y}},{kernelName:nr,backendName:"webgl",kernelFunc:vy},{kernelName:ni,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=B.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=B.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([r])||h<o||i>l){let[e,t]=b7(n.readSync(r.dataId),u,r.dtype,i,s);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[r,ke({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),c=null!==d&&d.isPacked,p=c?n.unpackTensor(r):r,f=b(u)/h,m=yD({inputs:{x:p},attrs:{shape:[f,h]},backend:n});c&&vv(n,p);let g=vI(i),y=vI(h),x=null,k=()=>null===x?[m,m]:[m,x],v=(e,t,a)=>{let r=k(),i=new vx(a),s=[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(i,r,"int32",s),vv(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=k(),a=new vk([f,e/2]),r=[[h],[null===x?1:0],[g]],i=x;x=n.runWebGLProgram(a,t,"int32",r),vv(n,i);let s=g/2,o=2*s;for(let e=s;e>=1;e/=2)v(o,e,x.shape)}let I=x;x=xd({inputs:{x:x},backend:n,attrs:{begin:0,size:[f,i]}}),vv(n,I);let w=kd({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});vv(n,m);let S=u.slice(0,-1);S.push(i),I=x,x=yD({inputs:{x:x},attrs:{shape:S},backend:n}),vv(n,I);let C=w;return w=yD({inputs:{x:w},attrs:{shape:S},backend:n}),vv(n,C),[w,x]}},{kernelName:ns,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=a,[h,d,c,p]=r.shape,[f,m]=u??[d,c],g=new vw(d,c,s,o,l,[h,f,m,p]);return n.runWebGLProgram(g,[r,i],"float32")}},{kernelName:no,backendName:"webgl",kernelFunc:yY},{kernelName:nl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;gO(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:s,outputShape:o,indices:l}=b6(a.readSync(i.dataId),r,i.shape,i.dtype);return[a.makeTensorInfo(o,i.dtype,s),a.makeTensorInfo([l.length],"int32",l)]}},{kernelName:nu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape.length,o=r.shape[i],l=Array(s-1),u=0;for(let e=0;e<s;e++)e!==i&&(l[u++]=r.shape[e]);let h=[],d=Array(s).fill(0),c=r.shape.slice();c[i]=1;let p=Array(o);for(let e=0;e<p.length;e++){d[i]=e;let t=xd({inputs:{x:r},backend:n,attrs:{begin:d,size:c}}),a=yD({inputs:{x:t},backend:n,attrs:{shape:l}});p[e]=a,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:nh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a,o=r.shape.length,l=[],u=0,h=iV([0],o),d=r;null!=h&&(d=yY({inputs:{x:r},backend:n,attrs:{perm:h}}),l.push(d),u=i$(1,o)[0]);let c=us(d.shape,u,s),p=b([d.shape[u]]),f=yD({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(f);let m=ak(r.dtype),g=(e,t,a,r,i)=>{let s=e.shape[0],o=e.shape[1],u=ui(o,i),h=new vS({windowSize:u,inSize:o,batchSize:s,numSegments:i},t),d=n.compileAndRun(h,[e,a],r);if(l.push(d),d.shape[1]===i)return d;let c=k_({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=vy({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(p),g(d,t,p,r,i)},y=yD({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:c}}),x=y;return null!=h&&(l.push(y),x=yY({inputs:{x:x},backend:n,attrs:{perm:iX(h)}})),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},{kernelName:nd,backendName:"webgl",kernelFunc:kA}])nw(e);let vC="",vT="u">typeof window&&window.Blob&&new Blob([atob(vC)],{type:"text/javascript;charset=utf-8"});function vN(e){let t;try{if(!(t=vT&&(window.URL||window.webkitURL).createObjectURL(vT)))throw"";let n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(t)}),n}catch{return new Worker("data:application/javascript;base64,"+vC,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}let vR=(e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]],vG=(e,t,n,a)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]}),vW=(e,t,n,a)=>{let{x:r,y:i,z:s}=vG(e,t,n);return{x:r/s,y:i/s}};class vL{constructor(e,t,n,a,r,i=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=i,this.trackingKeyframeList=[];for(let e=0;e<t.length;e++)this.trackingKeyframeList.push(t[e][1]);let s=0;for(let e=0;e<this.trackingKeyframeList.length;e++)s=Math.max(s,this.trackingKeyframeList[e].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let e=0;e<this.trackingKeyframeList.length;e++){let{featurePoints:t,imagePixels:n,imageProperties:a}=this._prebuild(this.trackingKeyframeList[e],s);this.featurePointsListT[e]=t,this.imagePixelsListT[e]=n,this.imagePropertiesListT[e]=a}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let a={},r=vR(this.projectionTransform,t),i=this._buildAdjustedModelViewTransform(r);this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height;let s=this.featurePointsListT[n],o=this.imagePixelsListT[n],l=this.imagePropertiesListT[n],u=this._computeProjection(i,e,n),{matchingPointsT:h,simT:d}=this._computeMatching(s,o,l,u),c=h.arraySync(),p=d.arraySync(),f=this.trackingKeyframeList[n],m=[],g=[],b=[];for(let e=0;e<c.length;e++)if(p[e]>.8&&e<f.points.length){b.push(e);let t=vW(r,c[e][0],c[e][1]);g.push(t),m.push({x:f.points[e].x/f.scale,y:f.points[e].y/f.scale,z:0})}return this.debugMode&&(a={projectedImage:u.arraySync(),matchingPoints:h.arraySync(),goodTrack:b,trackedPoints:g}),i.dispose(),u.dispose(),h.dispose(),d.dispose(),{worldCoords:m,screenCoords:g,debugExtra:a}}_computeMatching(e,t,n,a){let r=a.shape[0],i=a.shape[1],s=e.shape[0];if(!this.kernelCaches.computeMatching){let e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[s,441],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    int featureIndex = coords[0];
	    int searchOffsetIndex = coords[1];

	    int markerWidth = int(getMarkerProperties(0));
	    int markerHeight = int(getMarkerProperties(1));
	    float markerScale = getMarkerProperties(2);

	    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;
	    int searchOffsetY = searchOffsetIndex / 21 * 1;

	    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);
	    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);

	    int sx = sCenterX + searchOffsetX - 10;
	    int sy = sCenterY + searchOffsetY - 10;

	    if (sx < 6 || sx >= (${i} - 6) || sy < 6 || sy >= (${r} - 6)) {
	      setOutput(-2.);
	    } 
	    else {
	      float sumPoint = 0.;
	      float sumPointSquare = 0.;
	      float sumTemplate = 0.;
	      float sumTemplateSquare = 0.;
	      float sumPointTemplate = 0.;

	      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {
		for (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {
		  int fx2 = sCenterX + templateOffsetX - 6;
		  int fy2 = sCenterY + templateOffsetY - 6;

		  int sx2 = sx + templateOffsetX - 6;
		  int sy2 = sy + templateOffsetY - 6;

		  int markerPixelIndex = fy2 * markerWidth + fx2;
		  float markerPixel = getMarkerPixels(markerPixelIndex);
		  float targetPixel = getTargetPixels(sy2, sx2);

		  sumTemplate += markerPixel;
		  sumTemplateSquare += markerPixel * markerPixel;
		  sumPoint += targetPixel;
		  sumPointSquare += targetPixel * targetPixel;
		  sumPointTemplate += targetPixel * markerPixel;
		}
	      }

	      // Normalized cross-correlation
	      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)
	      float count = float(13 * 13);
	      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);
	      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);

	      if (pointVariance < 0.0000001) {
		setOutput(-3.);
	      } else if (templateVariance < 0.0000001) {
		//setOutput(sumTemplate);
		setOutput(-4.);
	      } else {
		sumPointTemplate -= sumPoint / count * sumTemplate;
		float sim = sumPointTemplate / pointVariance / templateVariance;  
		setOutput(sim);
	      }
	    }
	  }
	`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[s,2],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    float markerScale = getMarkerProperties(2);

	    int featureIndex = coords[0];

	    int maxIndex = int(getMaxIndex(featureIndex));
	    int searchLocationIndex = maxIndex / 441;
	    int searchOffsetIndex = imod(maxIndex, 441);

	    if (coords[1] == 0) {
	      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;
	      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);
	    }
	    else if (coords[1] == 1) {
	      int searchOffsetY = searchOffsetIndex / 21 * 1;
	      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);
	    }
	  }
	`},n={variableNames:["sims","maxIndex"],outputShape:[s],userCode:`
	  void main() {
	    int featureIndex = getOutputCoords();
	    int maxIndex = int(getMaxIndex(featureIndex));
	    setOutput(getSims(featureIndex, maxIndex));
	  }
	`};this.kernelCaches.computeMatching=[e,t,n]}return aP(()=>{let r=this.kernelCaches.computeMatching,i=this._compileAndRun(r[0],[e,t,n,a]),s=i.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[e,n,s]),simT:this._compileAndRun(r[2],[i,s])}})}_computeProjection(e,t,n){let a=this.trackingKeyframeList[n].width,r=this.trackingKeyframeList[n].height,i=this.trackingKeyframeList[n].scale,s=a+"-"+r+"-"+i;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[s]){let e={variableNames:["M","pixel"],outputShape:[r,a],userCode:`
	  void main() {
	      ivec2 coords = getOutputCoords();

	      float m00 = getM(0, 0) * 1000.;
	      float m01 = getM(0, 1) * 1000.;
	      float m03 = getM(0, 3) * 1000.;
	      float m10 = getM(1, 0) * 1000.;
	      float m11 = getM(1, 1) * 1000.;
	      float m13 = getM(1, 3) * 1000.;
	      float m20 = getM(2, 0) * 1000.;
	      float m21 = getM(2, 1) * 1000.;
	      float m23 = getM(2, 3) * 1000.;

	      float y = float(coords[0]) / float(${i});
	      float x = float(coords[1]) / float(${i});
	      float uz = (x * m20) + (y * m21) + m23;
	      float oneOverUz = 1. / uz;

	      float ux = (x * m00) + (y * m01) + m03;
	      float uy = (x * m10) + (y * m11) + m13;

	      ux = floor(ux * oneOverUz + 0.5);
	      uy = floor(uy * oneOverUz + 0.5);
	      setOutput(getPixel(int(uy), int(ux)));
	    }
	`};this.kernelCaches.computeProjection[s]=e}return aP(()=>{let n=this.kernelCaches.computeProjection[s];return this._compileAndRun(n,[e,t])})}_buildAdjustedModelViewTransform(e){return aP(()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let a=0;a<e[n].length;a++)t[n].push(e[n][a]/1e3)}return aD(t,[3,4])})}_prebuild(e,t){return aP(()=>{let n=e.scale,a=[];for(let r=0;r<t;r++)r<e.points.length?a.push([e.points[r].x/n,e.points[r].y/n]):a.push([-1,-1]);let r=aD(e.data,[e.width*e.height]),i=aD([e.width,e.height,e.scale],[3]);return{featurePoints:aD(a,[a.length,2],"float32"),imagePixels:r,imageProperties:i}})}_compileAndRun(e,t){let n=a_().compileAndRun(e,t);return aG.makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}let vM=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],vE=[];for(let e=0;e<vM.length;e++){let t=vM[e].sigma;for(let n=0;n<vM[e].points.length;n++){let a=vM[e].points[n];vE.push([t,a[0],a[1]])}}let vz={},vV={},vX={},v$={},vF=(vE.length-1)*vE.length/2,vZ=Math.ceil(vF/8),vK={},vD={},vO={},vA={},vP={},vB={};nw({kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:e=>{let t=e.inputs.image,n=e.backend,[a,r]=function(e){let t=e.shape[1],n=e.shape[0],a="w"+t+"h"+n;if(!vz.hasOwnProperty(a)){let e={variableNames:["p"],outputShape:[n,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0], coords[1]-2);
          sum += getP(coords[0], coords[1]-1) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0], coords[1]+1) * 4.;
          sum += getP(coords[0], coords[1]+2);
          setOutput(sum);
        }
      `},r={variableNames:["p"],outputShape:[n,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0]-2, coords[1]);
          sum += getP(coords[0]-1, coords[1]) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0]+1, coords[1]) * 4.;
          sum += getP(coords[0]+2, coords[1]);
          sum /= 256.;
          setOutput(sum);
        }
      `};vz[a]=[e,r]}return vz[a]}(t),i=n.runWebGLProgram(a,[t],t.dtype),s=n.runWebGLProgram(r,[i],t.dtype);return n.disposeIntermediateTensorInfo(i),s}}),nw({kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:e=>{let{image0:t,image1:n,image2:a}=e.inputs,r=e.backend,i=function(e){let t=e.shape[1],n=e.shape[0],a="w"+t+"h"+n;if(!vV.hasOwnProperty(a)){let e={variableNames:["image0","image1","image2"],outputShape:[n,t],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();
    
          int y = coords[0];
          int x = coords[1];
    
          float value = getImage1(y, x);
    
          // Step 1: find local maxima/minima
          if (value * value < 9.) {
            setOutput(0.);
            return;
          }
          if (y < 7 || y > ${n-1-7}) {
            setOutput(0.);
            return;
          }
          if (x < 7 || x > ${t-1-7}) {
            setOutput(0.);
            return;
          }
    
          bool isMax = true;
          bool isMin = true;
          for (int dy = -1; dy <= 1; dy++) {
            for (int dx = -1; dx <= 1; dx++) {
              float value0 = getImage0(y+dy, x+dx);
              float value1 = getImage1(y+dy, x+dx);
              float value2 = getImage2(y+dy, x+dx);
    
        if (value < value0 || value < value1 || value < value2) {
          isMax = false;
        }
        if (value > value0 || value > value1 || value > value2) {
          isMin = false;
        }
            }
          }
    
          if (!isMax && !isMin) {
            setOutput(0.);
            return;
          }
    
          // compute edge score and reject based on threshold
          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);
          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);
          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));
    
          float det = (dxx * dyy) - (dxy * dxy);
    
          if (abs(det) < 0.0001) { // determinant undefined. no solution
            setOutput(0.);
            return;
          }
    
          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;
    
          if (abs(edgeScore) >= 6.25 ) {
            setOutput(0.);
            return;
          }
          setOutput(getImage1(y,x));
        }
      `};vV[a]=e}return vV[a]}(n);return t=aG.runKernel("DownsampleBilinear",{image:t}),a=aG.runKernel("UpsampleBilinear",{image:a,targetImage:n}),r.runWebGLProgram(i,[t,n,a],n.dtype)}}),nw({kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:e=>{let{histograms:t}=e.inputs,n=e.backend,a=function(e){let t=e.shape[0];if(!vX.hasOwnProperty(t)){let n={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`
            void main() {
                int featureIndex = getOutputCoords();

                int maxIndex = 0;
                for (int i = 1; i < 36; i++) {
                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {
                        maxIndex = i;
                    }
                }

                int prev = imod(maxIndex - 1 + 36, 36);
                int next = imod(maxIndex + 1, 36);

                /**
                 * Fit a quatratic to 3 points. The system of equations is:
                 *
                 * y0 = A*x0^2 + B*x0 + C
                 * y1 = A*x1^2 + B*x1 + C
                 * y2 = A*x2^2 + B*x2 + C
                 *
                 * This system of equations is solved for A,B,C.
                 */
                float p10 = float(maxIndex - 1);
                float p11 = getHistogram(featureIndex, prev); 
                float p20 = float(maxIndex);
                float p21 = getHistogram(featureIndex, maxIndex); 
                float p30 = float(maxIndex + 1);
                float p31 = getHistogram(featureIndex, next); 

                float d1 = (p30-p20)*(p30-p10);
                float d2 = (p10-p20)*(p30-p10);
                float d3 = p10-p20;

                // If any of the denominators are zero then, just use maxIndex.
                    float fbin = float(maxIndex);
                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {
                float a = p10*p10;
                float b = p20*p20;

                // Solve for the coefficients A,B,C
                float A = ((p31-p21)/d1)-((p11-p21)/d2);
                float B = ((p11-p21)+(A*(b-a)))/d3;
                float C = p11-(A*a)-(B*p10);
                fbin = -B / (2. * A);
                }

                float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};
                setOutput(an);
            }
            `};vX[t]=n}return vX[t]}(t);return n.runWebGLProgram(a,[t],t.dtype)}}),nw({kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:e=>{let{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:a,freakPointsT:r,pyramidImagesLength:i}=e.inputs,s=e.backend,o=function(e,t){let n=`${e}|${t.shape[0]}`;if(!v$.hasOwnProperty(n)){let a=[];for(let t=1;t<e;t++)a.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)r+=`
  if (octave == ${t}) {
	return getImage${t}(y, x);
  }
`;r+="}";let i={variableNames:[...a,"extrema","angles","freakPoints"],outputShape:[t.shape[0],vE.length],userCode:`
  ${r}
  void main() {
	ivec2 coords = getOutputCoords();
	int featureIndex = coords[0];
	int freakIndex = coords[1];

	float freakSigma = getFreakPoints(freakIndex, 0);
	float freakX = getFreakPoints(freakIndex, 1);
	float freakY = getFreakPoints(freakIndex, 2);

	int octave = int(getExtrema(featureIndex, 1));
	float inputY = getExtrema(featureIndex, 2);
	float inputX = getExtrema(featureIndex, 3);
	float inputAngle = getAngles(featureIndex);
	float cos = 7. * cos(inputAngle);
	float sin = 7. * sin(inputAngle);

	float yp = inputY + freakX * sin + freakY * cos;
	float xp = inputX + freakX * cos + freakY * -sin;

	int x0 = int(floor(xp));
	int x1 = x0 + 1;
	int y0 = int(floor(yp));
	int y1 = y0 + 1;

	float f1 = getPixel(octave, y0, x0);
	float f2 = getPixel(octave, y0, x1);
	float f3 = getPixel(octave, y1, x0);
	float f4 = getPixel(octave, y1, x1);

	float x1f = float(x1);
	float y1f = float(y1);
	float x0f = float(x0);
	float y0f = float(y0);

	// ratio for interpolation between four neighbouring points
	float value = (x1f - xp) * (y1f - yp) * f1
		+ (xp - x0f) * (y1f - yp) * f2
		+ (x1f - xp) * (yp - y0f) * f3
		+ (xp - x0f) * (yp - y0f) * f4;

	setOutput(value);
  }
`};v$[n]=i}return v$[n]}(i,n);return s.runWebGLProgram(o,[...t,n,a,r],"float32")}}),nw({kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:e=>{let{extremaFreaks:t,positionT:n}=e.inputs,{backend:a}=e,r=function(e){let t=`${e.shape[0]}`;if(!vK.hasOwnProperty(t)){let n={variableNames:["freak","p"],outputShape:[e.shape[0],vZ],userCode:`
  void main() {
    ivec2 coords = getOutputCoords();
    int featureIndex = coords[0];
    int descIndex = coords[1] * 8;

    int sum = 0;
    for (int i = 0; i < 8; i++) {
      if (descIndex + i >= ${vF}) {
        continue;
      }

      int p1 = int(getP(descIndex + i, 0));
      int p2 = int(getP(descIndex + i, 1));

      float v1 = getFreak(featureIndex, p1);
      float v2 = getFreak(featureIndex, p2);

      if (v1 < v2 + 0.01) {
        sum += int(pow(2.0, float(7 - i)));
      }
    }
    setOutput(float(sum));
  }
`};vK[t]=n}return vK[t]}(t);return a.runWebGLProgram(r,[t,n],"int32")}}),nw({kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:e=>{let{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,a=e.backend,r=function(e,t){let n=`${e}|${t}`;if(!vD.hasOwnProperty(n)){let a=[],r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)a.push("image"+t),r+=`
				if (octave == ${t}) {
					return getImage${t}(y, x);
				}
			`;r+="}",vD[n]={variableNames:[...a,"extrema"],outputShape:[t,3,3],userCode:`
			${r}
		
			void main() {
				ivec3 coords = getOutputCoords();
				int featureIndex = coords[0];
				float score = getExtrema(featureIndex, 0);
				if (score == 0.0) {
					return;
				}
		
				int dy = coords[1]-1;
				int dx = coords[2]-1;
				int octave = int(getExtrema(featureIndex, 1));
				int y = int(getExtrema(featureIndex, 2));
				int x = int(getExtrema(featureIndex, 3));
				setOutput(getPixel(octave, y+dy, x+dx));
			}
			`}}return vD[n]}(n.length,t.length),i=aD(t,[t.length,t[0].length],"int32");return a.runWebGLProgram(r,[...n.slice(1),i],n[0].dtype)}}),nw({kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:e=>{let{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:a,pyramidImagesLength:r}=e.inputs,i=e.backend,[s,o]=function(e,t,n){let a=`${n}|${e.shape[0]}|${t.shape[0]}`;if(!vO.hasOwnProperty(a)){let r=[];for(let e=1;e<n;e++)r.push("image"+e);let i="float getPixel(int octave, int y, int x) {";for(let e=1;e<n;e++)i+=`
            if (octave == ${e}) {
                return getImage${e}(y, x);
            }
            `;i+="}";let s={variableNames:[...r,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:`
                ${i}

                void main() {
                    ivec3 coords = getOutputCoords();
                    int featureIndex = coords[0];
                    int radialIndex = coords[1];
                    int propertyIndex = coords[2];

                    int radialY = int(getRadial(radialIndex, 0));
                    int radialX = int(getRadial(radialIndex, 1));
                    float radialW = getRadial(radialIndex, 2);

                    int octave = int(getExtrema(featureIndex, 1));
                    int y = int(getExtrema(featureIndex, 2));
                    int x = int(getExtrema(featureIndex, 3));

                    int xp = x + radialX;
                    int yp = y + radialY;

                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);
                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);

                    if (propertyIndex == 0) {
                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0
                    
                    float angle = atan(dy, dx) + ${Math.PI};
                    float fbin = angle * 36. * 0.159154943091895;
                    setOutput(fbin);
                    return;
                    }

                    if (propertyIndex == 1) {
                        float mag = sqrt(dx * dx + dy * dy);
                        float magnitude = radialW * mag;
                        setOutput(magnitude);
                        return;
                    }
                }

                `},o={variableNames:["fbinMag"],outputShape:[e.shape[0],36],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int featureIndex = coords[0];
                int binIndex = coords[1];

                float sum = 0.;
                for (int i = 0; i < ${t.shape[0]}; i++) {
                    float fbin = getFbinMag(featureIndex, i, 0);
                    int bin = int(floor(fbin - 0.5));
                    int b1 = imod(bin + 36, 36);
                    int b2 = imod(bin + 1 + 36, 36);

                    if (b1 == binIndex || b2 == binIndex) {
                        float magnitude = getFbinMag(featureIndex, i, 1);
                        float w2 = fbin - float(bin) - 0.5;
                        float w1 = w2 * -1. + 1.;

                        if (b1 == binIndex) {
                            sum += w1 * magnitude;
                        }
                        if (b2 == binIndex) {
                            sum += w2 * magnitude;
                        }
                    }
                }
                setOutput(sum);
            }
            `};vO[a]=[s,o]}return vO[a]}(n,a,r),l=i.runWebGLProgram(s,[...t,n,a],a.dtype),u=i.runWebGLProgram(o,[l],a.dtype);return i.disposeIntermediateTensorInfo(l),u}}),nw({kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:e=>{let t=e.inputs.image,n=e.backend,a=function(e){let t=e.shape[1],n=e.shape[0],a="w"+t+"h"+n;if(!vA.hasOwnProperty(a)){let e={variableNames:["p"],outputShape:[Math.floor(n/2),Math.floor(t/2)],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int y = coords[0] * 2;
                int x = coords[1] * 2;
        
                float sum = getP(y, x) * 0.25;
                sum += getP(y+1,x) * 0.25; 
                sum += getP(y, x+1) * 0.25; 
                sum += getP(y+1,x+1) * 0.25;
                setOutput(sum);
            }
            `};vA[a]=e}return vA[a]}(t);return n.runWebGLProgram(a,[t],t.dtype)}}),nw({kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:e=>{let{extremasResultT:t}=e.inputs,n=e.backend,a={variableNames:["extrema"],outputShape:[Math.floor(t.shape[0]/2),Math.floor(t.shape[1]/2)],userCode:`
		  void main() {
			ivec2 coords = getOutputCoords();
			int y = coords[0] * 2;
			int x = coords[1] * 2;
  
			float location = 0.0;
			float values = getExtrema(y, x);
  
			if (getExtrema(y+1, x) != 0.0) {
			  location = 1.0;
		  values = getExtrema(y+1, x);
			}
			else if (getExtrema(y, x+1) != 0.0) {
			  location = 2.0;
		  values = getExtrema(y, x+1);
			}
			else if (getExtrema(y+1, x+1) != 0.0) {
			  location = 3.0;
		  values = getExtrema(y+1, x+1);
			}
  
			if (values < 0.0) {
			  setOutput(location * -1000.0 + values);
			} else {
			  setOutput(location * 1000.0 + values);
			}
		  }
		`};return n.runWebGLProgram(a,[t],t.dtype)}}),nw({kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:e=>{let{histograms:t}=e.inputs,n=e.backend,a=function(e){let t=`h${e.shape[0]}`;if(!vP.hasOwnProperty(t)){let n={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();

                int featureIndex = coords[0];
                int binIndex = coords[1];

                int prevBin = imod(binIndex - 1 + 36, 36);
                int nextBin = imod(binIndex + 1, 36);
                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);

                setOutput(result);
            }
            `};vP[t]=n}return vP[t]}(t);for(let e=0;e<5;e++){let r=t;t=n.runWebGLProgram(a,[t],t.dtype),e>0&&n.disposeIntermediateTensorInfo(r)}return t}}),nw({kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:e=>{let{image:t,targetImage:n}=e.inputs,a=e.backend,r=function(e,t){let n=t.shape[1],a=t.shape[0],r="w"+n+"h"+a;if(!vB.hasOwnProperty(r)){let e={variableNames:["p"],outputShape:[a,n],userCode:`
              void main() {
                ivec2 coords = getOutputCoords();
                int j = coords[0];
                int i = coords[1];
        
                float sj = 0.5 * float(j) - 0.25; 
                float si = 0.5 * float(i) - 0.25;
        
                float sj0 = floor(sj);
                float sj1 = ceil(sj);
                float si0 = floor(si);
                float si1 = ceil(si);
        
                int sj0I = int(sj0);
                int sj1I = int(sj1);
                int si0I = int(si0);
                int si1I = int(si1);
        
                float sum = 0.0;
                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);
                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);
                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);
                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);
                setOutput(sum);
              }
            `};vB[r]=e}return vB[r]}(0,n);return a.runWebGLProgram(r,[t],t.dtype)}}),vE.length,vE.length;class vH{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let a=0;for(;e>=8&&t>=8&&(e/=2,t/=2,5!=++a););this.numOctaves=a,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){let t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;let n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null,n=[];for(let t=0;t<this.numOctaves;t++){let a,r;a=0===t?this._applyFilter(e):this._downsampleBilinear(n[t-1][n[t-1].length-1]),r=this._applyFilter(a),n.push([a,r])}let a=[];for(let e=0;e<this.numOctaves;e++){let t=this._differenceImageBinomial(n[e][0],n[e][1]);a.push(t)}let r=[];for(let e=1;e<this.numOctaves-1;e++){let t=this._buildExtremas(a[e-1],a[e],a[e+1]);r.push(t)}let i=this._applyPrune(r),s=this._computeLocalization(i,a),o=this._computeOrientationHistograms(s,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),h=this._computeExtremaFreak(n,s,u),d=this._computeFreakDescriptors(h),c=s.arraySync(),p=u.arraySync(),f=d.arraySync();this.debugMode&&(t={pyramidImages:n.map(e=>e.map(e=>e.arraySync())),dogPyramidImages:a.map(e=>e?e.arraySync():null),extremasResults:r.map(e=>e.arraySync()),extremaAngles:u.arraySync(),prunedExtremas:i,localizedExtremas:s.arraySync()}),n.forEach(e=>e.forEach(e=>e.dispose())),a.forEach(e=>e&&e.dispose()),r.forEach(e=>e.dispose()),s.dispose(),o.dispose(),l.dispose(),u.dispose(),h.dispose(),d.dispose();let m=[];for(let e=0;e<c.length;e++){if(0==c[e][0])continue;let t=[];for(let n=0;n<f[e].length;n+=4){let a=f[e][n],r=0x1000000*a+65536*f[e][n+1]+256*f[e][n+2]+f[e][n+3];t.push(r)}let n=c[e][1],a=c[e][2],r=c[e][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=a*Math.pow(2,n)+Math.pow(2,n-1)-.5,s=Math.pow(2,n);m.push({maxima:c[e][0]>0,x:r,y:i,scale:s,angle:p[e],descriptors:t})}return{featurePoints:m,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){let t=[],n=[];for(let a=0;a<e.shape[1];a++)for(let r=a+1;r<e.shape[1];r++)t.push(a),n.push(r);let a=aD(t,[t.length]).cast("int32"),r=aD(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:aH(od([a,r],1))}}let{positionT:t}=this.tensorCaches.computeFreakDescriptors;return aP(()=>aG.runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t}))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||aP(()=>{let e=aD(vE);this.tensorCaches._computeExtremaFreak={freakPointsT:aH(e)}});let{freakPointsT:a}=this.tensorCaches._computeExtremaFreak,r=[];for(let t=1;t<e.length;t++)r.push(e[t][1]);return aP(()=>aG.runKernel("ComputeExtremaFreak",{gaussianImagesT:r,prunedExtremas:t,prunedExtremasAngles:n,freakPointsT:a,pyramidImagesLength:e.length}))}_computeExtremaAngles(e){return aP(()=>aG.runKernel("ComputeExtremaAngles",{histograms:e}))}_computeOrientationHistograms(e,t){let n=[];for(let e=1;e<t.length;e++)n.push(t[e][1]);this.tensorCaches.orientationHistograms||aP(()=>{let e=-1/18,t=Math.ceil(4.5),n=[];for(let a=-t;a<=t;a++)for(let r=-t;r<=t;r++){let t=r*r+a*a;if(t<=20.25){let i=t*e,s=(720+i*(720+i*(360+i*(120+i*(30+i*(6+i))))))*.0013888888;n.push([a,r,s])}}this.tensorCaches.orientationHistograms={radialPropertiesT:aH(aD(n,[n.length,3]))}});let{radialPropertiesT:a}=this.tensorCaches.orientationHistograms;return aP(()=>aG.runKernel("ComputeOrientationHistograms",{gaussianImagesT:n,prunedExtremasT:e,radialPropertiesT:a,pyramidImagesLength:t.length}))}_smoothHistograms(e){return aP(()=>aG.runKernel("SmoothHistograms",{histograms:e}))}_computeLocalization(e,t){return aP(()=>{let n=aG.runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),a=[];for(let e=0;e<n.length;e++){a.push([]);for(let t=0;t<n[e].length;t++)a[e].push([])}let r=[];for(let t=0;t<e.length;t++)r[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<r.length;e++){if(0===r[e][0])continue;let t=n[e],a=.5*(t[1][2]-t[1][0]),i=.5*(t[2][1]-t[0][1]),s=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],l=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),u=s*o-l*l,h=(-(o*a)+-(-l*i))/u,d=(-(-l*a)+-(s*i))/u,c=r[e][2]+d,p=r[e][3]+h;1e-4>Math.abs(u)||(r[e][2]=c,r[e][3]=p)}return aD(r,[r.length,r[0].length],"float32")})}_applyPrune(e){let t=[],n=[];for(let e=0;e<100;e++){n.push([]),t.push([]);for(let a=0;a<5;a++)n[e].push([0,0,0,0]),t[e].push(0)}aP(()=>{for(let a=0;a<e.length;a++){let r=aG.runKernel("ExtremaReduction",{extremasResultT:e[a]}),i=a+1,s=r.arraySync(),o=r.shape[0],l=r.shape[1],u=2*l/10,h=2*o/10;for(let e=0;e<o;e++)for(let a=0;a<l;a++){let r=s[e][a];if(0==r)continue;let o=r%1e3,l=Math.floor(Math.abs(r)/1e3),d=2*a+(2===l||3===l?1:0),c=2*e+(1===l||3===l?1:0),p=10*Math.floor(c/h)+Math.floor(d/u),f=Math.abs(o),m=5;for(;m>=1&&f>t[p][m-1];)m-=1;if(m<5){for(let e=4;e>=m+1;e--)t[p][e]=t[p][e-1],n[p][e][0]=n[p][e-1][0],n[p][e][1]=n[p][e-1][1],n[p][e][2]=n[p][e-1][2],n[p][e][3]=n[p][e-1][3];t[p][m]=f,n[p][m][0]=o,n[p][m][1]=i,n[p][m][2]=c,n[p][m][3]=d}}}});let a=[];for(let e=0;e<100;e++)for(let t=0;t<5;t++)a.push(n[e][t]);return a}_buildExtremas(e,t,n){return aP(()=>aG.runKernel("BuildExtremas",{image0:e,image1:t,image2:n}))}_differenceImageBinomial(e,t){return aP(()=>e.sub(t))}_applyFilter(e){return aP(()=>aG.runKernel("BinomialFilter",{image:e}))}_downsampleBilinear(e){return aP(()=>aG.runKernel("DownsampleBilinear",{image:e}))}_compileAndRun(e,t){let n=a_().compileAndRun(e,t);return aG.makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){let a=a_().runWebGLProgram(e,t,n);return aG.makeTensorFromDataId(a.dataId,a.shape,a.dtype)}}class vU{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let a=Math.pow(2,Math.round(Math.log(Math.min(e,t)/2)/Math.log(2)));this.cropSize=a,this.detector=new vH(a,a,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){let t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),a=this._detect(e,n,t);return this.debugMode&&(a.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),a}detectMoving(e){let t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3),a=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),r=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return r<0&&(r=0),a<0&&(a=0),r>=this.width-this.cropSize&&(r=this.width-this.cropSize-1),a>=this.height-this.cropSize&&(a=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,r,a)}_detect(e,t,n){let a=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:r,debugExtra:i}=this.detector.detect(a);return r.forEach(e=>{e.x+=t,e.y+=n}),this.debugMode&&(i.projectedImage=a.arraySync()),a.dispose(),{featurePoints:r,debugExtra:i}}}let v_=({image:e,ratio:t})=>{let n=Math.round(e.width*t),a=Math.round(e.height*t),r=new Uint8Array(n*a);for(let i=0;i<n;i++){let s=Math.round(1*i/t),o=Math.round(1*(i+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let h=0,d=0;for(let t=s;t<=o;t++)for(let n=a;n<=u;n++)h+=1*e.data[n*e.width+t],d+=1;r[l*n+i]=Math.floor(h/d)}}return{data:r,width:n,height:a}},vY=e=>{let t=100/Math.min(e.width,e.height),n=[],a=t;for(;;)if(n.push(a),(a*=Math.pow(2,1/3))>=.95){a=1;break}n.push(a),n.reverse();let r=[];for(let t=0;t<n.length;t++)e.width,n[t],e.height,n[t],r.push(Object.assign(v_({image:e,ratio:n[t]}),{scale:n[t]}));return r},vQ=e=>{let t=Math.min(e.width,e.height),n=[],a=[];n.push(256/t),n.push(128/t);for(let t=0;t<n.length;t++)a.push(Object.assign(v_({image:e,ratio:n[t]}),{scale:n[t]}));return a},vJ=e=>{let{v1:t,v2:n}=e,a=0;for(let e=0;e<t.length;e++)a+=vj((t[e]^n[e])>>>0);return a},vj=e=>{var t=e-(e>>1&0x55555555);return((t=((t=((t=(t>>2&0x33333333)+(0x33333333&t))>>4)+t&0xf0f0f0f)>>8)+t&0xff00ff)>>16)+t&65535},vq=()=>({seed:1234,arrayShuffle(e){let{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%-0x80000000;let n=this.seed>>16&32767;n%=t.length;let a=t[e];t[e]=t[n],t[n]=a}},nextInt(e){return this.seed=(214013*this.seed+2531011)%-0x80000000,(this.seed>>16&32767)%e}}),v0=e=>{let{points:t,pointIndexes:n,randomizer:a}=e,r=[];for(let e=0;e<n.length;e++)r.push(e);let i=Number.MAX_SAFE_INTEGER,s=-1,o=[];for(let e=0;e<128;e++){a.arrayShuffle({arr:r,sampleSize:8});let l=0,u=[];for(let e=0;e<n.length;e++){let a=Number.MAX_SAFE_INTEGER;for(let i=0;i<8;i++){let s=n[r[i]],o=vJ({v1:t[n[e]].descriptors,v2:t[s].descriptors});o<a&&(u[e]=r[i],a=o)}l+=a}o.push(u),l<i&&(i=l,s=e)}return o[s]},v1=({points:e})=>{let t=[];for(let n=0;n<e.length;n++)t.push(n);return{rootNode:v2({points:e,pointIndexes:t,centerPointIndex:null,randomizer:vq()})}},v2=e=>{let{points:t,pointIndexes:n,centerPointIndex:a,randomizer:r}=e,i=!1;(n.length<=8||n.length<=16)&&(i=!0);let s={};if(!i){let e=v0({points:t,pointIndexes:n,randomizer:r});for(let t=0;t<e.length;t++)void 0===s[n[e[t]]]&&(s[n[e[t]]]=[]),s[n[e[t]]].push(n[t])}1===Object.keys(s).length&&(i=!0);let o={centerPointIndex:a};if(i){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(s).forEach(e=>{o.children.push(v2({points:t,pointIndexes:s[e],centerPointIndex:e,randomizer:r}))}),o};function v3(e,t,n){var a=Math.floor(n/0x100000000);e.setUint32(t,a),e.setUint32(t+4,n)}function v9(e,t){return 0x100000000*e.getInt32(t)+e.getUint32(t+4)}var v5,v4,v7,v8,v6,Ie,It,In,Ia,Ir,Ii,Is,Io,Il,Iu,Ih,Id,Ic,Ip,If,Im,Ig,Ib,Iy,Ix,Ik,Iv,II,Iw,IS,IC,IT,IN=(typeof a>"u"||(null===(IS=null==a?void 0:a.env)||void 0===IS?void 0:IS.TEXT_ENCODING)!=="never")&&"u">typeof TextEncoder&&"u">typeof TextDecoder;function IR(e){for(var t=e.length,n=0,a=0;a<t;){var r=e.charCodeAt(a++);if(0xffffff80&r){if(0xfffff800&r){if(r>=55296&&r<=56319&&a<t){var i=e.charCodeAt(a);(64512&i)==56320&&(++a,r=((1023&r)<<10)+(1023&i)+65536)}0xffff0000&r?n+=4:n+=3}else n+=2}else{n++;continue}}return n}var IG=IN?new TextEncoder:void 0,IW=IN?"u">typeof a&&(null===(IC=null==a?void 0:a.env)||void 0===IC?void 0:IC.TEXT_ENCODING)!=="force"?200:0:0xffffffff,IL=null!=IG&&IG.encodeInto?function(e,t,n){IG.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(IG.encode(e),n)};function IM(e,t,n){for(var a=t,r=a+n,i=[],s="";a<r;){var o=e[a++];if(128&o){if((224&o)==192){var l=63&e[a++];i.push((31&o)<<6|l)}else if((240&o)==224){var l=63&e[a++],u=63&e[a++];i.push((31&o)<<12|l<<6|u)}else if((248&o)==240){var l=63&e[a++],u=63&e[a++],h=(7&o)<<18|l<<12|u<<6|63&e[a++];h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h)}else i.push(o)}else i.push(o);i.length>=4096&&(s+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(s+=String.fromCharCode.apply(String,i)),s}var IE=IN?new TextDecoder:null,Iz=IN?"u">typeof a&&(null===(IT=null==a?void 0:a.env)||void 0===IT?void 0:IT.TEXT_DECODER)!=="force"?200:0:0xffffffff,IV=function(e,t){this.type=e,this.data=t},IX=(nC=function(e,t){return(nC=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}nC(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),I$=function(e){function t(n){var a=e.call(this,n)||this;return Object.setPrototypeOf(a,Object.create(t.prototype)),Object.defineProperty(a,"name",{configurable:!0,enumerable:!1,value:t.name}),a}return IX(t,e),t}(Error),IF={type:-1,encode:function(e){var t,n,a,r;return e instanceof Date?function(e){var t=e.sec,n=e.nsec;if(t>=0&&n>=0&&t<=0x3ffffffff){if(0===n&&t<=0xffffffff){var a=new Uint8Array(4),r=new DataView(a.buffer);return r.setUint32(0,t),a}var i=t/0x100000000,a=new Uint8Array(8),r=new DataView(a.buffer);return r.setUint32(0,n<<2|3&i),r.setUint32(4,0xffffffff&t),a}var a=new Uint8Array(12),r=new DataView(a.buffer);return r.setUint32(0,n),v3(r,4,t),a}((n=Math.floor((t=e.getTime())/1e3),r=Math.floor((a=(t-1e3*n)*1e6)/1e9),{sec:n+r,nsec:a-1e9*r})):null},decode:function(e){var t=function(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:var n=t.getUint32(0),a=0;return{sec:n,nsec:0};case 8:var r=t.getUint32(0),n=(3&r)*0x100000000+t.getUint32(4),a=r>>>2;return{sec:n,nsec:a};case 12:var n=v9(t,4),a=t.getUint32(0);return{sec:n,nsec:a};default:throw new I$("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(e.length))}}(e);return new Date(1e3*t.sec+t.nsec/1e6)}},IZ=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(IF)}return e.prototype.register=function(e){var t=e.type,n=e.encode,a=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=a;else{var r=1+t;this.builtInEncoders[r]=n,this.builtInDecoders[r]=a}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++){var a=this.builtInEncoders[n];if(null!=a){var r=a(e,t);if(null!=r){var i=-1-n;return new IV(i,r)}}}for(var n=0;n<this.encoders.length;n++){var a=this.encoders[n];if(null!=a){var r=a(e,t);if(null!=r){var i=n;return new IV(i,r)}}}return e instanceof IV?e:null},e.prototype.decode=function(e,t,n){var a=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return a?a(e,t,n):new IV(t,e)},e.defaultCodec=new e,e}();function IK(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var ID=function(){function e(e,t,n,a,r,i,s,o){void 0===e&&(e=IZ.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=100),void 0===a&&(a=2048),void 0===r&&(r=!1),void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===o&&(o=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=a,this.sortKeys=r,this.forceFloat32=i,this.ignoreUndefined=s,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw Error("Too deep objects in depth ".concat(t));null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),a=new DataView(t);n.set(this.bytes),this.view=a,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<0x100000000?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-0x80000000?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else if(e<0x100000000)this.writeU8(219),this.writeU32(e);else throw Error("Too long string: ".concat(e," bytes in UTF-8"))},e.prototype.encodeString=function(e){if(e.length>IW){var t=IR(e);this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),IL(e,this.bytes,this.pos),this.pos+=t}else{var t=IR(e);this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),function(e,t,n){for(var a=e.length,r=n,i=0;i<a;){var s=e.charCodeAt(i++);if(0xffffff80&s){if(0xfffff800&s){if(s>=55296&&s<=56319&&i<a){var o=e.charCodeAt(i);(64512&o)==56320&&(++i,s=((1023&s)<<10)+(1023&o)+65536)}0xffff0000&s?(t[r++]=s>>18&7|240,t[r++]=s>>12&63|128):t[r++]=s>>12&15|224,t[r++]=s>>6&63|128}else t[r++]=s>>6&31|192}else{t[r++]=s;continue}t[r++]=63&s|128}}(e,this.bytes,this.pos),this.pos+=t}},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else if("object"==typeof e)this.encodeMap(e,t);else throw Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)))},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else if(t<0x100000000)this.writeU8(198),this.writeU32(t);else throw Error("Too large binary: ".concat(t));var n=IK(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n=e.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else if(n<0x100000000)this.writeU8(221),this.writeU32(n);else throw Error("Too large array: ".concat(n));for(var a=0;a<e.length;a++){var r=e[a];this.doEncode(r,t+1)}},e.prototype.countWithoutUndefined=function(e,t){for(var n=0,a=0;a<t.length;a++)void 0!==e[t[a]]&&n++;return n},e.prototype.encodeMap=function(e,t){var n=Object.keys(e);this.sortKeys&&n.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(e,n):n.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else if(a<0x100000000)this.writeU8(223),this.writeU32(a);else throw Error("Too large map object: ".concat(a));for(var r=0;r<n.length;r++){var i=n[r],s=e[i];this.ignoreUndefined&&void 0===s||(this.encodeString(i),this.doEncode(s,t+1))}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else if(t<0x100000000)this.writeU8(201),this.writeU32(t);else throw Error("Too large extension object: ".concat(t));this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){var t,n;this.ensureBufferSizeToWrite(8),t=this.view,n=this.pos,t.setUint32(n,e/0x100000000),t.setUint32(n+4,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),v3(this.view,this.pos,e),this.pos+=8},e}(),IO={};function IA(e){return"".concat(e<0?"-":"","0x").concat(Math.abs(e).toString(16).padStart(2,"0"))}var IP=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,n){var a=this.caches[n-1];e:for(var r=0;r<a.length;r++){for(var i=a[r],s=i.bytes,o=0;o<n;o++)if(s[o]!==e[t+o])continue e;return i.str}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],a={bytes:e,str:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=a:n.push(a)},e.prototype.decode=function(e,t,n){var a=this.find(e,t,n);if(null!=a)return this.hit++,a;this.miss++;var r=IM(e,t,n),i=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(i,r),r},e}(),IB=function(e,t){var n,a,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(r=2&i[0]?a.return:i[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,i[1])).done)return r;switch(a=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,a=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=(r=s.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],a=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},IH=function(e){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},a("next"),a("throw"),a("return"),t[Symbol.asyncIterator]=function(){return this},t);function a(n){t[n]=e[n]&&function(t){return new Promise(function(a,r){!function(e,t,n,a){Promise.resolve(a).then(function(t){e({value:t,done:n})},t)}(a,r,(t=e[n](t)).done,t.value)})}}},IU=function(e){return this instanceof IU?(this.v=e,this):new IU(e)},I_=function(e,t,n){if(!Symbol.asyncIterator)throw TypeError("Symbol.asyncIterator is not defined.");var a,r=n.apply(e,t||[]),i=[];return a={},s("next"),s("throw"),s("return"),a[Symbol.asyncIterator]=function(){return this},a;function s(e){r[e]&&(a[e]=function(t){return new Promise(function(n,a){i.push([e,t,n,a])>1||o(e,t)})})}function o(e,t){try{var n;(n=r[e](t)).value instanceof IU?Promise.resolve(n.value.v).then(l,u):h(i[0][2],n)}catch(e){h(i[0][3],e)}}function l(e){o("next",e)}function u(e){o("throw",e)}function h(e,t){e(t),i.shift(),i.length&&o(i[0][0],i[0][1])}},IY=function(e){var t=typeof e;return"string"===t||"number"===t},IQ=new DataView(new ArrayBuffer(0)),IJ=new Uint8Array(IQ.buffer),Ij=function(){try{IQ.getInt8(0)}catch(e){return e.constructor}throw Error("never reached")}(),Iq=new Ij("Insufficient data"),I0=new IP,I1=function(){function e(e,t,n,a,r,i,s,o){void 0===e&&(e=IZ.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=0xffffffff),void 0===a&&(a=0xffffffff),void 0===r&&(r=0xffffffff),void 0===i&&(i=0xffffffff),void 0===s&&(s=0xffffffff),void 0===o&&(o=I0),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=a,this.maxArrayLength=r,this.maxMapLength=i,this.maxExtLength=s,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=IQ,this.bytes=IJ,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},e.prototype.setBuffer=function(e){this.bytes=IK(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=IK(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining(1)){var t=this.bytes.subarray(this.pos),n=IK(e),a=new Uint8Array(t.length+n.length);a.set(t),a.set(n,t.length),this.setBuffer(a)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},e.prototype.createExtraByteError=function(e){var t=this.view,n=this.pos;return RangeError("Extra ".concat(t.byteLength-n," of ").concat(t.byteLength," byte(s) found at buffer[").concat(e,"]"))},e.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},e.prototype.decodeMulti=function(e){return IB(this,function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}})},e.prototype.decodeAsync=function(e){var t,n,a,r,i,s,o,l;return i=this,s=void 0,o=void 0,l=function(){var i,s,o,l,u,h,d;return IB(this,function(c){switch(c.label){case 0:i=!1,c.label=1;case 1:c.trys.push([1,6,7,12]),t=IH(e),c.label=2;case 2:return[4,t.next()];case 3:if((n=c.sent()).done)return[3,5];if(o=n.value,i)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{s=this.doDecodeSync(),i=!0}catch(e){if(!(e instanceof Ij))throw e}this.totalPos+=this.pos,c.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return a={error:c.sent()},[3,12];case 7:return c.trys.push([7,,10,11]),n&&!n.done&&(r=t.return)?[4,r.call(t)]:[3,9];case 8:c.sent(),c.label=9;case 9:return[3,11];case 10:if(a)throw a.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,s]}throw l=this,u=l.headByte,h=l.pos,d=l.totalPos,RangeError("Insufficient data in parsing ".concat(IA(u)," at ").concat(d," (").concat(h," in the current buffer)"))}})},new(o||(o=Promise))(function(e,t){function n(e){try{r(l.next(e))}catch(e){t(e)}}function a(e){try{r(l.throw(e))}catch(e){t(e)}}function r(t){var r;t.done?e(t.value):((r=t.value)instanceof o?r:new o(function(e){e(r)})).then(n,a)}r((l=l.apply(i,s||[])).next())})},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return I_(this,arguments,function(){var n,a,r,i,s,o,l,u;return IB(this,function(h){switch(h.label){case 0:n=t,a=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),r=IH(e),h.label=2;case 2:return[4,IU(r.next())];case 3:if((i=h.sent()).done)return[3,12];if(s=i.value,t&&0===a)throw this.createExtraByteError(this.totalPos);this.appendBuffer(s),n&&(a=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,IU(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--a?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof Ij))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l={error:h.sent()},[3,19];case 14:return h.trys.push([14,,17,18]),i&&!i.done&&(u=r.return)?[4,IU(u.call(r))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(l)throw l.error;return[7];case 18:return[7];case 19:return[2]}})})},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192){if(e<128)t=e;else if(e<144){var n=e-128;if(0!==n){this.pushMapState(n),this.complete();continue}t={}}else if(e<160){var n=e-144;if(0!==n){this.pushArrayState(n),this.complete();continue}t=[]}else{var a=e-160;t=this.decodeUtf8String(a,0)}}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e){var a=this.lookU8();t=this.decodeUtf8String(a,1)}else if(218===e){var a=this.lookU16();t=this.decodeUtf8String(a,2)}else if(219===e){var a=this.lookU32();t=this.decodeUtf8String(a,4)}else if(220===e){var n=this.readU16();if(0!==n){this.pushArrayState(n),this.complete();continue}t=[]}else if(221===e){var n=this.readU32();if(0!==n){this.pushArrayState(n),this.complete();continue}t=[]}else if(222===e){var n=this.readU16();if(0!==n){this.pushMapState(n),this.complete();continue}t={}}else if(223===e){var n=this.readU32();if(0!==n){this.pushMapState(n),this.complete();continue}t={}}else if(196===e){var n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e){var n=this.lookU16();t=this.decodeBinary(n,2)}else if(198===e){var n=this.lookU32();t=this.decodeBinary(n,4)}else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e){var n=this.lookU8();t=this.decodeExtension(n,1)}else if(200===e){var n=this.lookU16();t=this.decodeExtension(n,2)}else if(201===e){var n=this.lookU32();t=this.decodeExtension(n,4)}else throw new I$("Unrecognized type byte: ".concat(IA(e)));this.complete();for(var r=this.stack;r.length>0;){var i=r[r.length-1];if(0===i.type){if(i.array[i.position]=t,i.position++,i.position===i.size)r.pop(),t=i.array;else continue e}else if(1===i.type){if(!IY(t))throw new I$("The type of key must be string or number but "+typeof t);if("__proto__"===t)throw new I$("The key __proto__ is not allowed");i.key=t,i.type=2;continue e}else if(i.map[i.key]=t,i.readCount++,i.readCount===i.size)r.pop(),t=i.map;else{i.key=null,i.type=1;continue e}}return t}},e.prototype.readHeadByte=function(){return -1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new I$("Unrecognized array type byte: ".concat(IA(e)))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new I$("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new I$("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){if(e>this.maxStrLength)throw new I$("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw Iq;var n,a,r,i=this.pos+t;return this.stateIsMapKey()&&!(null===(a=this.keyDecoder)||void 0===a)&&a.canBeCached(e)?r=this.keyDecoder.decode(this.bytes,i,e):e>Iz?(n=this.bytes.subarray(i,i+e),r=IE.decode(n)):r=IM(this.bytes,i,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new I$("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw Iq;var n=this.pos+t,a=this.bytes.subarray(n,n+e);return this.pos+=t+e,a},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new I$("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+t),a=this.decodeBinary(e,t+1);return this.extensionCodec.decode(a,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,0x100000000*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=v9(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),I2={};class I3{constructor(){this.data=null}compileImageTargets(e,t){return new Promise(async(n,a)=>{let r=[];for(let t=0;t<e.length;t++){let n=e[t],a=this.createProcessCanvas(n).getContext("2d");a.drawImage(n,0,0,n.width,n.height);let i=a.getImageData(0,0,n.width,n.height),s=new Uint8Array(n.width*n.height);for(let e=0;e<s.length;e++){let t=4*e;s[e]=Math.floor((i.data[t]+i.data[t+1]+i.data[t+2])/3)}let o={data:s,height:n.height,width:n.width};r.push(o)}let i=50/r.length,s=0;this.data=[];for(let e=0;e<r.length;e++){let n=r[e],a=vY(n),o=i/a.length,l=await I9(a,()=>{t(s+=o)});this.data.push({targetImage:n,imageList:a,matchingData:l})}for(let e=0;e<r.length;e++){let t=vQ(r[e]);this.data[e].trackingImageList=t}let o=await this.compileTrack({progressCallback:t,targetImages:r,basePercent:50});for(let e=0;e<r.length;e++)this.data[e].trackingData=o[e];n(this.data)})}exportData(){var e,t;let n=[];for(let e=0;e<this.data.length;e++)n.push({targetImage:{width:this.data[e].targetImage.width,height:this.data[e].targetImage.height},trackingData:this.data[e].trackingData,matchingData:this.data[e].matchingData});return e={v:2,dataList:n},void 0===t&&(t=IO),new ID(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encodeSharedRef(e)}importData(e){var t,n;let a=(t=new Uint8Array(e),void 0===n&&(n=I2),new I1(n.extensionCodec,n.context,n.maxStrLength,n.maxBinLength,n.maxArrayLength,n.maxMapLength,n.maxExtLength).decode(t));if(!a.v||2!==a.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];let{dataList:r}=a;this.data=[];for(let e=0;e<r.length;e++)this.data.push({targetImage:r[e].targetImage,trackingData:r[e].trackingData,matchingData:r[e].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){console.warn("missing compileTrack implementation")}}let I9=async(e,t)=>{let n=[];for(let a=0;a<e.length;a++){let r=e[a],i=new vH(r.width,r.height);await lR(),aP(()=>{let e=aD(r.data,[r.data.length],"float32").reshape([r.height,r.width]),{featurePoints:s}=i.detect(e),o=s.filter(e=>e.maxima),l=s.filter(e=>!e.maxima),u=v1({points:o}),h=v1({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:h,width:r.width,height:r.height,scale:r.scale}),t(a)})}return n},I5="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",I4="u">typeof window&&window.Blob&&new Blob([atob(I5)],{type:"text/javascript;charset=utf-8"});function I7(e){let t;try{if(!(t=I4&&(window.URL||window.webkitURL).createObjectURL(I4)))throw"";let n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(t)}),n}catch{return new Worker("data:application/javascript;base64,"+I5,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}class I8 extends I3{createProcessCanvas(e){let t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){return new Promise((a,r)=>{let i=new I7;i.onmessage=t=>{"progress"===t.data.type?e(n+t.data.percent*n/100):"compileDone"===t.data.type&&a(t.data.list)},i.postMessage({type:"compile",targetImages:t})})}}class I6{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];let n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);let a=a_();this.tempPixelHandle=a.makeTensorInfo(this.texShape,"float32"),a.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return aP(()=>lu(e).mean(2))}loadInput(e){let t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let n=this.context.canvas.width/2,a=this.context.canvas.height/2;t.save(),t.translate(n,a),t.rotate(90*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);let n=a_();return n.gpgpu.uploadPixelDataToTexture(n.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){let n=2===B.getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`
	void main() {
	  ivec2 coords = getOutputCoords();
	  int texR = coords[0];
	  int texC = coords[1];
	  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);

	  vec4 values = ${n}(A, uv);
	  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);
	}
      `}}_compileAndRun(e,t){let n=a_().compileAndRun(e,t);return aG.makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){let a=a_().runWebGLProgram(e,t,n);return aG.makeTensorFromDataId(a.dataId,a.shape,a.dtype)}}let we=(e,t)=>{let n=2*Math.PI*t*e;return n/(n+1)},wt=(e,t,n)=>e*t+(1-e)*n;class wn{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map(()=>0),this.tPrev=e,t;let{xPrev:n,tPrev:a,dxPrev:r}=this,i=e-a,s=we(i,this.dCutOff),o=[],l=[],u=[];for(let e=0;e<t.length;e++){o[e]=(t[e]-n[e])/i,l[e]=wt(s,o[e],r[e]);let a=we(i,this.minCutOff+this.beta*Math.abs(l[e]));u[e]=wt(a,t[e],n[e])}return this.xPrev=u,this.dxPrev=l,this.tPrev=e,u}}let wa={memory:aA,nextFrame:lR};class wr{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:a=!1,maxTrack:r=1,warmupTolerance:i=null,missTolerance:s=null,filterMinCF:o=null,filterBeta:l=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=r,this.filterMinCF=null===o?.001:o,this.filterBeta=null===l?1e3:l,this.warmupTolerance=null===i?5:i,this.missTolerance=null===s?5:s,this.cropDetector=new vU(this.inputWidth,this.inputHeight,a),this.inputLoader=new I6(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=a,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];let u=45*Math.PI/180,h=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[h,0,this.inputWidth/2],[0,h,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new vN,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(wa.memory().numTensors),console.table(wa.memory())}addImageTargets(e){return new Promise(async(t,n)=>{let a=await (await fetch(e)).arrayBuffer();t(this.addImageTargetsFromBuffer(a))})}addImageTargetsFromBuffer(e){let t=new I8().importData(e),n=[],a=[],r=[];for(let e=0;e<t.length;e++)a.push(t[e].matchingData),n.push(t[e].trackingData),r.push([t[e].targetImage.width,t[e].targetImage.height]);return this.tracker=new vL(r,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:a}),this.markerDimensions=r,{dimensions:r,matchingDataList:a,trackingDataList:n}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){let t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){let{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:a,modelViewTransform:r}=await this._workerMatch(n,t);return{targetIndex:a,modelViewTransform:r}}async _trackAndUpdate(e,t,n){let{worldCoords:a,screenCoords:r}=this.tracker.track(e,t,n);return a.length<4?null:await this._workerTrackUpdate(t,{worldCoords:a,screenCoords:r})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new wn({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){let t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce((e,t)=>e+(t.isTracking?1:0),0)<this.maxTrack){let e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));let{targetIndex:n,modelViewTransform:a}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=a)}for(let n=0;n<this.trackingStates.length;n++){let a=this.trackingStates[n];if(a.isTracking){let e=await this._trackAndUpdate(t,a.currentModelViewTransform,n);null===e?a.isTracking=!1:a.currentModelViewTransform=e}if(a.showing||a.isTracking&&(a.trackMiss=0,a.trackCount+=1,a.trackCount>this.warmupTolerance&&(a.showing=!0,a.trackingMatrix=null,a.filter.reset())),a.showing&&(a.isTracking?a.trackMiss=0:(a.trackCount=0,a.trackMiss+=1,a.trackMiss>this.missTolerance&&(a.showing=!1,a.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:null})))),a.showing){let t=this._glModelViewMatrix(a.currentModelViewTransform,n);a.trackingMatrix=a.filter.filter(Date.now(),t);let r=[];for(let e=0;e<a.trackingMatrix.length;e++)r[e]=a.trackingMatrix[e];e.width===this.inputHeight&&e.height===this.inputWidth&&(r=this.getRotatedZ90Matrix(r)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:r})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await wa.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){let t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:a}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:a}}async match(e,t){let{modelViewTransform:n,debugExtra:a}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:a}}async track(e,t,n){let a=this.inputLoader.loadInput(e),r=this.tracker.track(a,t,n);return a.dispose(),r}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise(async(n,a)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})})}_workerTrackUpdate(e,t){return new Promise(async(n,a)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};let{worldCoords:r,screenCoords:i}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:r,screenCoords:i})})}_glModelViewMatrix(e,t){let n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:a,far:r}){let i=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(r+a)/(r-a),-2*r*a/(r-a)],[0,0,-1,0]],s=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)s.push(i[t][e]);return s}}let wi=`<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`,ws=`<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`,wo=`<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`;class wl{constructor({uiLoading:e,uiScanning:t,uiError:n}){let a=document.createElement("style");a.innerText=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}",document.head.appendChild(a),"yes"===e?this.loadingModal=this._loadHTML(wi):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(ws):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(wo):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){let t=document.createElement("template");t.innerHTML=e.trim();let n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE={Controller:wr,Compiler:I8,UI:wl},AFRAME.registerSystem("mindar-image-system",{container:null,video:null,processingImage:!1,init:function(){this.anchorEntities=[]},tick:function(){},setup:function({imageTargetSrc:e,maxTrack:t,showStats:n,uiLoading:a,uiScanning:r,uiError:i,missTolerance:s,warmupTolerance:o,filterMinCF:l,filterBeta:u}){this.imageTargetSrc=e,this.maxTrack=t,this.filterMinCF=l,this.filterBeta=u,this.missTolerance=s,this.warmupTolerance=o,this.showStats=n,this.ui=new wl({uiLoading:a,uiScanning:r,uiError:i})},registerAnchor:function(e,t){this.anchorEntities.push({el:e,targetIndex:t})},start:function(){this.container=this.el.sceneEl.parentNode,this.showStats&&(this.mainStats=new Stats,this.mainStats.showPanel(0),this.mainStats.domElement.style.cssText="position:absolute;top:0px;left:0px;z-index:999",this.container.appendChild(this.mainStats.domElement)),this.ui.showLoading(),this._startVideo()},switchTarget:function(e){this.controller.interestedTargetIndex=e},stop:function(){this.pause(),this.video.srcObject.getTracks().forEach(function(e){e.stop()}),this.video.remove(),this.controller.dispose()},pause:function(e=!1){e||this.video.pause(),this.controller.stopProcessVideo()},unpause:function(){this.video.play(),this.controller.processVideo(this.video)},_startVideo:function(){if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){this.el.emit("arError",{error:"VIDEO_FAIL"}),this.ui.showCompatibility();return}navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(e=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),this._startAR()}),this.video.srcObject=e}).catch(e=>{console.log("getUserMedia error",e),this.el.emit("arError",{error:"VIDEO_FAIL"})})},_startAR:async function(){let e=this.video;this.container,this.controller=new wr({inputWidth:e.videoWidth,inputHeight:e.videoHeight,maxTrack:this.maxTrack,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,missTolerance:this.missTolerance,warmupTolerance:this.warmupTolerance,onUpdate:e=>{if("processDone"===e.type)this.mainStats&&this.mainStats.update();else if("updateMatrix"===e.type){let{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchorEntities.length;e++)this.anchorEntities[e].targetIndex===t&&this.anchorEntities[e].el.updateWorldMatrix(n);this.anchorEntities.reduce((e,t)=>e||t.el.el.object3D.visible,!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this._resize(),window.addEventListener("resize",this._resize.bind(this));let{dimensions:t}=await this.controller.addImageTargets(this.imageTargetSrc);for(let e=0;e<this.anchorEntities.length;e++){let{el:n,targetIndex:a}=this.anchorEntities[e];a<t.length&&n.setupMarker(t[a])}await this.controller.dummyRun(this.video),this.el.emit("arReady"),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video)},_resize:function(){let e,t;let n=this.video,a=this.container,r=n.videoWidth/n.videoHeight;r>a.clientWidth/a.clientHeight?e=(t=a.clientHeight)*r:t=(e=a.clientWidth)/r;let i=this.controller.getProjectionMatrix(),s=2*Math.atan(1/i[5]/t*a.clientHeight)*180/Math.PI,o=i[14]/(i[10]-1),l=i[14]/(i[10]+1);i[5],i[0];let u=a.clientWidth/a.clientHeight,h=a.getElementsByTagName("a-camera")[0].getObject3D("camera");h.fov=s,h.aspect=u,h.near=o,h.far=l,h.updateProjectionMatrix(),this.video.style.top=-(t-a.clientHeight)/2+"px",this.video.style.left=-(e-a.clientWidth)/2+"px",this.video.style.width=e+"px",this.video.style.height=t+"px"}}),AFRAME.registerComponent("mindar-image",{dependencies:["mindar-image-system"],schema:{imageTargetSrc:{type:"string"},maxTrack:{type:"int",default:1},filterMinCF:{type:"number",default:-1},filterBeta:{type:"number",default:-1},missTolerance:{type:"int",default:-1},warmupTolerance:{type:"int",default:-1},showStats:{type:"boolean",default:!1},autoStart:{type:"boolean",default:!0},uiLoading:{type:"string",default:"yes"},uiScanning:{type:"string",default:"yes"},uiError:{type:"string",default:"yes"}},init:function(){let e=this.el.sceneEl.systems["mindar-image-system"];e.setup({imageTargetSrc:this.data.imageTargetSrc,maxTrack:this.data.maxTrack,filterMinCF:-1===this.data.filterMinCF?null:this.data.filterMinCF,filterBeta:-1===this.data.filterBeta?null:this.data.filterBeta,missTolerance:-1===this.data.missTolerance?null:this.data.missTolerance,warmupTolerance:-1===this.data.warmupTolerance?null:this.data.warmupTolerance,showStats:this.data.showStats,uiLoading:this.data.uiLoading,uiScanning:this.data.uiScanning,uiError:this.data.uiError}),this.data.autoStart&&this.el.sceneEl.addEventListener("renderstart",()=>{e.start()})},remove:function(){this.el.sceneEl.systems["mindar-image-system"].stop()}}),AFRAME.registerComponent("mindar-image-target",{dependencies:["mindar-image-system"],schema:{targetIndex:{type:"number"}},postMatrix:null,init:function(){this.el.sceneEl.systems["mindar-image-system"].registerAnchor(this,this.data.targetIndex),this.invisibleMatrix=new AFRAME.THREE.Matrix4().set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let e=this.el.object3D;e.visible=!1,e.matrixAutoUpdate=!1,e.matrix=this.invisibleMatrix},setupMarker([e,t]){let n=new AFRAME.THREE.Vector3,a=new AFRAME.THREE.Quaternion,r=new AFRAME.THREE.Vector3;n.x=e/2,n.y=e/2+(t-e)/2,r.x=e,r.y=e,r.z=e,this.postMatrix=new AFRAME.THREE.Matrix4,this.postMatrix.compose(n,a,r)},updateWorldMatrix(e){if(this.el.emit("targetUpdate"),this.el.object3D.visible||null===e?this.el.object3D.visible&&null===e&&this.el.emit("targetLost"):this.el.emit("targetFound"),this.el.object3D.visible=null!==e,null===e){this.el.object3D.matrix=this.invisibleMatrix;return}var t=new AFRAME.THREE.Matrix4;t.elements=e,t.multiply(this.postMatrix),this.el.object3D.matrix=t}})}()}}]);